#target illustrator/* How to open PS from Illustrator (doesn't work yet with flash)For reference you can pass in the name of a file too i.e. Ai's active document (t)//var t = app.activeDocument.fullName;  //photoshop.open(new File(t));*/var doc, dest, file;var manafest = [];init();function init(){	//Get all the files we need to work on	file = new File("/Users/sjpeaster/Projects/SantaCode_2014/sourcefiles/illustrator/test.ai");	app.open(file);	//Get the Build folder destination	dest = new File("/Users/sjpeaster/Projects/SantaCode_2014/build");	resetDoc();	for (var i = doc.artboards.length; i > 0; i--){		var index = i-1;		genSpriteSheet(doc, index);		doc.artboards.setActiveArtboardIndex(index);		exportPNG(doc, (dest + "/" + doc.artboards[index].name + ".png"), 100);		//Seperate this into two steps 1st - make sprite sheets		//then export pngs for each artboard - because now there will be twice as many		//make yourself a for each function with callback if there isn't one already		//Think about checking all artboard rects and then ensuring that the sprite sheets don't intersect with any others		//either throwing all the sprite sheets to the right or putting them underneith		//This might be more work than is worth it..		//Focus on actually making the sprite sheet first because it's unlickely that there will be more than one.		//Lets do this. Hide all layers		//Put the sprite sheet just to the right of origional		//copy the origionals into the sprite sheet		//save the sprite origional and sprite sheet images		//remove the sprite sheet and ss layers	}}//Set doc to the active document if one existsfunction resetDoc(){	if (app.documents.length > 0){		doc = app.activeDocument;	} else {		alert('Please open an Illustrator file');	}}function exportPNG(doc, dest, scale){	var fileSpec = new File(dest);	var type = ExportType.PNG24;	var exportOptions = new ExportOptionsPNG24();	exportOptions.antiAliasing = false;	exportOptions.artBoardClipping = true;	exportOptions.transparency = true;	exportOptions.saveAsHTML = true;	exportOptions.horizontalScale = scale;	exportOptions.verticalScale = scale;	doc.exportFile( fileSpec, type, exportOptions );}function newRect(x, y, width, height) {      var l = 0;      var t = 1;      var r = 2;      var b = 3;      var rect = [];      rect[l] = x;      rect[t] = -y;      rect[r] = width + x;      rect[b] = -(height - rect[t]);      return rect;  };  function genSpriteSheet(doc, artboard){	var curRect = doc.artboards[artboard].artboardRect;	var x = Math.ceil(curRect[0]);	var y = Math.floor(curRect[1]);	var width = Math.ceil(doc.width);	var height = Math.ceil(doc.height);	//creates a new artboard with special name	if(doc.artboards.length < 100) doc.artboards.insert(newRect(x + width + 10, -y, width, height), artboard+1);	else {		alert("Too many artboards in this document."		+ "\nCannot create a sprite sheet until you remove at least one artboard.");	}	return;	//builds a manafest for each layer in @param:artboard	//calculates the best way to fit everything	//Biggest to Smallest, Left to Right, Top to Bottom	//update the manafest as it goes}/* manafestItem info:	* @param:layer <int> the layer index	* @param:name <string> the layer name	* @param:x <float> the x position of this layer in the document (assuming top-left origin)	* @param:y <float> the y position of this layer in the document (assuming top-left origin)	* @param:ssX <flaot> the x position of this layer in the Sprite Sheet (requires top-left origin)	* @param:ssY <flaot> the y position of this layer in the Sprite Sheet (requires top-left origin)	* @param:width <flaot> the width of the layer in pixels	* @param:height <float> the height of the layer in pixels*/function manafestItem(layer, name, x, y, ssX, ssY, width, height){	this.layer = layer;	this.name = name;	this.x = x;	this.y = y;	this.ssX = ssX;	this.ssY = ssY;	this.width = width;	this.height = height;}/*var numLayers = doc.layers.length;var numArtboards = doc.artboards.length;var rect = doc.artboards[0].artboardRect;alert(rect);var width = activeDocument.artboards[0].artboardRect[2];var height = activeDocument.artboards[0].artboardRect[3];alert(width + " | " + height);*/