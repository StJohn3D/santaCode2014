menu();function archs(){	win.close();	var omf = 2.834645;	var x = 0;	var y  = 0;	var l = 0;		if (win.allGroups6.allGroups7.standard.value==true){		var spreadxcorr = 0;		var spreadycorr = 0;	}else{		var spreadxcorr = new Number(win.allGroups6.allGroups7.spreadxgroup.et.text);		var spreadycorr = new Number(win.allGroups6.allGroups7.spreadygroup.et.text);		}	var correction = win.allGroups6.allGroups3.heightgroup.et.text/100;	var colorname = 0;	if (win.allGroups6.allGroups3.curvegroup.ddl.selection==0){		var size = (Math.sin(l)*win.allGroups6.allGroups3.sizegroup.et.text);	}	if (win.allGroups6.allGroups3.curvegroup.ddl.selection==1){		var size = (Math.cos(l)*win.allGroups6.allGroups3.sizegroup.et.text);	}	if (win.allGroups6.allGroups3.curvegroup.ddl.selection==2){		var size = (Math.tan(l)*win.allGroups6.allGroups3.sizegroup.et.text);	}	verschuivingx = 0;	verschuivingy = 0;	docPreset = new DocumentPreset;	docPreset.width = 100*omf;	docPreset.colorMode = DocumentColorSpace.CMYK	docPreset.previewMode = DocumentPreviewMode.OverprintPreview;	docPreset.rasterResolution = DocumentRasterResolution.HighResolution;	docPreset.title = 'SmileIT Wave';	docPreset.rulerUnits = RulerUnits.Millimeters;	docPreset.height = (100*omf);	docPreset.name = 'SmileIT Wave';	var doc = app.documents.addDocument(DocumentColorSpace.CMYK,docPreset);	app.activeDocument.layers[0].name = 'SmileIT Wave';	// set white	var endColor = new CMYKColor();	endColor.cyan = 0;	endColor.magenta = 0;	endColor.yellow = 0;	endColor.black = 0;	// set black	var blackColor = new CMYKColor();	blackColor.cyan = 0;	blackColor.magenta = 0;	blackColor.yellow = 0;	blackColor.black = 100;		// Set Color	var newSpot = doc.spots.add();	var newColor = new CMYKColor();	newSpot.name = 'Wave' + colorname;	newSpot.colorType = ColorModel.PROCESS;	newSpot.color = newColor;	var newSpotColor = new SpotColor();	newSpotColor.spot = newSpot;	for (var m = 0; m < win.allGroups6.allGroups5.columngroup.et.text; m++ ) {	if (win.allGroups6.allGroups.randomcolor.value==true){		newColor.cyan = Math.random()*100;		newColor.magenta = Math.random()*100;		newColor.yellow = Math.random()*100;		newColor.black = Math.random()*100;	} else {		newColor.cyan = win.allGroups6.allGroups.cyangroup.et.text;		newColor.magenta = win.allGroups6.allGroups.magentagroup.et.text;		newColor.yellow = win.allGroups6.allGroups.yellowgroup.et.text;		newColor.black = win.allGroups6.allGroups.blackgroup.et.text;	}		// Set gradient	var newGradient = doc.gradients.add();	newGradient.name = 'Wave Gradient' + colorname;	newGradient.type = GradientType.LINEAR;	newGradient.gradientStops[0].rampPoint = 0;	newGradient.gradientStops[0].color = newColor;	newGradient.gradientStops[1].rampPoint = 100;	newGradient.gradientStops[1].color = endColor;	var colorOfGradient = new GradientColor();	colorOfGradient.gradient = newGradient;			for (var k = 0; k < win.allGroups6.allGroups5.rowsgroup.et.text; k++ ) {			if(win.allGroups6.allGroups4.radio1.value==true){				if (size < 0){ var size = 0 };			}			if(win.allGroups6.allGroups4.radio2.value==true){				if (size > 0){ var size = 0 };			}			var artworkgroup = doc.groupItems.add();							// Bottom			var box = artworkgroup.pathItems.ellipse(((y+12.071-verschuivingy+size)*omf), ((x+0+verschuivingx)*omf), 7.071*omf, 7.071*omf);			box.filled = true;			box.fillOverprint = false;			box.fillColor = doc.swatches['Wave' + colorname].color;			box.fillColor.tint = win.allGroups6.allGroups2.percentagetopgroup.et.text;			box.stroked = true;			box.strokeColor = blackColor;			box.strokeWeight = 0.353 *omf;						// Smile			var box = artworkgroup.pathItems.ellipse(((y+9.41-verschuivingy+size)*omf), ((x+1.771+verschuivingx)*omf), 3.528*omf, 3.528*omf);			box.filled = true;			box.fillOverprint = false;			box.fillColor = doc.swatches['Wave' + colorname].color;			box.fillColor.tint = win.allGroups6.allGroups2.percentagetopgroup.et.text;			box.stroked = true;			box.strokeColor = blackColor;			box.strokeWeight = 0.353 *omf;						// Smile cover			var box = artworkgroup.pathItems.rectangle(((y+10.672-verschuivingy+size)*omf), ((x+1.231+verschuivingx)*omf), 4.575*omf, 3.25*omf);			box.filled = true;			box.fillOverprint = false;			box.fillColor = doc.swatches['Wave' + colorname].color;			box.fillColor.tint = win.allGroups6.allGroups2.percentagetopgroup.et.text;			box.stroked = false;			// Eye white			var box = artworkgroup.pathItems.ellipse(((y+10.672-verschuivingy+size)*omf), ((x+1.419+verschuivingx)*omf), 1.764*omf, 2.469*omf);			box.filled = true;			box.fillOverprint = false;			box.fillColor = endColor;			box.stroked = false;						var box = artworkgroup.pathItems.ellipse(((y+10.672-verschuivingy+size)*omf), ((x+3.888+verschuivingx)*omf), 1.764*omf, 2.469*omf);			box.filled = true;			box.fillOverprint = false;			box.fillColor = endColor;			box.stroked = false;			// Eye black			var box = artworkgroup.pathItems.ellipse(((y+9.261-verschuivingy+size)*omf), ((x+1.771+verschuivingx)*omf), 1.058*omf, 1.058*omf);			box.filled = true;			box.fillOverprint = false;			box.fillColor = blackColor;			box.stroked = false;						var box = artworkgroup.pathItems.ellipse(((y+9.261-verschuivingy+size)*omf), ((x+4.241+verschuivingx)*omf), 1.058*omf, 1.058*omf);			box.filled = true;			box.fillOverprint = false;			box.fillColor = blackColor;			box.stroked = false;						l = l + correction;			verschuivingx = verschuivingx + 3.535+spreadxcorr;			verschuivingy = verschuivingy + 3.536+spreadycorr;			if (win.allGroups6.allGroups3.curvegroup.ddl.selection==0){				var size = (Math.sin(l)*win.allGroups6.allGroups3.sizegroup.et.text);			}			if (win.allGroups6.allGroups3.curvegroup.ddl.selection==1){				var size = (Math.cos(l)*win.allGroups6.allGroups3.sizegroup.et.text);			}			if (win.allGroups6.allGroups3.curvegroup.ddl.selection==2){				var size = (Math.tan(l)*win.allGroups6.allGroups3.sizegroup.et.text);			}					colorname = colorname + 1;						var newSpot = doc.spots.add();			var newColor = new CMYKColor();			if (win.allGroups6.allGroups.randomcolor.value==true){				newColor.cyan = Math.random()*100;				newColor.magenta = Math.random()*100;				newColor.yellow = Math.random()*100;				newColor.black = Math.random()*100;			} else {				newColor.cyan = win.allGroups6.allGroups.cyangroup.et.text;				newColor.magenta = win.allGroups6.allGroups.magentagroup.et.text;				newColor.yellow = win.allGroups6.allGroups.yellowgroup.et.text;				newColor.black = win.allGroups6.allGroups.blackgroup.et.text;			}			newSpot.name = 'Wave' + colorname;			newSpot.colorType = ColorModel.PROCESS;			newSpot.color = newColor;			var newSpotColor = new SpotColor();			newSpotColor.spot = newSpot;		};			verschuivingx = 0;		verschuivingy = 0;		x = x - 3.535 - spreadxcorr;		y  = y - 3.536 - spreadycorr;		l = l + correction;	};	var illustratorversion = app.version;	var illustratorversionarray = illustratorversion.split('.');	if(illustratorversionarray[0]>13){		app.activeDocument.artboards[0].artboardRect = app.activeDocument.visibleBounds;	}	zet_nulpunt();	zoomcenterpage()};function menu(){	res =	"dialog { \		text:'SmileIT:', \		properties:{ closeOnKey:'OSCmnd+W', resizeable:false}, \			ddl: DropDownList { alignment:'left', preferredSize: [260, 20] }, \			allGroups6: Panel { orientation:'stack', alignChildren:'top', preferredSize: [200, 20],\			text: 'Color', \			allGroups: Group { alignment:'left', orientation:'column', preferredSize: [200, 20], alignChildren:'top', \			cyangroup: Group { alignment:'left',\				st: StaticText { text:'Cyan     :' }, \				sl: Slider { minvalue:0, maxvalue:100, value:0 }, \				et: EditText { characters:4, justify:'right' } \				} \			magentagroup: Group { alignment:'left',\				st: StaticText { text:'Magenta:' }, \				sl: Slider { minvalue:0, maxvalue:100, value:0 }, \				et: EditText { characters:4, justify:'right' } \				} \			yellowgroup: Group { alignment:'left',\				st: StaticText { text:'Yellow   :' }, \				sl: Slider { minvalue:0, maxvalue:100, value:100 }, \				et: EditText { characters:4, justify:'right' } \				} \			blackgroup: Group { alignment:'left',\				st: StaticText { text:'Black     :' }, \				sl: Slider { minvalue:0, maxvalue:100, value:0 }, \				et: EditText { characters:4, justify:'right' } \				} \			randomcolor: Checkbox { \			alignment:'left', text:'Set color to random', value:false \			}, \			}, \			allGroups2: Group { orientation:'column', preferredSize: [200, 20], alignChildren:'top', \			percentagetopgroup: Group { alignment:'left',\				st: StaticText { text:'Top      :' }, \				sl: Slider { minvalue:0, maxvalue:100, value:100 }, \				et: EditText { characters:4, justify:'right' } \			}, \			}, \			allGroups3: Group { orientation:'column', preferredSize: [200, 20], alignChildren:'top', \			curvegroup: Group { alignment:'left',\				st: StaticText { text:'Curve  :' }, \				ddl: DropDownList { alignment:'left', preferredSize: [165, 20] }, \				} \			sizegroup: Group { alignment:'left',\				st: StaticText { text:'Size     :' }, \				sl: Slider { minvalue:1, maxvalue:100, value:100 }, \					et: EditText { characters:4, justify:'right' } \				} \			heightgroup: Group { alignment:'left',\				st: StaticText { text:'Height :' }, \				sl: Slider { minvalue:1, maxvalue:100, value:10 }, \				et: EditText { characters:4, justify:'right' } \			}, \			}, \			allGroups4: Group { orientation:'column', preferredSize: [200, 20], alignChildren:'top', \			radio1: RadioButton { alignment:'left', text:'Positive' }, \			radio2: RadioButton { alignment:'left', text:'Negative' }, \			radio3: RadioButton { alignment:'left', text:'Positive and Negative', value:true } \			}, \			allGroups5: Group { orientation:'column', preferredSize: [200, 20] \			rowsgroup: Group { alignment:'left',\				st: StaticText { text:'Rows     :' }, \				sl: Slider { minvalue:1, maxvalue:100, value:32 }, \					et: EditText { characters:4, justify:'right' } \				} \			columngroup: Group { alignment:'left',\				st: StaticText { text:'Columns:' }, \				sl: Slider { minvalue:1, maxvalue:100, value:32 }, \				et: EditText { characters:4, justify:'right' } \			}, \			}, \			allGroups7: Group { orientation:'column', preferredSize: [200, 20], alignChildren:'top', \			spreadxgroup: Group { alignment:'left',\				st: StaticText { text:'Spread x:' }, \				sl: Slider { minvalue:0, maxvalue:20, value:3 }, \				et: EditText { characters:4, justify:'right' } \				} \			spreadygroup: Group { alignment:'left',\				st: StaticText { text:'Spread y:' }, \				sl: Slider { minvalue:0, maxvalue:20, value:2 }, \				et: EditText { characters:4, justify:'right' } \				} \			standard: Checkbox { \			alignment:'left', text:'Standard', value:false \			}, \			}, \			} \			buttons: Group { orientation: 'row', alignment: 'center', \			cancelBtn: Button { text:'Cancel', properties:{name:'cancel'} }, \			applyBtn: Button { text:'Apply', properties:{name:'apply'} }, \		} \	}";	win = new Window (res);	win.frameLocation = [100, 100];	// Global menu startup settings	win.allGroups6.allGroups.cyangroup.et.text = Math.round(win.allGroups6.allGroups.cyangroup.sl.value);	win.allGroups6.allGroups.magentagroup.et.text = Math.round(win.allGroups6.allGroups.magentagroup.sl.value);	win.allGroups6.allGroups.yellowgroup.et.text = Math.round(win.allGroups6.allGroups.yellowgroup.sl.value);	win.allGroups6.allGroups.blackgroup.et.text = Math.round(win.allGroups6.allGroups.blackgroup.sl.value);	win.allGroups6.allGroups2.percentagetopgroup.et.text = Math.round(win.allGroups6.allGroups2.percentagetopgroup.sl.value);	win.allGroups6.allGroups3.sizegroup.et.text = Math.round(win.allGroups6.allGroups3.sizegroup.sl.value);	win.allGroups6.allGroups3.heightgroup.et.text = Math.round(win.allGroups6.allGroups3.heightgroup.sl.value);	win.allGroups6.allGroups5.rowsgroup.et.text = Math.round(win.allGroups6.allGroups5.rowsgroup.sl.value);	win.allGroups6.allGroups5.columngroup.et.text = Math.round(win.allGroups6.allGroups5.columngroup.sl.value);	win.allGroups6.allGroups.cyangroup.enabled = true;	win.allGroups6.allGroups.magentagroup.enabled = true;	win.allGroups6.allGroups.yellowgroup.enabled = true;	win.allGroups6.allGroups.blackgroup.enabled = true;	win.allGroups6.allGroups7.spreadxgroup.enabled = true;	win.allGroups6.allGroups7.spreadygroup.enabled = true;	win.allGroups6.allGroups7.spreadxgroup.et.text = Math.round(win.allGroups6.allGroups7.spreadxgroup.sl.value);	win.allGroups6.allGroups7.spreadygroup.et.text = Math.round(win.allGroups6.allGroups7.spreadygroup.sl.value);	win.ddl.onChange = function () {		if (this.selection != null) {			for (var g = 0; g < this.items.length; g++)				this.items[g].group.visible = false; //hide all other groups				this.selection.group.visible = true;//show this group			}		if (win.ddl.selection == 0){win.allGroups6.text = 'Color';}		if (win.ddl.selection == 1){win.allGroups6.text = 'Percentage';}		if (win.ddl.selection == 3){win.allGroups6.text = 'Pos or Negative';}		if (win.ddl.selection == 2){win.allGroups6.text = 'Size';}		if (win.ddl.selection == 4){win.allGroups6.text = 'Rows and Columns';}		if (win.ddl.selection == 5){win.allGroups6.text = 'Spread';}		}	var item = win.ddl.add ('item', 'Color');	item.group = win.allGroups6.allGroups;	item = win.ddl.add ('item', 'Percentage bloks');	item.group = win.allGroups6.allGroups2;	item = win.ddl.add ('item', 'Size');	item.group = win.allGroups6.allGroups3;	item = win.ddl.add ('item', 'Pos or Negative');	item.group = win.allGroups6.allGroups4;	item = win.ddl.add ('item', 'Rows and Columns');	item.group = win.allGroups6.allGroups5;	item = win.ddl.add ('item', 'Spread');	item.group = win.allGroups6.allGroups7;	win.ddl.selection = win.ddl.items[0];	var dropdownlistsize = win.allGroups6.allGroups3.curvegroup.ddl.add ('item', 'Sin');	dropdownlistsize = win.allGroups6.allGroups3.curvegroup.ddl.add ('item', 'Cos');	dropdownlistsize = win.allGroups6.allGroups3.curvegroup.ddl.add ('item', 'Tan');	win.allGroups6.allGroups3.curvegroup.ddl.selection = win.allGroups6.allGroups3.curvegroup.ddl.items[0];	// random color	win.allGroups6.allGroups.randomcolor.onClick = function () { 		if (win.allGroups6.allGroups.randomcolor.value==true){			win.allGroups6.allGroups.cyangroup.enabled = false;			win.allGroups6.allGroups.magentagroup.enabled = false;			win.allGroups6.allGroups.yellowgroup.enabled = false;			win.allGroups6.allGroups.blackgroup.enabled = false;		};		if (win.allGroups6.allGroups.randomcolor.value==false){			win.allGroups6.allGroups.cyangroup.enabled = true;			win.allGroups6.allGroups.magentagroup.enabled = true;			win.allGroups6.allGroups.yellowgroup.enabled = true;			win.allGroups6.allGroups.blackgroup.enabled = true;		};	}	// spread standard	win.allGroups6.allGroups7.standard.onClick = function () { 		if (win.allGroups6.allGroups7.standard.value==true){			win.allGroups6.allGroups7.spreadxgroup.enabled = false;			win.allGroups6.allGroups7.spreadygroup.enabled = false;		};		if (win.allGroups6.allGroups7.standard.value==false){			win.allGroups6.allGroups7.spreadxgroup.enabled = true;			win.allGroups6.allGroups7.spreadygroup.enabled = true;		};	}	// sliders spread	win.allGroups6.allGroups7.spreadxgroup.sl.onChange = function () { 		win.allGroups6.allGroups7.spreadxgroup.et.text = Math.round(win.allGroups6.allGroups7.spreadxgroup.sl.value);	}	win.allGroups6.allGroups7.spreadygroup.sl.onChange = function () { 		win.allGroups6.allGroups7.spreadygroup.et.text = Math.round(win.allGroups6.allGroups7.spreadygroup.sl.value);	}	win.allGroups6.allGroups7.spreadxgroup.et.onChange = function () { 		if (win.allGroups6.allGroups7.spreadxgroup.et.text > 20){win.allGroups6.allGroups7.spreadxgroup.et.text = 20}		if (win.allGroups6.allGroups7.spreadxgroup.et.text < 0){win.allGroups6.allGroups7.spreadxgroup.et.text = 0}		win.allGroups6.allGroups7.spreadxgroup.sl.value= win.allGroups6.allGroups7.spreadxgroup.et.text	}	win.allGroups6.allGroups7.spreadygroup.et.onChange = function () { 		if (win.allGroups6.allGroups7.spreadygroup.et.text > 20){win.allGroups6.allGroups7.spreadygroup.et.text = 20}		if (win.allGroups6.allGroups7.spreadygroup.et.text < 0){win.allGroups6.allGroups7.spreadygroup.et.text = 0}		win.allGroups6.allGroups7.spreadygroup.sl.value= win.allGroups6.allGroups7.spreadygroup.et.text	}	// sliders color	win.allGroups6.allGroups.cyangroup.sl.onChange = function () { 		win.allGroups6.allGroups.cyangroup.et.text = Math.round(win.allGroups6.allGroups.cyangroup.sl.value);	}	win.allGroups6.allGroups.magentagroup.sl.onChange = function () { 		win.allGroups6.allGroups.magentagroup.et.text = Math.round(win.allGroups6.allGroups.magentagroup.sl.value);	}	win.allGroups6.allGroups.yellowgroup.sl.onChange = function () { 		win.allGroups6.allGroups.yellowgroup.et.text = Math.round(win.allGroups6.allGroups.yellowgroup.sl.value);	}	win.allGroups6.allGroups.blackgroup.sl.onChange = function () { 		win.allGroups6.allGroups.blackgroup.et.text = Math.round(win.allGroups6.allGroups.blackgroup.sl.value);	}	win.allGroups6.allGroups.cyangroup.et.onChange = function () { 		if (win.allGroups6.allGroups.cyangroup.et.text > 100){win.allGroups6.allGroups.cyangroup.et.text = 100}		if (win.allGroups6.allGroups.cyangroup.et.text < 0){win.allGroups6.allGroups.cyangroup.et.text = 0}		win.allGroups6.allGroups.cyangroup.sl.value= win.allGroups6.allGroups.cyangroup.et.text	}	win.allGroups6.allGroups.magentagroup.et.onChange = function () { 		if (win.allGroups6.allGroups.magentagroup.et.text > 100){win.allGroups6.allGroups.magentagroup.et.text = 100}		if (win.allGroups6.allGroups.magentagroup.et.text < 0){win.allGroups6.allGroups.magentagroup.et.text = 0}		win.allGroups6.allGroups.magentagroup.sl.value= win.allGroups6.allGroups.magentagroup.et.text	}	win.allGroups6.allGroups.yellowgroup.et.onChange = function () { 		if (win.allGroups6.allGroups.yellowgroup.et.text > 100){win.allGroups6.allGroups.yellowgroup.et.text = 100}		if (win.allGroups6.allGroups.yellowgroup.et.text < 0){win.allGroups6.allGroups.yellowgroup.et.text = 0}		win.allGroups6.allGroups.yellowgroup.sl.value= win.allGroups6.allGroups.yellowgroup.et.text	}	win.allGroups6.allGroups.blackgroup.et.onChange = function () { 		if (win.allGroups6.allGroups.blackgroup.et.text > 100){win.allGroups6.allGroups.blackgroup.et.text = 100}		if (win.allGroups6.allGroups.blackgroup.et.text < 0){win.allGroups6.allGroups.blackgroup.et.text = 0}		win.allGroups6.allGroups.blackgroup.sl.value= win.allGroups6.allGroups.blackgroup.et.text	}	// sliders percentage blocks	win.allGroups6.allGroups2.percentagetopgroup.sl.onChange = function () { 		win.allGroups6.allGroups2.percentagetopgroup.et.text = Math.round(win.allGroups6.allGroups2.percentagetopgroup.sl.value);	}	win.allGroups6.allGroups2.percentagetopgroup.et.onChange = function () { 		if (win.allGroups6.allGroups2.percentagetopgroup.et.text > 100){win.allGroups6.allGroups2.percentagetopgroup.et.text = 100}		if (win.allGroups6.allGroups2.percentagetopgroup.et.text < 0){win.allGroups6.allGroups2.percentagetopgroup.et.text = 0}		win.allGroups6.allGroups2.percentagetopgroup.sl.value= win.allGroups6.allGroups2.percentagetopgroup.et.text	}	// sliders size	win.allGroups6.allGroups3.sizegroup.sl.onChange = function () { 		win.allGroups6.allGroups3.sizegroup.et.text = Math.round(win.allGroups6.allGroups3.sizegroup.sl.value);	}	win.allGroups6.allGroups3.heightgroup.sl.onChange = function () { 		win.allGroups6.allGroups3.heightgroup.et.text = Math.round(win.allGroups6.allGroups3.heightgroup.sl.value);	}	win.allGroups6.allGroups3.sizegroup.et.onChange = function () { 		if (win.allGroups6.allGroups3.sizegroup.et.text > 100){win.allGroups6.allGroups3.sizegroup.et.text = 100}		if (win.allGroups6.allGroups3.sizegroup.et.text < 1){win.allGroups6.allGroups3.sizegroup.et.text = 1}		win.allGroups6.allGroups3.sizegroup.sl.value= win.allGroups6.allGroups3.sizegroup.et.text	}	win.allGroups6.allGroups3.heightgroup.et.onChange = function () { 		if (win.allGroups6.allGroups3.heightgroup.et.text > 100){win.allGroups6.allGroups3.heightgroup.et.text = 100}		if (win.allGroups6.allGroups3.heightgroup.et.text < 1){win.allGroups6.allGroups3.heightgroup.et.text = 1}		win.allGroups6.allGroups3.heightgroup.sl.value= win.allGroups6.allGroups3.heightgroup.et.text	}	// sliders rows and columns	win.allGroups6.allGroups5.rowsgroup.sl.onChange = function () { 		win.allGroups6.allGroups5.rowsgroup.et.text = Math.round(win.allGroups6.allGroups5.rowsgroup.sl.value);	}	win.allGroups6.allGroups5.columngroup.sl.onChange = function () { 		win.allGroups6.allGroups5.columngroup.et.text = Math.round(win.allGroups6.allGroups5.columngroup.sl.value);	}	win.allGroups6.allGroups5.rowsgroup.et.onChange = function () { 		if (win.allGroups6.allGroups5.rowsgroup.et.text > 100){win.allGroups6.allGroups5.rowsgroup.et.text = 100}		if (win.allGroups6.allGroups5.rowsgroup.et.text < 1){win.allGroups6.allGroups5.rowsgroup.et.text = 1}		win.allGroups6.allGroups5.rowsgroup.sl.value= win.allGroups6.allGroups5.rowsgroup.et.text	}	win.allGroups6.allGroups5.columngroup.et.onChange = function () { 		if (win.allGroups6.allGroups5.columngroup.et.text > 100){win.allGroups6.allGroups5.columngroup.et.text = 100}		if (win.allGroups6.allGroups5.columngroup.et.text < 1){win.allGroups6.allGroups5.columngroup.et.text = 1}		win.allGroups6.allGroups5.columngroup.sl.value= win.allGroups6.allGroups5.columngroup.et.text	}	// apply button	win.buttons.applyBtn.onClick = function () {			archs();	}	win.center();	win.show();};function zoomcenterpage(){		var myView=app.activeDocument.views[0];		myView.centerPoint = [(app.activeDocument.width/2),(app.activeDocument.height/2)];		myView.zoom = 1		myView.screenMode.FULLSCREEN;}	function zet_nulpunt(){	// zet nulpunt linksonder	app.activeDocument.pageOrigin = Array(0,0);	app.activeDocument.rulerOrigin = Array(0,0);}