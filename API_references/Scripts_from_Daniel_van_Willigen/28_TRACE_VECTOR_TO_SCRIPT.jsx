/* Trace vector to Script Â© 2010Made by: Daniel van Willigen Last update 07-09-10Updates:Supported:linesCMYK, RGB and Gray colorssaving to a javascript file to a specific location!compoundpaths!Not yet supported spotcolors, gradientstransparancy*/tracescript();// Functions:function tracescript(){	if (app.documents.length>0){		if (app.activeDocument.pathItems.length>0){						// filename			var filename = app.activeDocument.name;			var filenamearray = filename.split('.');			// set variables			var omf = 2.834645;			var retChar = eval('String.fromCharCode(13)');			var x=0;			var y=0;			var verschuivingx = 0;			var verschuivingy = 0;					var doc = app.activeDocument;			var pathitemstotal = app.activeDocument.pathItems.length-1;			var setcounter = 1;			var compoundpathitemlength = 1;			var script = 'var omf = 2.834645;' +retChar;			script = script +'var x=0;' +retChar;			script = script +'var y=0;' +retChar;			script = script +'var verschuivingx = 0;' +retChar;			script = script +'var verschuivingy = 0;' +retChar+retChar;			script = script +'var size= 0;' +retChar+retChar;					script = script +'docPreset = new DocumentPreset;' +retChar;			script = script +'docPreset.width = 100*omf;' +retChar;			script = script +'docPreset.colorMode = DocumentColorSpace.CMYK' +retChar;			script = script +'docPreset.previewMode = DocumentPreviewMode.OverprintPreview;' +retChar;			script = script +'docPreset.rasterResolution = DocumentRasterResolution.HighResolution;' +retChar;			script = script +'docPreset.title = "'+filenamearray[0]+'";' +retChar;			script = script +'docPreset.rulerUnits = RulerUnits.Millimeters;' +retChar;			script = script +'docPreset.height = (100*omf);' +retChar;			script = script +'docPreset.name = "'+filenamearray[0]+'";' +retChar;			script = script +'var doc = app.documents.addDocument(DocumentColorSpace.CMYK,docPreset);' +retChar;			script = script +'app.activeDocument.layers[0].name = "'+filenamearray[0]+'";' +retChar+retChar;				for (var z = pathitemstotal; z >=0; z-- ) {				if(setcounter == compoundpathitemlength+1){					var setcounter = 1;				}				// CompoundPathItem module:				if (setcounter == 1){					if (app.activeDocument.pathItems[z].parent.typename == 'CompoundPathItem'){						script = script +'var newCompoundPath = doc.compoundPathItems.add();' +retChar;						script = script +'var line = newCompoundPath.pathItems.add();' +retChar;						setcounter  = setcounter  + 1;						var compoundpathitemlength = app.activeDocument.pathItems[z].parent.pathItems.length;					}else{						script = script +'var line = doc.pathItems.add();' +retChar;						var setcounter = 1;					};				}else{					if(setcounter <compoundpathitemlength+1){						script = script +'var line = newCompoundPath.pathItems.add();' +retChar;						setcounter  = setcounter  + 1;					}else{						var setcounter = 1;					};				};						//draw path				script = script +'line.setEntirePath(Array('				for (var m = 0; m < app.activeDocument.pathItems[z].pathPoints.length; m++ ) {					var xy = new String(app.activeDocument.pathItems[z].pathPoints[m].anchor);					var xyarray = xy.split(',');					var valuex = new Number(xyarray[0]);					var valuey = new Number(xyarray[1]);					valuex = valuex/omf;					valuey = valuey/omf;					script = script + 'Array(((x+'+valuex+'+verschuivingx)*omf),((y+'+valuey+'+size - verschuivingy)*omf))'					if (m < app.activeDocument.pathItems[z].pathPoints.length-1){script = script + ','};				};				script = script +'));'+retChar;				//draw curves				for (var m = 0; m < app.activeDocument.pathItems[z].pathPoints.length; m++ ) {					var lxy = new String(app.activeDocument.pathItems[z].pathPoints[m].leftDirection);					var rxy = new String(app.activeDocument.pathItems[z].pathPoints[m].rightDirection);					var lxyarray = lxy.split(',');					var rxyarray = rxy.split(',');					var valuelx = new Number(lxyarray[0]);					var valuely = new Number(lxyarray[1]);					var valuerx = new Number(rxyarray[0]);					var valuery = new Number(rxyarray[1]);					valuelx = valuelx/omf;					valuely = valuely/omf;					valuerx = valuerx/omf;					valuery = valuery/omf;					script = script +'line.pathPoints['+m+'].leftDirection = Array(((x+'+valuelx+'+verschuivingx)*omf),((y+'+valuely+'-verschuivingy)*omf));'+retChar;					script = script +'line.pathPoints['+m+'].rightDirection = Array(((x+'+valuerx+'+verschuivingx)*omf),((y+'+valuery+'-verschuivingy)*omf));'+retChar;				};				script = script +'line.closed = true;' +retChar;				if(app.activeDocument.pathItems[z].stroked == true){					script = script +'line.stroked= true;' +retChar;				}					if(app.activeDocument.pathItems[z].stroked == false){					script = script +'line.stroked= false;' +retChar;				}				if(app.activeDocument.pathItems[z].filled == true){					script = script +'line.filled= true;' +retChar;					}					if(app.activeDocument.pathItems[z].filled == false){					script = script +'line.filled= false;' +retChar;				}				//Color module				// Fill				if(app.activeDocument.pathItems[z].filled == true && app.activeDocument.pathItems[z].fillColor=='[CMYKColor]'){					script = script +'var itemColor = new CMYKColor();' +retChar;					script = script +'itemColor.cyan = '+Math.round(app.activeDocument.pathItems[z].fillColor.cyan)+';' +retChar;					script = script +'itemColor.magenta = '+Math.round(app.activeDocument.pathItems[z].fillColor.magenta)+';' +retChar;					script = script +'itemColor.yellow = '+Math.round(app.activeDocument.pathItems[z].fillColor.yellow)+';' +retChar;					script = script +'itemColor.black = '+Math.round(app.activeDocument.pathItems[z].fillColor.black)+';' +retChar;					script = script +'line.fillOverprint = false;' +retChar;					script = script +'line.fillColor = itemColor;' +retChar;				};				if(app.activeDocument.pathItems[z].filled == true && app.activeDocument.pathItems[z].fillColor=='[RGBColor]'){					script = script +'var itemColor = new RGBColor();' +retChar;					script = script +'itemColor.red = '+Math.round(app.activeDocument.pathItems[z].fillColor.red)+';' +retChar;					script = script +'itemColor.green = '+Math.round(app.activeDocument.pathItems[z].fillColor.green)+';' +retChar;					script = script +'itemColor.blue = '+Math.round(app.activeDocument.pathItems[z].fillColor.blue)+';' +retChar;					if (app.activeDocument.pathItems[z].fillOverprint == true){script = script +'line.fillOverprint = true;' +retChar;};					if (app.activeDocument.pathItems[z].fillOverprint == false){script = script +'line.fillOverprint = false;' +retChar;};					script = script +'line.fillColor = itemColor;' +retChar;				};				if(app.activeDocument.pathItems[z].filled == true && app.activeDocument.pathItems[z].fillColor=='[GrayColor]'){					script = script +'var itemColor = new GrayColor();' +retChar;					script = script +'itemColor.gray = '+Math.round(app.activeDocument.pathItems[z].fillColor.gray)+';' +retChar;					if (app.activeDocument.pathItems[z].fillOverprint == true){script = script +'line.fillOverprint = true;' +retChar;};					if (app.activeDocument.pathItems[z].fillOverprint == false){script = script +'line.fillOverprint = false;' +retChar;};					script = script +'line.fillColor = itemColor;' +retChar;					};				// Stroke				if(app.activeDocument.pathItems[z].stroked == true && app.activeDocument.pathItems[z].strokeColor=='[CMYKColor]'){					script = script +'var itemColor = new CMYKColor();' +retChar;					script = script +'itemColor.cyan = '+Math.round(app.activeDocument.pathItems[z].fillColor.cyan)+';' +retChar;					script = script +'itemColor.magenta = '+Math.round(app.activeDocument.pathItems[z].fillColor.magenta)+';' +retChar;					script = script +'itemColor.yellow = '+Math.round(app.activeDocument.pathItems[z].fillColor.yellow)+';' +retChar;					script = script +'itemColor.black = '+Math.round(app.activeDocument.pathItems[z].fillColor.black)+';' +retChar;					if (app.activeDocument.pathItems[z].strokeOverprint == true){script = script +'line.strokeOverprint = true;' +retChar;};					if (app.activeDocument.pathItems[z].strokeOverprint == false){script = script +'line.strokeOverprint = false;' +retChar;};					script = script +'line.strokeColor = itemColor;' +retChar;					script = script +'line.strokeWidth = '+app.activeDocument.pathItems[z].strokeWidth+';' +retChar;				};				if(app.activeDocument.pathItems[z].stroked == true && app.activeDocument.pathItems[z].strokeColor=='[RGBColor]'){					script = script +'var itemColor = new RGBColor();' +retChar;					script = script +'itemColor.red = '+Math.round(app.activeDocument.pathItems[z].fillColor.red)+';' +retChar;					script = script +'itemColor.green = '+Math.round(app.activeDocument.pathItems[z].fillColor.green)+';' +retChar;					script = script +'itemColor.blue = '+Math.round(app.activeDocument.pathItems[z].fillColor.blue)+';' +retChar;					if (app.activeDocument.pathItems[z].strokeOverprint == true){script = script +'line.strokeOverprint = true;' +retChar;};					if (app.activeDocument.pathItems[z].strokeOverprint == false){script = script +'line.strokeOverprint = false;' +retChar;};					script = script +'line.strokeColor = itemColor;' +retChar;					script = script +'line.strokeWidth = '+app.activeDocument.pathItems[z].strokeWidth+';' +retChar;				};				if(app.activeDocument.pathItems[z].stroked == true && app.activeDocument.pathItems[z].strokeColor=='[GrayColor]'){					script = script +'var itemColor = new GrayColor();' +retChar;					script = script +'itemColor.gray = '+Math.round(app.activeDocument.pathItems[z].fillColor.gray)+';' +retChar;					if (app.activeDocument.pathItems[z].strokeOverprint == true){script = script +'line.strokeOverprint = true;' +retChar;};					if (app.activeDocument.pathItems[z].strokeOverprint == false){script = script +'line.strokeOverprint = false;' +retChar;};					script = script +'line.strokeColor = itemColor;' +retChar;					script = script +'line.strokeWidth = '+app.activeDocument.pathItems[z].strokeWidth+';' +retChar;				};				script = script + retChar;			};					script = script + 'var illustratorversion = app.version;'+ retChar;			script = script + 'var illustratorversionarray = illustratorversion.split(".");'+ retChar;			script = script + 'if(illustratorversionarray[0]>13){'+ retChar;			script = script + '	app.activeDocument.artboards[0].artboardRect = app.activeDocument.visibleBounds;'+ retChar;			script = script + '}'+ retChar;			script = script + 'zet_nulpunt();'+ retChar;			script = script + 'zoomcenterpage()'+ retChar+ retChar;			script = script + 'function zoomcenterpage(){'+ retChar;			script = script + '	var myView=app.activeDocument.views[0];'+ retChar;			script = script + '	myView.centerPoint = [(app.activeDocument.width/2),(app.activeDocument.height/2)];'+ retChar;			script = script + '	myView.zoom = 1'+ retChar;			script = script + '	myView.screenMode.FULLSCREEN;'+ retChar;			script = script + '}'+ retChar+ retChar;			script = script + 'function zet_nulpunt(){'+ retChar;			script = script + '	// zet nulpunt linksonder'+ retChar;			script = script + '	app.activeDocument.pageOrigin = Array(0,0);'+ retChar;			script = script + '	app.activeDocument.rulerOrigin = Array(0,0);'+ retChar;			script = script + '}'+ retChar;					// Create a .jsx file			var destFolder = null;			destFolder = Folder.selectDialog( 'Select the directory where to save the script.', '~' );			if (destFolder != null) {				var reportFile =new File(destFolder+'/'+filenamearray[0]+'.js');				reportFile.open('w');				reportFile.writeln(script);			}else{				alert ('Please specify a directory.');			}		app.activeDocument.close();		}else{			alert ('There is no artwork in this document.');		};	}else {		alert ('Please open a document containing artwork.');	};};function create_layer_script(){	// set zeropoint	app.activeDocument.pageOrigin = Array(0,0);	app.activeDocument.rulerOrigin = Array(0,0);	// pixelcalculation	var omf = 2.834645;	// define color	var newRGBColor = new RGBColor();	newRGBColor.red = 0;	newRGBColor.green = 0;	newRGBColor.blue = 255;	var layercheck = 0;	var targetDocument = app.activeDocument;	var layerCount = targetDocument.layers.length;	for (u = layerCount -1; u >= 0; u--){		targetLayer = targetDocument.layers[u];		var layerName = new String (targetLayer.name);		if (layerName.indexOf('Script') == 0){			targetDocument.layers[u].visible= true;			targetDocument.layers[u].locked= false;			var layercheck = 1;		}	}	if (layercheck == 0){		newlayer = documents[0].layers.add();		newlayer.name = ('Script');		newlayer.color = newRGBColor;		}	app.activeDocument.layers['Script'].preview = true;}