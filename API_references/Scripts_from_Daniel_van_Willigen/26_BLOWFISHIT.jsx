menu();function archs(){	win.close();	var omf = 2.834645;	var x = 0;	var y  = 0;	var l = 0;		if (win.allGroups6.allGroups7.standard.value==true){		var spreadxcorr = 0;		var spreadycorr = 0;	}else{		if (win.allGroups6.allGroups7.randomcolor.value==true){			var spreadxcorr = Math.random()*100;			var spreadycorr = Math.random()*100;			if (spreadxcorr > 20){var spreadxcorr = 20};			if (spreadycorr > 20){var spreadycorr = 20};		}else{			var spreadxcorr = new Number(win.allGroups6.allGroups7.spreadxgroup.et.text);			var spreadycorr = new Number(win.allGroups6.allGroups7.spreadygroup.et.text);		}	}	// Set rows and columns	if (win.allGroups6.allGroups5.randomcolor.value==true){		var columndef = Math.random()*100;		var rowsdef = Math.random()*100;		if (columndef > 10){ var columndef = 10};		if (rowsdef > 10){ var rowsdef = 10};	}else{		var columndef = win.allGroups6.allGroups5.columngroup.et.text;		var rowsdef = win.allGroups6.allGroups5.rowsgroup.et.text;	}	// Set Correction (height)	if (win.allGroups6.allGroups3.randomcolor.value==true){		var correction = Math.random();	}else{		var correction = win.allGroups6.allGroups3.heightgroup.et.text/100;	}		var colorname = 0;		// Set Size	if (win.allGroups6.allGroups3.curvegroup.ddl.selection==0){		if (win.allGroups6.allGroups3.randomcolor.value==true){			var size = (Math.sin(l)*(Math.random()*100));		}else{			var size = (Math.sin(l)*win.allGroups6.allGroups3.sizegroup.et.text);		}	}	if (win.allGroups6.allGroups3.curvegroup.ddl.selection==1){		if (win.allGroups6.allGroups3.randomcolor.value==true){			var size = (Math.cos(l)*(Math.random()*100));		}else{			var size = (Math.cos(l)*win.allGroups6.allGroups3.sizegroup.et.text);		}	}	if (win.allGroups6.allGroups3.curvegroup.ddl.selection==2){		if (win.allGroups6.allGroups3.randomcolor.value==true){			var size = (Math.tan(l)*(Math.random()*100));		}else{			var size = (Math.tan(l)*win.allGroups6.allGroups3.sizegroup.et.text);		}	}	verschuivingx = 0;	verschuivingy = 0;	docPreset = new DocumentPreset;	docPreset.width = 100*omf;	docPreset.colorMode = DocumentColorSpace.CMYK	docPreset.previewMode = DocumentPreviewMode.OverprintPreview;	docPreset.rasterResolution = DocumentRasterResolution.HighResolution;	docPreset.title = 'BlowfishIT Wave';	docPreset.rulerUnits = RulerUnits.Millimeters;	docPreset.height = (100*omf);	docPreset.name = 'BlowfishIT Wave';	var doc = app.documents.addDocument(DocumentColorSpace.CMYK,docPreset);	app.activeDocument.layers[0].name = 'BlowfishIT Wave';	var newSpot = doc.spots.add();	var eyes = new CMYKColor();	eyes.cyan = win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.et.text;	eyes.magenta = win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.et.text;	eyes.yellow = win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.et.text;	eyes.black = win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.et.text;	newSpot.name = 'eyes';	newSpot.colorType = ColorModel.PROCESS;	newSpot.color = eyes;	var newSpotColor = new SpotColor();	newSpotColor.spot = newSpot;		var newSpot = doc.spots.add();	var outline = new CMYKColor();	outline.cyan = win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.et.text;	outline.magenta = win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.et.text;	outline.yellow = win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.et.text;	outline.black = win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.et.text;	newSpot.name = 'outline';	newSpot.colorType = ColorModel.PROCESS;	newSpot.color = outline;	var newSpotColor = new SpotColor();	newSpotColor.spot = newSpot;		if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){			var newSpot = doc.spots.add();		var bottomColor = new CMYKColor();		bottomColor.cyan = win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.et.text;		bottomColor.magenta = win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.et.text;		bottomColor.yellow = win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.et.text;		bottomColor.black = win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.et.text;		newSpot.name = 'bottomColor';		newSpot.colorType = ColorModel.PROCESS;		newSpot.color = bottomColor;		var newSpotColor = new SpotColor();		newSpotColor.spot = newSpot;	}		// Set Color		var newSpot = doc.spots.add();		var newColor = new CMYKColor();		newSpot.name = 'Wave' + colorname;		newSpot.colorType = ColorModel.PROCESS;		newSpot.color = newColor;		var newSpotColor = new SpotColor();		newSpotColor.spot = newSpot;	for (var m = 0; m < columndef; m++ ) {			if (win.allGroups6.allGroups.randomcolor.value==true){			newColor.cyan = Math.random()*100;			newColor.magenta = Math.random()*100;			newColor.yellow = Math.random()*100;			newColor.black = Math.random()*100;		} else {			if (win.allGroups6.allGroups.setallcolor.value==true && win.allGroups6.allGroups.colorgroup.ddl.selection == 0){				newColor.cyan = win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.et.text;				newColor.magenta = win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.et.text;				newColor.yellow = win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.et.text;				newColor.black = win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.et.text;			}			if (win.allGroups6.allGroups.setallcolor.value==true && win.allGroups6.allGroups.colorgroup.ddl.selection == 1){				newColor.cyan = win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.et.text;				newColor.magenta = win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.et.text;				newColor.yellow = win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.et.text;				newColor.black = win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.et.text;			}			if (win.allGroups6.allGroups.setallcolor.value==true && win.allGroups6.allGroups.colorgroup.ddl.selection == 2){				newColor.cyan = win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.et.text;				newColor.magenta = win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.et.text;				newColor.yellow = win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.et.text;				newColor.black = win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.et.text;			}			}		// Set Percentage		if (win.allGroups6.allGroups2.randomcolor.value==true){			lefttint = Math.random()*100;		} else {			lefttint = win.allGroups6.allGroups2.percentageleftgroup.et.text;		}		for (var k = 0; k < rowsdef; k++ ) {			if(win.allGroups6.allGroups4.radio1.value==true){				if (size < 0){ var size = 0 };			}			if(win.allGroups6.allGroups4.radio2.value==true){				if (size > 0){ var size = 0 };			}			var artworkgroup = doc.groupItems.add();							// tekening			var newCompoundPath = doc.compoundPathItems.add();			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+20.0001620573299+verschuivingx)*omf),((y+6.07232673756326-verschuivingy)*omf)),Array(((x+18.8274512769677+verschuivingx)*omf),((y+2.77295801149703-verschuivingy)*omf)),Array(((x+17.218935814714+verschuivingx)*omf),((y+1.25952720711059-verschuivingy)*omf)),Array(((x+15.9642317424228+verschuivingx)*omf),((y+0.57774264943229-verschuivingy)*omf)),Array(((x+13.7827967655562+verschuivingx)*omf),((y+0.01894802964745-verschuivingy)*omf)),Array(((x+11.7040256584158+verschuivingx)*omf),((y+0.12781307271281-verschuivingy)*omf)),Array(((x+10.7428437908451+verschuivingx)*omf),((y+0.40066469963611-verschuivingy)*omf)),Array(((x+10.0881032391181+verschuivingx)*omf),((y+0.16880971867729-verschuivingy)*omf)),Array(((x+9.6927784387463+verschuivingx)*omf),((y+0.35966805367162-verschuivingy)*omf)),Array(((x+9.63817366239864+verschuivingx)*omf),((y+0.89124641269013-verschuivingy)*omf)),Array(((x+9.33827802952398+verschuivingx)*omf),((y+1.06866887211626-verschuivingy)*omf)),Array(((x+8.73831450895968+verschuivingx)*omf),((y+1.36839225017595-verschuivingy)*omf)),Array(((x+7.7158099272572+verschuivingx)*omf),((y+0.83681389115745-verschuivingy)*omf)),Array(((x+7.93405677783285+verschuivingx)*omf),((y+1.83210221209358-verschuivingy)*omf)),Array(((x+7.27966073573587+verschuivingx)*omf),((y+1.9003151188244-verschuivingy)*omf)),Array(((x+6.44784223421275+verschuivingx)*omf),((y+1.55925058517028-verschuivingy)*omf)),Array(((x+5.7798380617326+verschuivingx)*omf),((y+1.51859844883574-verschuivingy)*omf)),Array(((x+6.44784223421275+verschuivingx)*omf),((y+3.03168474359223-verschuivingy)*omf)),Array(((x+6.29798054518291+verschuivingx)*omf),((y+3.49539470550986-verschuivingy)*omf)),Array(((x+5.64358450308592+verschuivingx)*omf),((y+3.41374592321084-verschuivingy)*omf)),Array(((x+5.47994242885793+verschuivingx)*omf),((y+4.24539216991898-verschuivingy)*omf)),Array(((x+5.03001285213845+verschuivingx)*omf),((y+4.327040952218-verschuivingy)*omf)),Array(((x+4.41644120119098+verschuivingx)*omf),((y+4.21783139952269-verschuivingy)*omf)),Array(((x+3.83025806582482+verschuivingx)*omf),((y+4.09518597125919-verschuivingy)*omf)),Array(((x+3.80304180505848+verschuivingx)*omf),((y+4.34082133741615-verschuivingy)*omf)),Array(((x+4.53925888426946+verschuivingx)*omf),((y+5.22690010565697-verschuivingy)*omf)),Array(((x+4.42057531675042+verschuivingx)*omf),((y+5.77225884987362-verschuivingy)*omf)),Array(((x+3.58479495448284+verschuivingx)*omf),((y+5.94968130929975-verschuivingy)*omf)),Array(((x+3.74843702871083+verschuivingx)*omf),((y+6.12675925909594-verschuivingy)*omf)),Array(((x+4.10293743793314+verschuivingx)*omf),((y+6.53569218985093-verschuivingy)*omf)),Array(((x+2.69854393142704+verschuivingx)*omf),((y+6.94462512060593-verschuivingy)*omf)),Array(((x+3.59840308486601+verschuivingx)*omf),((y+7.65362593905057-verschuivingy)*omf)),Array(((x+3.03943621026619+verschuivingx)*omf),((y+8.19898468326722-verschuivingy)*omf)),Array(((x+3.353112228339+verschuivingx)*omf),((y+8.74434342748386-verschuivingy)*omf)),Array(((x+2.42603681413369+verschuivingx)*omf),((y+9.11245196708935-verschuivingy)*omf)),Array(((x+2.86218600565503+verschuivingx)*omf),((y+9.46695237631167-verschuivingy)*omf)),Array(((x+3.28489932160817+verschuivingx)*omf),((y+9.80784465515082-verschuivingy)*omf)),Array(((x+3.10764911699701+verschuivingx)*omf),((y+10.7077038085898-verschuivingy)*omf)),Array(((x+1.59421831261057+verschuivingx)*omf),((y+10.8849540132009-verschuivingy)*omf)),Array(((x+0.84439310301643+verschuivingx)*omf),((y+11.2120659068419-verschuivingy)*omf)),Array(((x+0.06735163265594+verschuivingx)*omf),((y+12.2755671345089-verschuivingy)*omf)),Array(((x+0.25820996765027+verschuivingx)*omf),((y+13.7752175536972-verschuivingy)*omf)),Array(((x+1.22610977300509+verschuivingx)*omf),((y+13.4753219208225-verschuivingy)*omf)),Array(((x+3.40754474987168+verschuivingx)*omf),((y+13.8298223300449-verschuivingy)*omf)),Array(((x+3.69383225236317+verschuivingx)*omf),((y+14.6478604463698-verschuivingy)*omf)),Array(((x+3.48936578698567+verschuivingx)*omf),((y+15.9022200090311-verschuivingy)*omf)),Array(((x+5.39812139174394+verschuivingx)*omf),((y+15.5477195998088-verschuivingy)*omf)),Array(((x+6.06612556422409+verschuivingx)*omf),((y+14.1979308696503-verschuivingy)*omf)),Array(((x+6.27076428441657+verschuivingx)*omf),((y+13.7480012929309-verschuivingy)*omf)),Array(((x+6.54344365652489+verschuivingx)*omf),((y+14.007072534656-verschuivingy)*omf)),Array(((x+6.5842680476744+verschuivingx)*omf),((y+14.8115025205978-verschuivingy)*omf)),Array(((x+7.6749855361077+verschuivingx)*omf),((y+14.2661437763812-verschuivingy)*omf)),Array(((x+7.90684051706651+verschuivingx)*omf),((y+14.8797154273286-verschuivingy)*omf)),Array(((x+8.46580739166633+verschuivingx)*omf),((y+14.8523269117473-verschuivingy)*omf)),Array(((x+9.03838239664932+verschuivingx)*omf),((y+14.7160733531007-verschuivingy)*omf)),Array(((x+9.06559865741566+verschuivingx)*omf),((y+15.2478239669341-verschuivingy)*omf)),Array(((x+9.31106176875764+verschuivingx)*omf),((y+15.0841818927061-verschuivingy)*omf)),Array(((x+9.76099134547712+verschuivingx)*omf),((y+14.743289613867-verschuivingy)*omf)),Array(((x+10.4427759031554+verschuivingx)*omf),((y+15.5749358605751-verschuivingy)*omf)),Array(((x+11.2744221498636+verschuivingx)*omf),((y+14.8797154273286-verschuivingy)*omf)),Array(((x+11.3970675781271+verschuivingx)*omf),((y+14.7977221353997-verschuivingy)*omf)),Array(((x+11.5059326211924+verschuivingx)*omf),((y+15.6703650280723-verschuivingy)*omf)),Array(((x+11.7377876021512+verschuivingx)*omf),((y+15.561327730192-verschuivingy)*omf)),Array(((x+12.0788521358054+verschuivingx)*omf),((y+15.070573762323-verschuivingy)*omf)),Array(((x+12.4195721598295+verschuivingx)*omf),((y+14.5932556700222-verschuivingy)*omf)),Array(((x+12.8560658609808+verschuivingx)*omf),((y+15.6975812888386-verschuivingy)*omf)),Array(((x+13.60571881576+verschuivingx)*omf),((y+15.0841818927061-verschuivingy)*omf)),Array(((x+14.2871588638083+verschuivingx)*omf),((y+14.08889357177-verschuivingy)*omf)),Array(((x+14.9010750243858+verschuivingx)*omf),((y+13.7071769017814-verschuivingy)*omf)),Array(((x+15.2142342780136+verschuivingx)*omf),((y+13.7071769017814-verschuivingy)*omf)),Array(((x+15.323443830709+verschuivingx)*omf),((y+14.2797519067643-verschuivingy)*omf)),Array(((x+16.0596609099199+verschuivingx)*omf),((y+14.08889357177-verschuivingy)*omf)),Array(((x+16.6050196541366+verschuivingx)*omf),((y+13.0936052508339-verschuivingy)*omf)),Array(((x+17.2048109198859+verschuivingx)*omf),((y+12.0983169298977-verschuivingy)*omf)),Array(((x+17.5455309439101+verschuivingx)*omf),((y+12.3301719108566-verschuivingy)*omf)),Array(((x+17.8865954775642+verschuivingx)*omf),((y+11.5257419249148-verschuivingy)*omf)),Array(((x+18.2276600112183+verschuivingx)*omf),((y+10.9393865347336-verschuivingy)*omf)),Array(((x+18.4863867433135+verschuivingx)*omf),((y+10.7485281997393-verschuivingy)*omf)),Array(((x+19.1681713009918+verschuivingx)*omf),((y+10.639490901859-verschuivingy)*omf)),Array(((x+19.7269659207767+verschuivingx)*omf),((y+9.18066487382018-verschuivingy)*omf)),Array(((x+19.5771042317468+verschuivingx)*omf),((y+8.47183631019052-verschuivingy)*omf)),Array(((x+19.8503003683001+verschuivingx)*omf),((y+7.46276760405624-verschuivingy)*omf)),Array(((x+20.0001620573299+verschuivingx)*omf),((y+6.07232673756326-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+20.0001620573299+verschuivingx)*omf),((y+6.07232673756326-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+19.9281595446696+verschuivingx)*omf),((y+4.71599232443569-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+19.4709952657211+verschuivingx)*omf),((y+3.64835698120929-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+18.3902685565565+verschuivingx)*omf),((y+2.17833439019701-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+17.8263062923223+verschuivingx)*omf),((y+1.68292954232364-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+16.8430758084346+verschuivingx)*omf),((y+0.99735537871585-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+16.4000364243142+verschuivingx)*omf),((y+0.7665339266469-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+15.3716751789025+verschuivingx)*omf),((y+0.32073846548686-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+14.557254413692+verschuivingx)*omf),((y+0.01894802964745-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+13.0817196686005+verschuivingx)*omf),((y+0.01894802964745-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+12.334478281231+verschuivingx)*omf),((y+0.12781307271281-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+11.360205047722+verschuivingx)*omf),((y+0.12781307271281-verschuivingy)*omf));			line.pathPoints[6].leftDirection = Array(((x+11.0525579481734+verschuivingx)*omf),((y+0.3531223707025-verschuivingy)*omf));			line.pathPoints[6].rightDirection = Array(((x+10.4400198261158+verschuivingx)*omf),((y+0.4468289900499-verschuivingy)*omf));			line.pathPoints[7].leftDirection = Array(((x+10.3180634171122+verschuivingx)*omf),((y+0.32004944622695-verschuivingy)*omf));			line.pathPoints[7].rightDirection = Array(((x+9.75358438843312+verschuivingx)*omf),((y+-0.05098742523314-verschuivingy)*omf));			line.pathPoints[8].leftDirection = Array(((x+9.6927784387463+verschuivingx)*omf),((y+-0.11954484159392-verschuivingy)*omf));			line.pathPoints[8].rightDirection = Array(((x+9.6927784387463+verschuivingx)*omf),((y+0.63665379615437-verschuivingy)*omf));			line.pathPoints[9].leftDirection = Array(((x+9.79888740477203+verschuivingx)*omf),((y+0.71830257845339-verschuivingy)*omf));			line.pathPoints[9].rightDirection = Array(((x+9.57013301048279+verschuivingx)*omf),((y+0.96462696387026-verschuivingy)*omf));			line.pathPoints[10].leftDirection = Array(((x+9.427333768867+verschuivingx)*omf),((y+1.02043752392275-verschuivingy)*omf));			line.pathPoints[10].rightDirection = Array(((x+9.17808105159553+verschuivingx)*omf),((y+1.15548529886458-verschuivingy)*omf));			line.pathPoints[11].leftDirection = Array(((x+8.92193814172498+verschuivingx)*omf),((y+1.39112988575289-verschuivingy)*omf));			line.pathPoints[11].rightDirection = Array(((x+8.54607813544553+verschuivingx)*omf),((y+1.3449655953391-verschuivingy)*omf));			line.pathPoints[12].leftDirection = Array(((x+7.88927052593887+verschuivingx)*omf),((y+0.54742580199637-verschuivingy)*omf));			line.pathPoints[12].rightDirection = Array(((x+7.59454253751352+verschuivingx)*omf),((y+1.0393855535702-verschuivingy)*omf));			line.pathPoints[13].leftDirection = Array(((x+7.93646834524253+verschuivingx)*omf),((y+1.59852468298499-verschuivingy)*omf));			line.pathPoints[13].rightDirection = Array(((x+7.92957815264345+verschuivingx)*omf),((y+2.25068141248728-verschuivingy)*omf));			line.pathPoints[14].leftDirection = Array(((x+7.54476089598521+verschuivingx)*omf),((y+2.01055820040958-verschuivingy)*omf));			line.pathPoints[14].rightDirection = Array(((x+7.00939293103722+verschuivingx)*omf),((y+1.78766046982956-verschuivingy)*omf));			line.pathPoints[15].leftDirection = Array(((x+6.72930660188489+verschuivingx)*omf),((y+1.67397229194485-verschuivingy)*omf));			line.pathPoints[15].rightDirection = Array(((x+6.21426470510417+verschuivingx)*omf),((y+1.46416592730307-verschuivingy)*omf));			line.pathPoints[16].leftDirection = Array(((x+5.76381836393975+verschuivingx)*omf),((y+1.13688177884709-verschuivingy)*omf));			line.pathPoints[16].rightDirection = Array(((x+5.79930285582498+verschuivingx)*omf),((y+1.98058586260361-verschuivingy)*omf));			line.pathPoints[17].leftDirection = Array(((x+6.30711005037668+verschuivingx)*omf),((y+2.5679747816746-verschuivingy)*omf));			line.pathPoints[17].rightDirection = Array(((x+6.51553837649864+verschuivingx)*omf),((y+3.25458247417225-verschuivingy)*omf));			line.pathPoints[18].leftDirection = Array(((x+6.51105975130925+verschuivingx)*omf),((y+3.35070066092932-verschuivingy)*omf));			line.pathPoints[18].rightDirection = Array(((x+6.06509203533423+verschuivingx)*omf),((y+3.65352462565859-verschuivingy)*omf));			line.pathPoints[19].leftDirection = Array(((x+5.91764191371406+verschuivingx)*omf),((y+3.53019017813518-verschuivingy)*omf));			line.pathPoints[19].rightDirection = Array(((x+4.54322074501393+verschuivingx)*omf),((y+2.94590184573377-verschuivingy)*omf));			line.pathPoints[20].leftDirection = Array(((x+5.51646044963302+verschuivingx)*omf),((y+3.81027650728751-verschuivingy)*omf));			line.pathPoints[20].rightDirection = Array(((x+5.45772155772592+verschuivingx)*omf),((y+4.50963105609344-verschuivingy)*omf));			line.pathPoints[21].leftDirection = Array(((x+5.26686322273159+verschuivingx)*omf),((y+4.327040952218-verschuivingy)*omf));			line.pathPoints[21].rightDirection = Array(((x+4.84104932010887+verschuivingx)*omf),((y+4.327040952218-verschuivingy)*omf));			line.pathPoints[22].leftDirection = Array(((x+4.62004639249359+verschuivingx)*omf),((y+4.25607196844755-verschuivingy)*omf));			line.pathPoints[22].rightDirection = Array(((x+4.2794986232844+verschuivingx)*omf),((y+4.19233768690612-verschuivingy)*omf));			line.pathPoints[23].leftDirection = Array(((x+3.962722018542+verschuivingx)*omf),((y+4.06211304678364-verschuivingy)*omf));			line.pathPoints[23].rightDirection = Array(((x+3.55413359741696+verschuivingx)*omf),((y+4.16443240687987-verschuivingy)*omf));			line.pathPoints[24].leftDirection = Array(((x+3.72449360942905+verschuivingx)*omf),((y+4.21300826470334-verschuivingy)*omf));			line.pathPoints[24].rightDirection = Array(((x+3.99855102005719+verschuivingx)*omf),((y+4.65880372586338-verschuivingy)*omf));			line.pathPoints[25].leftDirection = Array(((x+4.31705017294935+verschuivingx)*omf),((y+4.92545417944751-verschuivingy)*omf));			line.pathPoints[25].rightDirection = Array(((x+4.63554932584151+verschuivingx)*omf),((y+5.35746925540941-verschuivingy)*omf));			line.pathPoints[26].leftDirection = Array(((x+4.7761092548626+verschuivingx)*omf),((y+5.77225884987362-verschuivingy)*omf));			line.pathPoints[26].rightDirection = Array(((x+4.07520441272187+verschuivingx)*omf),((y+5.77225884987362-verschuivingy)*omf));			line.pathPoints[27].leftDirection = Array(((x+3.51554851886215+verschuivingx)*omf),((y+5.58863521710832-verschuivingy)*omf));			line.pathPoints[27].rightDirection = Array(((x+3.59478573375149+verschuivingx)*omf),((y+6.0013577537928-verschuivingy)*omf));			line.pathPoints[28].leftDirection = Array(((x+3.71174675312076+verschuivingx)*omf),((y+6.08748516128122-verschuivingy)*omf));			line.pathPoints[28].rightDirection = Array(((x+3.8474835473225+verschuivingx)*omf),((y+6.23252371549171-verschuivingy)*omf));			line.pathPoints[29].leftDirection = Array(((x+4.10793282756747+verschuivingx)*omf),((y+6.38272991415151-verschuivingy)*omf));			line.pathPoints[29].rightDirection = Array(((x+4.08588421125044+verschuivingx)*omf),((y+7.06175839479018-verschuivingy)*omf));			line.pathPoints[30].leftDirection = Array(((x+2.77571408853666+verschuivingx)*omf),((y+6.59735941361264-verschuivingy)*omf));			line.pathPoints[30].rightDirection = Array(((x+2.65410218916302+verschuivingx)*omf),((y+7.14512972523896-verschuivingy)*omf));			line.pathPoints[31].leftDirection = Array(((x+3.52381674998104+verschuivingx)*omf),((y+7.46896877739541-verschuivingy)*omf));			line.pathPoints[31].rightDirection = Array(((x+3.79442906430964+verschuivingx)*omf),((y+8.1388677528403-verschuivingy)*omf));			line.pathPoints[32].leftDirection = Array(((x+2.97001751983053+verschuivingx)*omf),((y+7.8727340637011-verschuivingy)*omf));			line.pathPoints[32].rightDirection = Array(((x+3.08163863993551+verschuivingx)*omf),((y+8.39724997530555-verschuivingy)*omf));			line.pathPoints[33].leftDirection = Array(((x+3.5010791144041+verschuivingx)*omf),((y+8.43325123163571-verschuivingy)*omf));			line.pathPoints[33].rightDirection = Array(((x+3.21944249191698+verschuivingx)*omf),((y+9.0251187758961-verschuivingy)*omf));			line.pathPoints[34].leftDirection = Array(((x+2.33353597849113+verschuivingx)*omf),((y+8.80911123791515-verschuivingy)*omf));			line.pathPoints[34].rightDirection = Array(((x+2.45342532971501+verschuivingx)*omf),((y+9.20271349013721-verschuivingy)*omf));			line.pathPoints[35].leftDirection = Array(((x+2.78070947817099+verschuivingx)*omf),((y+9.39856721476587-verschuivingy)*omf));			line.pathPoints[35].rightDirection = Array(((x+2.97656320279965+verschuivingx)*omf),((y+9.56272605343879-verschuivingy)*omf));			line.pathPoints[36].leftDirection = Array(((x+3.21961474673195+verschuivingx)*omf),((y+9.67348589946889-verschuivingy)*omf));			line.pathPoints[36].rightDirection = Array(((x+3.47265706993292+verschuivingx)*omf),((y+10.1945567147738-verschuivingy)*omf));			line.pathPoints[37].leftDirection = Array(((x+3.41064533654126+verschuivingx)*omf),((y+10.5914318084804-verschuivingy)*omf));			line.pathPoints[37].rightDirection = Array(((x+2.68958668104824+verschuivingx)*omf),((y+10.8682452961482-verschuivingy)*omf));			line.pathPoints[38].leftDirection = Array(((x+2.06412944786737+verschuivingx)*omf),((y+10.7886635716289-verschuivingy)*omf));			line.pathPoints[38].rightDirection = Array(((x+1.29018856417647+verschuivingx)*omf),((y+10.9471380014076-verschuivingy)*omf));			line.pathPoints[39].leftDirection = Array(((x+1.06453475655682+verschuivingx)*omf),((y+11.07770715116-verschuivingy)*omf));			line.pathPoints[39].rightDirection = Array(((x+0.45199663449921+verschuivingx)*omf),((y+11.4518446092897-verschuivingy)*omf));			line.pathPoints[40].leftDirection = Array(((x+0.17966177202084+verschuivingx)*omf),((y+11.7584581799485-verschuivingy)*omf));			line.pathPoints[40].rightDirection = Array(((x+-0.0022393125947+verschuivingx)*omf),((y+12.5952720711059-verschuivingy)*omf));			line.pathPoints[41].leftDirection = Array(((x+-0.10145808602135+verschuivingx)*omf),((y+13.7092439595611-verschuivingy)*omf));			line.pathPoints[41].rightDirection = Array(((x+0.47008339007177+verschuivingx)*omf),((y+13.814147141882-verschuivingy)*omf));			line.pathPoints[42].leftDirection = Array(((x+0.98133568092301+verschuivingx)*omf),((y+13.5256203267958-verschuivingy)*omf));			line.pathPoints[42].rightDirection = Array(((x+2.02606113375749+verschuivingx)*omf),((y+13.3113353369646-verschuivingy)*omf));			line.pathPoints[43].leftDirection = Array(((x+3.0237610221033+verschuivingx)*omf),((y+13.2679271235904-verschuivingy)*omf));			line.pathPoints[43].rightDirection = Array(((x+3.54776016926282+verschuivingx)*omf),((y+14.0351500694972-verschuivingy)*omf));			line.pathPoints[44].leftDirection = Array(((x+3.66368765974223+verschuivingx)*omf),((y+14.386377637235-verschuivingy)*omf));			line.pathPoints[44].rightDirection = Array(((x+3.74878153834078+verschuivingx)*omf),((y+15.122422461631-verschuivingy)*omf));			line.pathPoints[45].leftDirection = Array(((x+3.47524089215757+verschuivingx)*omf),((y+15.5551265568528-verschuivingy)*omf));			line.pathPoints[45].rightDirection = Array(((x+3.51692655738196+verschuivingx)*omf),((y+16.5853826052292-verschuivingy)*omf));			line.pathPoints[46].leftDirection = Array(((x+5.21759834564822+verschuivingx)*omf),((y+15.7227304918253-verschuivingy)*omf));			line.pathPoints[46].rightDirection = Array(((x+5.73108994909415+verschuivingx)*omf),((y+15.2249140765422-verschuivingy)*omf));			line.pathPoints[47].leftDirection = Array(((x+5.96277267523799+verschuivingx)*omf),((y+14.742945104237-verschuivingy)*omf));			line.pathPoints[47].rightDirection = Array(((x+6.12176386946161+verschuivingx)*omf),((y+13.9044086649298-verschuivingy)*omf));			line.pathPoints[48].leftDirection = Array(((x+6.05510125606557+verschuivingx)*omf),((y+13.7523076633053-verschuivingy)*omf));			line.pathPoints[48].rightDirection = Array(((x+6.43681792605423+verschuivingx)*omf),((y+13.7447284514463-verschuivingy)*omf));			line.pathPoints[49].leftDirection = Array(((x+6.51898347279818+verschuivingx)*omf),((y+13.8759866204586-verschuivingy)*omf));			line.pathPoints[49].rightDirection = Array(((x+6.59908196176241+verschuivingx)*omf),((y+14.3071404223457-verschuivingy)*omf));			line.pathPoints[50].leftDirection = Array(((x+6.14398474059362+verschuivingx)*omf),((y+14.9005582599408-verschuivingy)*omf));			line.pathPoints[50].rightDirection = Array(((x+7.01438832067155+verschuivingx)*omf),((y+14.7243415842195-verschuivingy)*omf));			line.pathPoints[51].leftDirection = Array(((x+7.13169384967077+verschuivingx)*omf),((y+14.1524555984965-verschuivingy)*omf));			line.pathPoints[51].rightDirection = Array(((x+8.30216531743834+verschuivingx)*omf),((y+14.3974019453935-verschuivingy)*omf));			line.pathPoints[52].leftDirection = Array(((x+7.86842769332668+verschuivingx)*omf),((y+14.4992045410448-verschuivingy)*omf));			line.pathPoints[52].rightDirection = Array(((x+7.94611461488123+verschuivingx)*omf),((y+15.2693558188062-verschuivingy)*omf));			line.pathPoints[53].leftDirection = Array(((x+8.28080572038121+verschuivingx)*omf),((y+14.9448277473899-verschuivingy)*omf));			line.pathPoints[53].rightDirection = Array(((x+8.67957561705258+verschuivingx)*omf),((y+14.7453566716467-verschuivingy)*omf));			line.pathPoints[54].leftDirection = Array(((x+8.99170134179059+verschuivingx)*omf),((y+14.4924866032607-verschuivingy)*omf));			line.pathPoints[54].rightDirection = Array(((x+9.08075708113362+verschuivingx)*omf),((y+14.9191617799583-verschuivingy)*omf));			line.pathPoints[55].leftDirection = Array(((x+8.8161736853292+verschuivingx)*omf),((y+15.1930469357715-verschuivingy)*omf));			line.pathPoints[55].rightDirection = Array(((x+9.11279647671931+verschuivingx)*omf),((y+15.2581592558327-verschuivingy)*omf));			line.pathPoints[56].leftDirection = Array(((x+9.27402698353762+verschuivingx)*omf),((y+15.1131207016222-verschuivingy)*omf));			line.pathPoints[56].rightDirection = Array(((x+9.44576503406952+verschuivingx)*omf),((y+14.9789342007553-verschuivingy)*omf));			line.pathPoints[57].leftDirection = Array(((x+9.60148338680858+verschuivingx)*omf),((y+14.810468991708-verschuivingy)*omf));			line.pathPoints[57].rightDirection = Array(((x+10.7776392634704+verschuivingx)*omf),((y+14.3148918890196-verschuivingy)*omf));			line.pathPoints[58].leftDirection = Array(((x+9.95925663751546+verschuivingx)*omf),((y+15.5542652827779-verschuivingy)*omf));			line.pathPoints[58].rightDirection = Array(((x+10.6942679330216+verschuivingx)*omf),((y+15.5857879139187-verschuivingy)*omf));			line.pathPoints[59].leftDirection = Array(((x+11.0043265999799+verschuivingx)*omf),((y+14.9418994155353-verschuivingy)*omf));			line.pathPoints[59].rightDirection = Array(((x+11.2906141024714+verschuivingx)*omf),((y+14.8759258213992-verschuivingy)*omf));			line.pathPoints[60].leftDirection = Array(((x+11.3567599514225+verschuivingx)*omf),((y+14.8149476168974-verschuivingy)*omf));			line.pathPoints[60].rightDirection = Array(((x+11.4194607040741+verschuivingx)*omf),((y+14.9725607726012-verschuivingy)*omf));			line.pathPoints[61].leftDirection = Array(((x+11.3894883662681+verschuivingx)*omf),((y+15.5565045953726-verschuivingy)*omf));			line.pathPoints[61].rightDirection = Array(((x+11.6275445205661+verschuivingx)*omf),((y+15.7895653600363-verschuivingy)*omf));			line.pathPoints[62].leftDirection = Array(((x+11.6747423398697+verschuivingx)*omf),((y+15.6186885835792-verschuivingy)*omf));			line.pathPoints[62].rightDirection = Array(((x+11.8780030215424+verschuivingx)*omf),((y+15.4336869122941-verschuivingy)*omf));			line.pathPoints[63].leftDirection = Array(((x+11.9706761119999+verschuivingx)*omf),((y+15.2293927017316-verschuivingy)*omf));			line.pathPoints[63].rightDirection = Array(((x+12.1642905240339+verschuivingx)*omf),((y+14.9446554925749-verschuivingy)*omf));			line.pathPoints[64].leftDirection = Array(((x+12.2983047700858+verschuivingx)*omf),((y+14.6848952315898-verschuivingy)*omf));			line.pathPoints[64].rightDirection = Array(((x+12.9404707203195+verschuivingx)*omf),((y+14.1984476340953-verschuivingy)*omf));			line.pathPoints[65].leftDirection = Array(((x+12.7120608356602+verschuivingx)*omf),((y+15.3556554811096-verschuivingy)*omf));			line.pathPoints[65].rightDirection = Array(((x+13.0372779263365+verschuivingx)*omf),((y+16.1278738166508-verschuivingy)*omf));			line.pathPoints[66].leftDirection = Array(((x+13.4710155504481+verschuivingx)*omf),((y+15.2776240499251-verschuivingy)*omf));			line.pathPoints[66].rightDirection = Array(((x+13.8310281137497+verschuivingx)*omf),((y+14.7612041146246-verschuivingy)*omf));			line.pathPoints[67].leftDirection = Array(((x+14.0208529198542+verschuivingx)*omf),((y+14.3751810742615-verschuivingy)*omf));			line.pathPoints[67].rightDirection = Array(((x+14.4518344669262+verschuivingx)*omf),((y+13.9119878767888-verschuivingy)*omf));			line.pathPoints[68].leftDirection = Array(((x+14.6654304374975+verschuivingx)*omf),((y+13.813802632252-verschuivingy)*omf));			line.pathPoints[68].rightDirection = Array(((x+15.0719518008428+verschuivingx)*omf),((y+13.6294899802268-verschuivingy)*omf));			line.pathPoints[69].leftDirection = Array(((x+15.0950339460497+verschuivingx)*omf),((y+13.538539437919-verschuivingy)*omf));			line.pathPoints[69].rightDirection = Array(((x+15.3000171758721+verschuivingx)*omf),((y+13.8279275270801-verschuivingy)*omf));			line.pathPoints[70].leftDirection = Array(((x+15.2955385506827+verschuivingx)*omf),((y+14.1307514918094-verschuivingy)*omf));			line.pathPoints[70].rightDirection = Array(((x+15.5039668768047+verschuivingx)*omf),((y+15.2443788706346-verschuivingy)*omf));			line.pathPoints[71].leftDirection = Array(((x+15.8123029956132+verschuivingx)*omf),((y+14.5229757055116-verschuivingy)*omf));			line.pathPoints[71].rightDirection = Array(((x+16.2505192449143+verschuivingx)*omf),((y+13.754374721085-verschuivingy)*omf));			line.pathPoints[72].leftDirection = Array(((x+16.4165728865519+verschuivingx)*omf),((y+13.4255402792942-verschuivingy)*omf));			line.pathPoints[72].rightDirection = Array(((x+16.757981929836+verschuivingx)*omf),((y+12.8238542105802-verschuivingy)*omf));			line.pathPoints[73].leftDirection = Array(((x+16.9474622263105+verschuivingx)*omf),((y+12.2635092974605-verschuivingy)*omf));			line.pathPoints[73].rightDirection = Array(((x+17.3088528281319+verschuivingx)*omf),((y+12.4912301628599-verschuivingy)*omf));			line.pathPoints[74].leftDirection = Array(((x+17.3357245792683+verschuivingx)*omf),((y+12.825059994285-verschuivingy)*omf));			line.pathPoints[74].rightDirection = Array(((x+17.657841083275+verschuivingx)*omf),((y+12.0661052794971-verschuivingy)*omf));			line.pathPoints[75].leftDirection = Array(((x+17.7739408285694+verschuivingx)*omf),((y+11.7906698303491-verschuivingy)*omf));			line.pathPoints[75].rightDirection = Array(((x+17.9865032702508+verschuivingx)*omf),((y+11.2911308669163-verschuivingy)*omf));			line.pathPoints[76].leftDirection = Array(((x+18.0684965621797+verschuivingx)*omf),((y+11.1054401763713-verschuivingy)*omf));			line.pathPoints[76].rightDirection = Array(((x+18.3334244676141+verschuivingx)*omf),((y+10.8289711983335-verschuivingy)*omf));			line.pathPoints[77].leftDirection = Array(((x+18.2993180142487+verschuivingx)*omf),((y+10.7976208220077-verschuivingy)*omf));			line.pathPoints[77].rightDirection = Array(((x+18.7520036680078+verschuivingx)*omf),((y+10.6791095093036-verschuivingy)*omf));			line.pathPoints[78].leftDirection = Array(((x+18.9580204267201+verschuivingx)*omf),((y+10.7406044782504-verschuivingy)*omf));			line.pathPoints[78].rightDirection = Array(((x+19.6229240125307+verschuivingx)*omf),((y+10.4208995416534-verschuivingy)*omf));			line.pathPoints[79].leftDirection = Array(((x+19.9267815061498+verschuivingx)*omf),((y+9.80836141959575-verschuivingy)*omf));			line.pathPoints[79].rightDirection = Array(((x+19.6239575414205+verschuivingx)*omf),((y+8.85648131203378-verschuivingy)*omf));			line.pathPoints[80].leftDirection = Array(((x+19.4823640835096+verschuivingx)*omf),((y+8.82650897422781-verschuivingy)*omf));			line.pathPoints[80].rightDirection = Array(((x+19.6642651681251+verschuivingx)*omf),((y+8.14627470988431-verschuivingy)*omf));			line.pathPoints[81].leftDirection = Array(((x+19.7813984423094+verschuivingx)*omf),((y+7.83983339404052-verschuivingy)*omf));			line.pathPoints[81].rightDirection = Array(((x+19.9281595446696+verschuivingx)*omf),((y+7.03316409550402-verschuivingy)*omf));			line.pathPoints[82].leftDirection = Array(((x+19.9285040542996+verschuivingx)*omf),((y+6.59150274990343-verschuivingy)*omf));			line.pathPoints[82].rightDirection = Array(((x+20.0001620573299+verschuivingx)*omf),((y+6.07232673756326-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['outline'].color;			}else{				line.fillColor = doc.swatches['outline'].color;			}			line.fillColor.tint = 100;			var newCompoundPath = doc.compoundPathItems.add();			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+10.6336342381497+verschuivingx)*omf),((y+13.8162141996617-verschuivingy)*omf)),Array(((x+9.52913636451831+verschuivingx)*omf),((y+13.2298588094806-verschuivingy)*omf)),Array(((x+8.67027385704383+verschuivingx)*omf),((y+13.7343931625477-verschuivingy)*omf)),Array(((x+10.4837725491199+verschuivingx)*omf),((y+12.1255331906641-verschuivingy)*omf)),Array(((x+9.44731532740431+verschuivingx)*omf),((y+11.1712415156924-verschuivingy)*omf)),Array(((x+8.64305759627749+verschuivingx)*omf),((y+12.7527129719947-verschuivingy)*omf)),Array(((x+8.24756054109068+verschuivingx)*omf),((y+13.6797883862-verschuivingy)*omf)),Array(((x+7.97488116898236+verschuivingx)*omf),((y+13.1754262879479-verschuivingy)*omf)),Array(((x+8.22034428032434+verschuivingx)*omf),((y+12.9709598225704-verschuivingy)*omf)),Array(((x+7.63416114495819+verschuivingx)*omf),((y+11.6893839991428-verschuivingy)*omf)),Array(((x+6.81612302863322+verschuivingx)*omf),((y+13.0527808596844-verschuivingy)*omf)),Array(((x+6.47523074979407+verschuivingx)*omf),((y+13.1344296419834-verschuivingy)*omf)),Array(((x+6.43423410382958+verschuivingx)*omf),((y+12.6436756741144-verschuivingy)*omf)),Array(((x+5.64358450308592+verschuivingx)*omf),((y+12.3846044323892-verschuivingy)*omf)),Array(((x+5.20726305674961+verschuivingx)*omf),((y+12.2619590041257-verschuivingy)*omf)),Array(((x+5.50715868962427+verschuivingx)*omf),((y+11.4985256641484-verschuivingy)*omf)),Array(((x+4.79833012599461+verschuivingx)*omf),((y+11.3074950743391-verschuivingy)*omf)),Array(((x+4.49826223830497+verschuivingx)*omf),((y+11.1030286089616-verschuivingy)*omf)),Array(((x+4.55286701465263+verschuivingx)*omf),((y+10.4894569580141-verschuivingy)*omf)),Array(((x+4.34840054927513+verschuivingx)*omf),((y+9.93049008341433-verschuivingy)*omf)),Array(((x+4.83915451714412+verschuivingx)*omf),((y+9.58977005939015-verschuivingy)*omf)),Array(((x+5.65719263346909+verschuivingx)*omf),((y+9.4533442459285-verschuivingy)*omf)),Array(((x+6.06612556422409+verschuivingx)*omf),((y+8.88076924094552-verschuivingy)*omf)),Array(((x+6.57065991729123+verschuivingx)*omf),((y+8.53987696210637-verschuivingy)*omf)),Array(((x+7.44313055514888+verschuivingx)*omf),((y+7.84465652885987-verschuivingy)*omf)),Array(((x+8.97016948991849+verschuivingx)*omf),((y+5.82014568843718-verschuivingy)*omf)),Array(((x+8.92934509876898+verschuivingx)*omf),((y+3.37274927724636-verschuivingy)*omf)),Array(((x+9.24284886202681+verschuivingx)*omf),((y+2.58175516687275-verschuivingy)*omf)),Array(((x+9.96545781085462+verschuivingx)*omf),((y+1.94131176478889-verschuivingy)*omf)),Array(((x+10.3743907416096+verschuivingx)*omf),((y+2.39089683187842-verschuivingy)*omf)),Array(((x+11.3012939009999+verschuivingx)*omf),((y+2.24103514284858-verschuivingy)*omf)),Array(((x+11.3970675781271+verschuivingx)*omf),((y+1.28674346787693-verschuivingy)*omf)),Array(((x+11.7109158510149+verschuivingx)*omf),((y+0.91846267345646-verschuivingy)*omf)),Array(((x+14.8466425028531+verschuivingx)*omf),((y+1.06866887211626-verschuivingy)*omf)),Array(((x+16.3872895680059+verschuivingx)*omf),((y+1.73667304459641-verschuivingy)*omf)),Array(((x+18.1318863340912+verschuivingx)*omf),((y+3.08646177475486-verschuivingy)*omf)),Array(((x+18.118794968153+verschuivingx)*omf),((y+3.09989765032306-verschuivingy)*omf)),Array(((x+14.4645813232345+verschuivingx)*omf),((y+1.9137509943926-verschuivingy)*omf)),Array(((x+16.1140934314526+verschuivingx)*omf),((y+2.59553555207089-verschuivingy)*omf)),Array(((x+17.3143649822112+verschuivingx)*omf),((y+3.27732010974919-verschuivingy)*omf)),Array(((x+18.9907488415657+verschuivingx)*omf),((y+4.76319014373934-verschuivingy)*omf)),Array(((x+19.0317454875302+verschuivingx)*omf),((y+7.62640967828423-verschuivingy)*omf)),Array(((x+18.3909575758164+verschuivingx)*omf),((y+9.27609404131734-verschuivingy)*omf)),Array(((x+16.9870808337552+verschuivingx)*omf),((y+11.1304171245429-verschuivingy)*omf)),Array(((x+16.1416542018489+verschuivingx)*omf),((y+10.0941321576423-verschuivingy)*omf)),Array(((x+15.9094547112601+verschuivingx)*omf),((y+11.6414971605792-verschuivingy)*omf)),Array(((x+15.7327212710939+verschuivingx)*omf),((y+12.2619590041257-verschuivingy)*omf)),Array(((x+15.159801756481+verschuivingx)*omf),((y+12.5754627673836-verschuivingy)*omf)),Array(((x+14.1104254236421+verschuivingx)*omf),((y+11.6483873531783-verschuivingy)*omf)),Array(((x+13.6463709520945+verschuivingx)*omf),((y+12.0164958927838-verschuivingy)*omf)),Array(((x+13.4417322319021+verschuivingx)*omf),((y+13.3798927533254-verschuivingy)*omf)),Array(((x+12.8963734876854+verschuivingx)*omf),((y+12.9027469158395-verschuivingy)*omf)),Array(((x+12.5012209421286+verschuivingx)*omf),((y+12.5482465066172-verschuivingy)*omf)),Array(((x+11.3012939009999+verschuivingx)*omf),((y+13.0799971204507-verschuivingy)*omf)),Array(((x+10.6336342381497+verschuivingx)*omf),((y+13.8162141996617-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+10.6336342381497+verschuivingx)*omf),((y+13.8162141996617-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+10.5909150440355+verschuivingx)*omf),((y+13.181627461287-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+10.1530433043644+verschuivingx)*omf),((y+12.8429744950426-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+9.16757350788194+verschuivingx)*omf),((y+13.4541345785804-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+9.33052656285002+verschuivingx)*omf),((y+13.9309359064363-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+9.08592472558292+verschuivingx)*omf),((y+13.1406308153226-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+10.3728404482748+verschuivingx)*omf),((y+12.9733713899801-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+10.5692109373484+verschuivingx)*omf),((y+11.4692423456024-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+10.0209238612772+verschuivingx)*omf),((y+11.033093154081-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+8.74709950452349+verschuivingx)*omf),((y+11.3397067247398-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+8.7715596882502+verschuivingx)*omf),((y+12.0316543165017-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+8.5856967428902+verschuivingx)*omf),((y+13.0744849663715-verschuivingy)*omf));			line.pathPoints[6].leftDirection = Array(((x+8.63151652367404+verschuivingx)*omf),((y+13.7461064899661-verschuivingy)*omf));			line.pathPoints[6].rightDirection = Array(((x+8.05515191276156+verschuivingx)*omf),((y+13.6465432069095-verschuivingy)*omf));			line.pathPoints[7].leftDirection = Array(((x+7.91338620003563+verschuivingx)*omf),((y+13.3593944303431-verschuivingy)*omf));			line.pathPoints[7].rightDirection = Array(((x+7.99813556900423+verschuivingx)*omf),((y+13.1060075975122-verschuivingy)*omf));			line.pathPoints[8].leftDirection = Array(((x+8.16556724916171+verschuivingx)*omf),((y+13.025736853733-verschuivingy)*omf));			line.pathPoints[8].rightDirection = Array(((x+8.65270386591619+verschuivingx)*omf),((y+12.5386002369785-verschuivingy)*omf));			line.pathPoints[9].leftDirection = Array(((x+8.42343270718203+verschuivingx)*omf),((y+11.5624322005048-verschuivingy)*omf));			line.pathPoints[9].rightDirection = Array(((x+6.93635688948704+verschuivingx)*omf),((y+11.8015218836927-verschuivingy)*omf));			line.pathPoints[10].leftDirection = Array(((x+7.14805805709357+verschuivingx)*omf),((y+12.5752905125686-verschuivingy)*omf));			line.pathPoints[10].rightDirection = Array(((x+6.73946963596852+verschuivingx)*omf),((y+13.1628516864546-verschuivingy)*omf));			line.pathPoints[11].leftDirection = Array(((x+6.62939880919833+verschuivingx)*omf),((y+13.3049619088104-verschuivingy)*omf));			line.pathPoints[11].rightDirection = Array(((x+6.38927559712063+verschuivingx)*omf),((y+13.0395172389312-verschuivingy)*omf));			line.pathPoints[12].leftDirection = Array(((x+6.47884810090858+verschuivingx)*omf),((y+12.8309166579942-verschuivingy)*omf));			line.pathPoints[12].rightDirection = Array(((x+6.34207777781698+verschuivingx)*omf),((y+12.2561023404165-verschuivingy)*omf));			line.pathPoints[13].leftDirection = Array(((x+6.00997049454164+verschuivingx)*omf),((y+12.2545520470817-verschuivingy)*omf));			line.pathPoints[13].rightDirection = Array(((x+5.54608827780904+verschuivingx)*omf),((y+12.4192276501996-verschuivingy)*omf));			line.pathPoints[14].leftDirection = Array(((x+5.1753959159789+verschuivingx)*omf),((y+12.5310210251195-verschuivingy)*omf));			line.pathPoints[14].rightDirection = Array(((x+5.23327353381111+verschuivingx)*omf),((y+12.0416450957704-verschuivingy)*omf));			line.pathPoints[15].leftDirection = Array(((x+5.74952121429668+verschuivingx)*omf),((y+12.0080554068499-verschuivingy)*omf));			line.pathPoints[15].rightDirection = Array(((x+5.39639884359417+verschuivingx)*omf),((y+11.2652926446698-verschuivingy)*omf));			line.pathPoints[16].leftDirection = Array(((x+5.05240597808544+verschuivingx)*omf),((y+11.2229179601855-verschuivingy)*omf));			line.pathPoints[16].rightDirection = Array(((x+4.60178738210605+verschuivingx)*omf),((y+11.3731241588453-verschuivingy)*omf));			line.pathPoints[17].leftDirection = Array(((x+4.39301454635413+verschuivingx)*omf),((y+11.4819892019106-verschuivingy)*omf));			line.pathPoints[17].rightDirection = Array(((x+4.55924044280677+verschuivingx)*omf),((y+10.8834037198662-verschuivingy)*omf));			line.pathPoints[18].leftDirection = Array(((x+4.8014307126642+verschuivingx)*omf),((y+10.7380206560257-verschuivingy)*omf));			line.pathPoints[18].rightDirection = Array(((x+4.34926182335001+verschuivingx)*omf),((y+10.2860240215265-verschuivingy)*omf));			line.pathPoints[19].leftDirection = Array(((x+4.07417088383201+verschuivingx)*omf),((y+10.2929142141256-verschuivingy)*omf));			line.pathPoints[19].rightDirection = Array(((x+4.43297766342875+verschuivingx)*omf),((y+9.81869670849436-verschuivingy)*omf));			line.pathPoints[20].leftDirection = Array(((x+4.69601076589838+verschuivingx)*omf),((y+9.61836435867631-verschuivingy)*omf));			line.pathPoints[20].rightDirection = Array(((x+5.13801662112892+verschuivingx)*omf),((y+9.52999763859319-verschuivingy)*omf));			line.pathPoints[21].leftDirection = Array(((x+5.42981627769968+verschuivingx)*omf),((y+9.7143102906184-verschuivingy)*omf));			line.pathPoints[21].rightDirection = Array(((x+5.83272028993049+verschuivingx)*omf),((y+9.25180611240561-verschuivingy)*omf));			line.pathPoints[22].leftDirection = Array(((x+5.82927519363095+verschuivingx)*omf),((y+9.0295974010855-verschuivingy)*omf));			line.pathPoints[22].rightDirection = Array(((x+6.23993067253571+verschuivingx)*omf),((y+8.7715596882502-verschuivingy)*omf));			line.pathPoints[23].leftDirection = Array(((x+6.40736235269319+verschuivingx)*omf),((y+8.65873278444038-verschuivingy)*omf));			line.pathPoints[23].rightDirection = Array(((x+6.87658446869008+verschuivingx)*omf),((y+8.3173237411563-verschuivingy)*omf));			line.pathPoints[24].leftDirection = Array(((x+7.15804883636222+verschuivingx)*omf),((y+8.08357395723274-verschuivingy)*omf));			line.pathPoints[24].rightDirection = Array(((x+7.9953794919646+verschuivingx)*omf),((y+7.38180784101713-verschuivingy)*omf));			line.pathPoints[25].leftDirection = Array(((x+8.97016948991849+verschuivingx)*omf),((y+6.79131833527655-verschuivingy)*omf));			line.pathPoints[25].rightDirection = Array(((x+8.97016948991849+verschuivingx)*omf),((y+5.01674923138524-verschuivingy)*omf));			line.pathPoints[26].leftDirection = Array(((x+8.74658274007856+verschuivingx)*omf),((y+4.15340809872136-verschuivingy)*omf));			line.pathPoints[26].rightDirection = Array(((x+8.9968689862399+verschuivingx)*omf),((y+3.08370569771523-verschuivingy)*omf));			line.pathPoints[27].leftDirection = Array(((x+9.10504501004535+verschuivingx)*omf),((y+2.8074089744924-verschuivingy)*omf));			line.pathPoints[27].rightDirection = Array(((x+9.38030820437833+verschuivingx)*omf),((y+2.35679037851301-verschuivingy)*omf));			line.pathPoints[28].leftDirection = Array(((x+9.76925957659601+verschuivingx)*omf),((y+1.79420615279868-verschuivingy)*omf));			line.pathPoints[28].rightDirection = Array(((x+10.141329976946+verschuivingx)*omf),((y+2.07291444343119-verschuivingy)*omf));			line.pathPoints[29].leftDirection = Array(((x+10.1401241932411+verschuivingx)*omf),((y+2.28857747178218-verschuivingy)*omf));			line.pathPoints[29].rightDirection = Array(((x+10.7194171360082+verschuivingx)*omf),((y+2.54213655942808-verschuivingy)*omf));			line.pathPoints[30].leftDirection = Array(((x+11.1187037971245+verschuivingx)*omf),((y+2.47495718158711-verschuivingy)*omf));			line.pathPoints[30].rightDirection = Array(((x+11.4911187071044+verschuivingx)*omf),((y+1.99884487299115-verschuivingy)*omf));			line.pathPoints[31].leftDirection = Array(((x+11.5531304404961+verschuivingx)*omf),((y+1.59507958668546-verschuivingy)*omf));			line.pathPoints[31].rightDirection = Array(((x+11.256163139476+verschuivingx)*omf),((y+1.00975772539419-verschuivingy)*omf));			line.pathPoints[32].leftDirection = Array(((x+11.2913031217313+verschuivingx)*omf),((y+1.0207820335527-verschuivingy)*omf));			line.pathPoints[32].rightDirection = Array(((x+12.7055151526911+verschuivingx)*omf),((y+0.67592789396909-verschuivingy)*omf));			line.pathPoints[33].leftDirection = Array(((x+13.9677984368413+verschuivingx)*omf),((y+0.78892705259389-verschuivingy)*omf));			line.pathPoints[33].rightDirection = Array(((x+15.3930347759596+verschuivingx)*omf),((y+1.24264623524286-verschuivingy)*omf));			line.pathPoints[34].leftDirection = Array(((x+15.9246131349781+verschuivingx)*omf),((y+1.4669220043427-verschuivingy)*omf));			line.pathPoints[34].rightDirection = Array(((x+17.0167086619312+verschuivingx)*omf),((y+2.10426481975697-verschuivingy)*omf));			line.pathPoints[35].leftDirection = Array(((x+17.7088285085081+verschuivingx)*omf),((y+2.51044167347234-verschuivingy)*omf));			line.pathPoints[35].rightDirection = Array(((x+18.118794968153+verschuivingx)*omf),((y+3.08198314956547-verschuivingy)*omf));			line.pathPoints[36].leftDirection = Array(((x+18.1139718333336+verschuivingx)*omf),((y+3.08646177475486-verschuivingy)*omf));			line.pathPoints[36].rightDirection = Array(((x+17.0060288634026+verschuivingx)*omf),((y+2.64893454471371-verschuivingy)*omf));			line.pathPoints[37].leftDirection = Array(((x+15.9197900001588+verschuivingx)*omf),((y+2.01813741226856-verschuivingy)*omf));			line.pathPoints[37].rightDirection = Array(((x+14.9482728436894+verschuivingx)*omf),((y+2.22105358431126-verschuivingy)*omf));			line.pathPoints[38].leftDirection = Array(((x+15.6038746694912+verschuivingx)*omf),((y+2.35024469554389-verschuivingy)*omf));			line.pathPoints[38].rightDirection = Array(((x+16.5326726318463+verschuivingx)*omf),((y+2.79638466633388-verschuivingy)*omf));			line.pathPoints[39].leftDirection = Array(((x+16.9285141966631+verschuivingx)*omf),((y+3.04133101323093-verschuivingy)*omf));			line.pathPoints[39].rightDirection = Array(((x+17.932415258348+verschuivingx)*omf),((y+3.65593619306827-verschuivingy)*omf));			line.pathPoints[40].leftDirection = Array(((x+18.5773372856213+verschuivingx)*omf),((y+4.17752377281811-verschuivingy)*omf));			line.pathPoints[40].rightDirection = Array(((x+19.4465350819944+verschuivingx)*omf),((y+5.40914569990246-verschuivingy)*omf));			line.pathPoints[41].leftDirection = Array(((x+19.2363842077227+verschuivingx)*omf),((y+6.8429947797696-verschuivingy)*omf));			line.pathPoints[41].rightDirection = Array(((x+18.8687924325621+verschuivingx)*omf),((y+8.25048887294529-verschuivingy)*omf));			line.pathPoints[42].leftDirection = Array(((x+18.6458947019821+verschuivingx)*omf),((y+8.76673655343085-verschuivingy)*omf));			line.pathPoints[42].rightDirection = Array(((x+18.0998469385055+verschuivingx)*omf),((y+9.85814306112406-verschuivingy)*omf));			line.pathPoints[43].leftDirection = Array(((x+17.5737807335663+verschuivingx)*omf),((y+10.8486082472408-verschuivingy)*omf));			line.pathPoints[43].rightDirection = Array(((x+17.2592434414186+verschuivingx)*omf),((y+10.519946060265-verschuivingy)*omf));			line.pathPoints[44].leftDirection = Array(((x+16.8723591269806+verschuivingx)*omf),((y+9.77942261067964-verschuivingy)*omf));			line.pathPoints[44].rightDirection = Array(((x+15.4323088737743+verschuivingx)*omf),((y+10.3995399445962-verschuivingy)*omf));			line.pathPoints[45].leftDirection = Array(((x+15.9094547112601+verschuivingx)*omf),((y+10.9984699362707-verschuivingy)*omf));			line.pathPoints[45].rightDirection = Array(((x+15.9094547112601+verschuivingx)*omf),((y+12.0087444261098-verschuivingy)*omf));			line.pathPoints[46].leftDirection = Array(((x+16.0172862254356+verschuivingx)*omf),((y+12.0609376350478-verschuivingy)*omf));			line.pathPoints[46].rightDirection = Array(((x+15.5701127257558+verschuivingx)*omf),((y+12.3765084560853-verschuivingy)*omf));			line.pathPoints[47].leftDirection = Array(((x+15.3792543907615+verschuivingx)*omf),((y+12.534982885864-verschuivingy)*omf));			line.pathPoints[47].rightDirection = Array(((x+15.2755569921454+verschuivingx)*omf),((y+11.8716295933882-verschuivingy)*omf));			line.pathPoints[48].leftDirection = Array(((x+14.7222745264398+verschuivingx)*omf),((y+11.3779472936646-verschuivingy)*omf));			line.pathPoints[48].rightDirection = Array(((x+13.9281798293966+verschuivingx)*omf),((y+11.7286580969575-verschuivingy)*omf));			line.pathPoints[49].leftDirection = Array(((x+13.7386995329221+verschuivingx)*omf),((y+11.8464803904016-verschuivingy)*omf));			line.pathPoints[49].rightDirection = Array(((x+13.4324304718933+verschuivingx)*omf),((y+12.4107871642657-verschuivingy)*omf));			line.pathPoints[50].leftDirection = Array(((x+13.8572108456262+verschuivingx)*omf),((y+13.1649187442343-verschuivingy)*omf));			line.pathPoints[50].rightDirection = Array(((x+13.0124732329798+verschuivingx)*omf),((y+13.6022737194605-verschuivingy)*omf));			line.pathPoints[51].leftDirection = Array(((x+13.062771638953+verschuivingx)*omf),((y+13.1242666078998-verschuivingy)*omf));			line.pathPoints[51].rightDirection = Array(((x+12.8016333394481+verschuivingx)*omf),((y+12.7756228623866-verschuivingy)*omf));			line.pathPoints[52].leftDirection = Array(((x+12.6445369481893+verschuivingx)*omf),((y+12.6238663703921-verschuivingy)*omf));			line.pathPoints[52].rightDirection = Array(((x+12.0661052794971+verschuivingx)*omf),((y+12.3179418189932-verschuivingy)*omf));			line.pathPoints[53].leftDirection = Array(((x+11.4394422626114+verschuivingx)*omf),((y+12.7168839704795-verschuivingy)*omf));			line.pathPoints[53].rightDirection = Array(((x+11.1028563541466+verschuivingx)*omf),((y+13.6026182290904-verschuivingy)*omf));			line.pathPoints[54].leftDirection = Array(((x+11.509033207862+verschuivingx)*omf),((y+13.933002964216-verschuivingy)*omf));			line.pathPoints[54].rightDirection = Array(((x+10.6336342381497+verschuivingx)*omf),((y+13.8162141996617-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+12.8150692150163+verschuivingx)*omf),((y+6.6311213573481-verschuivingy)*omf)),Array(((x+14.0280876220832+verschuivingx)*omf),((y+4.13618261722367-verschuivingy)*omf)),Array(((x+11.6967909561868+verschuivingx)*omf),((y+5.18590345969248-verschuivingy)*omf)),Array(((x+12.8150692150163+verschuivingx)*omf),((y+6.6311213573481-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+12.8150692150163+verschuivingx)*omf),((y+6.6311213573481-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+14.2196349763374+verschuivingx)*omf),((y+6.795452450836-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+14.8797154273286+verschuivingx)*omf),((y+5.07634939736722-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+13.1871396153663+verschuivingx)*omf),((y+3.20704014523865-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+11.6967909561868+verschuivingx)*omf),((y+3.94015663778004-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+11.6967909561868+verschuivingx)*omf),((y+6.00273579231262-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+12.1691136588532+verschuivingx)*omf),((y+6.45059831125238-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+12.8150692150163+verschuivingx)*omf),((y+6.6311213573481-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+9.85642051297429+verschuivingx)*omf),((y+9.38513133919768-verschuivingy)*omf)),Array(((x+10.7015026352506+verschuivingx)*omf),((y+8.29458610557936-verschuivingy)*omf)),Array(((x+10.2517453133461+verschuivingx)*omf),((y+7.93991344154206-verschuivingy)*omf)),Array(((x+9.17463595529599+verschuivingx)*omf),((y+8.13094403135137-verschuivingy)*omf)),Array(((x+8.31577344782151+verschuivingx)*omf),((y+8.40362340345969-verschuivingy)*omf)),Array(((x+8.38398635455233+verschuivingx)*omf),((y+8.75812381268201-verschuivingy)*omf)),Array(((x+9.85642051297429+verschuivingx)*omf),((y+9.38513133919768-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+9.85642051297429+verschuivingx)*omf),((y+9.38513133919768-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+10.5061656750669+verschuivingx)*omf),((y+9.47763217484023-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+11.0356769763057+verschuivingx)*omf),((y+8.83667200831145-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+10.6081405255332+verschuivingx)*omf),((y+8.14300186839975-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+10.4413978646356+verschuivingx)*omf),((y+7.99210665048004-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+9.81215102552524+verschuivingx)*omf),((y+7.81933507105828-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+9.54808439416576+verschuivingx)*omf),((y+8.13094403135137-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+8.91625373283074+verschuivingx)*omf),((y+8.13094403135137-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+8.55916950138377+verschuivingx)*omf),((y+8.32541971746021-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+7.86997798666147+verschuivingx)*omf),((y+8.54676715470544-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+8.06100857647077+verschuivingx)*omf),((y+8.6229037829252-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+8.85906513425843+verschuivingx)*omf),((y+8.95690586916527-verschuivingy)*omf));			line.pathPoints[6].leftDirection = Array(((x+9.33621097174426+verschuivingx)*omf),((y+9.27850560872702-verschuivingy)*omf));			line.pathPoints[6].rightDirection = Array(((x+9.85642051297429+verschuivingx)*omf),((y+9.38513133919768-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+10.7152830204488+verschuivingx)*omf),((y+5.32232927315413-verschuivingy)*omf)),Array(((x+11.5059326211924+verschuivingx)*omf),((y+4.19061513875635-verschuivingy)*omf)),Array(((x+9.66556217797996+verschuivingx)*omf),((y+3.60425974857522-verschuivingy)*omf)),Array(((x+9.31106176875764+verschuivingx)*omf),((y+3.84989511473218-verschuivingy)*omf)),Array(((x+9.66556217797996+verschuivingx)*omf),((y+4.29982469145166-verschuivingy)*omf)),Array(((x+10.3607826112264+verschuivingx)*omf),((y+5.14525132335795-verschuivingy)*omf)),Array(((x+10.7152830204488+verschuivingx)*omf),((y+5.32232927315413-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+10.7152830204488+verschuivingx)*omf),((y+5.32232927315413-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+11.4304850122326+verschuivingx)*omf),((y+5.4177584406513-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+11.8776585119124+verschuivingx)*omf),((y+4.78902836598586-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+11.2647758802249+verschuivingx)*omf),((y+3.80166376653867-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+10.230041206659+verschuivingx)*omf),((y+3.60425974857522-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+9.23630317905769+verschuivingx)*omf),((y+3.60425974857522-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+9.03114769442029+verschuivingx)*omf),((y+3.46886746400343-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+9.42337190812253+verschuivingx)*omf),((y+4.00285739043161-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+9.54722312009087+verschuivingx)*omf),((y+4.14996300242182-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+9.87588530706667+verschuivingx)*omf),((y+4.56613063540584-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+10.0906870613428+verschuivingx)*omf),((y+4.94026809353552-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+10.4631019713227+verschuivingx)*omf),((y+5.22242148046757-verschuivingy)*omf));			line.pathPoints[6].leftDirection = Array(((x+10.5826468129166+verschuivingx)*omf),((y+5.27478694422053-verschuivingy)*omf));			line.pathPoints[6].rightDirection = Array(((x+10.7152830204488+verschuivingx)*omf),((y+5.32232927315413-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+10.7834959271796+verschuivingx)*omf),((y+12.7527129719947-verschuivingy)*omf)),Array(((x+11.6557943102223+verschuivingx)*omf),((y+12.0983169298977-verschuivingy)*omf)),Array(((x+12.460568805794+verschuivingx)*omf),((y+11.2802788135728-verschuivingy)*omf)),Array(((x+11.3836317025589+verschuivingx)*omf),((y+10.4486325668646-verschuivingy)*omf)),Array(((x+10.7972763123777+verschuivingx)*omf),((y+12.527748183635-verschuivingy)*omf)),Array(((x+10.7834959271796+verschuivingx)*omf),((y+12.7527129719947-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+10.7834959271796+verschuivingx)*omf),((y+12.7527129719947-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+11.0721949970808+verschuivingx)*omf),((y+12.7248076919685-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+11.4322075603823+verschuivingx)*omf),((y+12.2786677211785-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+11.9334690719649+verschuivingx)*omf),((y+11.8743856704279-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+12.3551488590282+verschuivingx)*omf),((y+11.6669908731958-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+12.6669300741363+verschuivingx)*omf),((y+10.5239079210095-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+11.9765327757091+verschuivingx)*omf),((y+10.0710500124354-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+10.9777993584735+verschuivingx)*omf),((y+10.7068425345149-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+10.7972763123777+verschuivingx)*omf),((y+11.9407037741939-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+10.7972763123777+verschuivingx)*omf),((y+12.6004397155552-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+10.7797063212501+verschuivingx)*omf),((y+12.6858781037837-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+10.7834959271796+verschuivingx)*omf),((y+12.7527129719947-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+7.78402283398803+verschuivingx)*omf),((y+10.475848827631-verschuivingy)*omf)),Array(((x+8.50663178281584+verschuivingx)*omf),((y+9.39891172439582-verschuivingy)*omf)),Array(((x+6.88416368054906+verschuivingx)*omf),((y+9.50794902227616-verschuivingy)*omf)),Array(((x+6.50244701056041+verschuivingx)*omf),((y+10.0123111205283-verschuivingy)*omf)),Array(((x+7.78402283398803+verschuivingx)*omf),((y+10.475848827631-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+7.78402283398803+verschuivingx)*omf),((y+10.475848827631-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+8.45306053535804+verschuivingx)*omf),((y+10.5738618173528-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+8.92555549283949+verschuivingx)*omf),((y+9.86916736928257-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+8.06979357203459+verschuivingx)*omf),((y+8.90850226615678-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+7.40023910621965+verschuivingx)*omf),((y+9.32036352876639-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+6.50882043871455+verschuivingx)*omf),((y+9.64437483573781-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+5.87285566182009+verschuivingx)*omf),((y+9.77253241808057-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+6.93187826429765+verschuivingx)*omf),((y+10.1759531947563-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+7.34752913283674+verschuivingx)*omf),((y+10.3263316482311-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+7.78402283398803+verschuivingx)*omf),((y+10.475848827631-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+11.7109158510149+verschuivingx)*omf),((y+15.1932191905865-verschuivingy)*omf)),Array(((x+11.479060870056+verschuivingx)*omf),((y+13.6253558646674-verschuivingy)*omf)),Array(((x+11.9148655519474+verschuivingx)*omf),((y+12.9435713069891-verschuivingy)*omf)),Array(((x+12.7740725690519+verschuivingx)*omf),((y+13.7889979388953-verschuivingy)*omf)),Array(((x+11.7109158510149+verschuivingx)*omf),((y+15.1932191905865-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+11.7109158510149+verschuivingx)*omf),((y+15.1932191905865-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+11.5772461145928+verschuivingx)*omf),((y+14.7636156820343-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+11.479060870056+verschuivingx)*omf),((y+14.0942334710343-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+11.479060870056+verschuivingx)*omf),((y+13.1625071768246-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+11.5865478746016+verschuivingx)*omf),((y+13.0915381930542-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+12.3871882546139+verschuivingx)*omf),((y+12.7311811201226-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+12.9931806937024+verschuivingx)*omf),((y+13.189034418331-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+12.6865671230436+verschuivingx)*omf),((y+14.0272263480083-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+11.9630969001409+verschuivingx)*omf),((y+15.2273256439519-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+11.7109158510149+verschuivingx)*omf),((y+15.1932191905865-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+11.6699192050504+verschuivingx)*omf),((y+8.26719758999804-verschuivingy)*omf)),Array(((x+12.2831463463679+verschuivingx)*omf),((y+7.20369636233109-verschuivingy)*omf)),Array(((x+11.1789929823664+verschuivingx)*omf),((y+7.08105093406758-verschuivingy)*omf)),Array(((x+10.4286510083273+verschuivingx)*omf),((y+7.20369636233109-verschuivingy)*omf)),Array(((x+10.2653534437293+verschuivingx)*omf),((y+7.40833508252356-verschuivingy)*omf)),Array(((x+11.6699192050504+verschuivingx)*omf),((y+8.26719758999804-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+11.6699192050504+verschuivingx)*omf),((y+8.26719758999804-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+12.3541153301383+verschuivingx)*omf),((y+8.35435852637632-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+12.721018086039+verschuivingx)*omf),((y+7.64156810200219-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+12.0240751046427+verschuivingx)*omf),((y+6.94462512060593-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+11.6234104050066+verschuivingx)*omf),((y+7.02351782586532-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+10.9461044725177+verschuivingx)*omf),((y+7.1113677815035-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+10.6591279507663+verschuivingx)*omf),((y+7.14375168671915-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+10.1385738999063+verschuivingx)*omf),((y+7.27948848092089-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+10.1160085191444+verschuivingx)*omf),((y+7.22919007494766-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+10.5020315595075+verschuivingx)*omf),((y+7.69238327242036-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+11.2895805735815+verschuivingx)*omf),((y+8.17521351880041-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+11.6699192050504+verschuivingx)*omf),((y+8.26719758999804-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+7.25227222015455+verschuivingx)*omf),((y+3.56360761224069-verschuivingy)*omf)),Array(((x+6.50244701056041+verschuivingx)*omf),((y+2.39089683187842-verschuivingy)*omf)),Array(((x+6.50244701056041+verschuivingx)*omf),((y+1.85931847285992-verschuivingy)*omf)),Array(((x+7.33409325726855+verschuivingx)*omf),((y+2.1866026213159-verschuivingy)*omf)),Array(((x+8.08409072167767+verschuivingx)*omf),((y+2.67752884399987-verschuivingy)*omf)),Array(((x+7.25227222015455+verschuivingx)*omf),((y+3.56360761224069-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+7.25227222015455+verschuivingx)*omf),((y+3.56360761224069-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+6.87968505535967+verschuivingx)*omf),((y+3.41581298099057-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+6.67211800331258+verschuivingx)*omf),((y+2.7374735196118-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+6.37739001488723+verschuivingx)*omf),((y+2.13561519608275-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+6.12124710501668+verschuivingx)*omf),((y+1.81866633652539-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+6.77650442118854+verschuivingx)*omf),((y+1.88860179140598-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+7.077950347398+verschuivingx)*omf),((y+2.08738384788924-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+7.60126047529761+verschuivingx)*omf),((y+2.289955510302-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+7.98607773195585+verschuivingx)*omf),((y+2.393997418548-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+8.32007981819593+verschuivingx)*omf),((y+3.36034693056803-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+7.82484722513754+verschuivingx)*omf),((y+3.63629914416091-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+7.25227222015455+verschuivingx)*omf),((y+3.56360761224069-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+8.77931115492416+verschuivingx)*omf),((y+13.3935008837085-verschuivingy)*omf)),Array(((x+9.32466989914081+verschuivingx)*omf),((y+11.4847452789503-verschuivingy)*omf)),Array(((x+10.1971405369985+verschuivingx)*omf),((y+11.8392456881726-verschuivingy)*omf)),Array(((x+9.92446116489014+verschuivingx)*omf),((y+12.5618546370004-verschuivingy)*omf)),Array(((x+8.77931115492416+verschuivingx)*omf),((y+13.3935008837085-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+8.77931115492416+verschuivingx)*omf),((y+13.3935008837085-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+8.63323907182381+verschuivingx)*omf),((y+12.9532175766278-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+8.9730978217731+verschuivingx)*omf),((y+11.6306451072356-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+9.80594985218608+verschuivingx)*omf),((y+11.2852742032071-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+10.0956824509771+verschuivingx)*omf),((y+11.4609741144835-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+10.3094506763634+verschuivingx)*omf),((y+12.2574803789363-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+10.1547658525142+verschuivingx)*omf),((y+12.3682402249664-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+9.69363971282118+verschuivingx)*omf),((y+12.7561580682943-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+9.06456512852579+verschuivingx)*omf),((y+13.4301911592986-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+8.77931115492416+verschuivingx)*omf),((y+13.3935008837085-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+7.86584387110203+verschuivingx)*omf),((y+6.54947257504908-verschuivingy)*omf)),Array(((x+7.08863014592656+verschuivingx)*omf),((y+5.8132554958381-verschuivingy)*omf)),Array(((x+6.74791012190239+verschuivingx)*omf),((y+5.43153882584944-verschuivingy)*omf)),Array(((x+6.63887282402206+verschuivingx)*omf),((y+5.19968384489063-verschuivingy)*omf)),Array(((x+7.68187572870677+verschuivingx)*omf),((y+5.26789675162146-verschuivingy)*omf)),Array(((x+8.65666572666066+verschuivingx)*omf),((y+5.92212053890346-verschuivingy)*omf)),Array(((x+7.86584387110203+verschuivingx)*omf),((y+6.54947257504908-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+7.86584387110203+verschuivingx)*omf),((y+6.54947257504908-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+7.57214941156653+verschuivingx)*omf),((y+6.42510459863581-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+7.29085729870936+verschuivingx)*omf),((y+6.04511047679692-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+6.97873157397134+verschuivingx)*omf),((y+5.68716497127506-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+6.84437281828941+verschuivingx)*omf),((y+5.56555307190142-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+6.70605220186302+verschuivingx)*omf),((y+5.37331669838728-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+6.56101364765253+verschuivingx)*omf),((y+5.286155762009-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+6.765652367845+verschuivingx)*omf),((y+5.05843489660963-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+7.48188788851867+verschuivingx)*omf),((y+5.26789675162146-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+8.2704704314826+verschuivingx)*omf),((y+5.26789675162146-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+8.59999389253328+verschuivingx)*omf),((y+5.38985316062505-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+8.70248550744449+verschuivingx)*omf),((y+6.35344659560545-verschuivingy)*omf));			line.pathPoints[6].leftDirection = Array(((x+8.31095031300216+verschuivingx)*omf),((y+6.61596293363014-verschuivingy)*omf));			line.pathPoints[6].rightDirection = Array(((x+7.86584387110203+verschuivingx)*omf),((y+6.54947257504908-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+6.16172698653623+verschuivingx)*omf),((y+8.14455216173454-verschuivingy)*omf)),Array(((x+5.35729700059443+verschuivingx)*omf),((y+7.36733843655908-verschuivingy)*omf)),Array(((x+4.98901620617397+verschuivingx)*omf),((y+6.97218589100222-verschuivingy)*omf)),Array(((x+5.22087118713278+verschuivingx)*omf),((y+6.79476343157609-verschuivingy)*omf)),Array(((x+6.304698482967+verschuivingx)*omf),((y+6.9039729842714-verschuivingy)*omf)),Array(((x+6.16172698653623+verschuivingx)*omf),((y+8.14455216173454-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+6.16172698653623+verschuivingx)*omf),((y+8.14455216173454-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+5.83513185734016+verschuivingx)*omf),((y+8.03844319570881-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+5.57227100968552+verschuivingx)*omf),((y+7.6050500812271-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+5.25497764049819+verschuivingx)*omf),((y+7.25433927793427-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+5.0460325499313+verschuivingx)*omf),((y+7.11171229113346-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+4.90047723127587+verschuivingx)*omf),((y+6.75411129524156-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+4.90977899128462+verschuivingx)*omf),((y+6.80130911454521-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+5.59380286155762+verschuivingx)*omf),((y+6.78683971008715-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+5.94141307818087+verschuivingx)*omf),((y+6.9039729842714-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+7.21006979048523+verschuivingx)*omf),((y+6.9039729842714-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+7.11946375780741+verschuivingx)*omf),((y+8.29699767298903-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+6.16172698653623+verschuivingx)*omf),((y+8.14455216173454-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+13.3059954377003+verschuivingx)*omf),((y+10.8575654976196-verschuivingy)*omf)),Array(((x+13.2918705428722+verschuivingx)*omf),((y+10.9531669199318-verschuivingy)*omf)),Array(((x+14.5875712611279+verschuivingx)*omf),((y+9.07162757593984-verschuivingy)*omf)),Array(((x+13.3059954377003+verschuivingx)*omf),((y+10.8575654976196-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+13.3059954377003+verschuivingx)*omf),((y+10.8575654976196-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+13.3015168125109+verschuivingx)*omf),((y+10.8355168813026-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+13.2911815236123+verschuivingx)*omf),((y+10.9473102562226-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+13.769016380358+verschuivingx)*omf),((y+10.877374801342-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+15.4629702308402+verschuivingx)*omf),((y+9.66332286538526-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+13.6163986142886+verschuivingx)*omf),((y+8.41568124050807-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+13.419683615585+verschuivingx)*omf),((y+10.312034498588-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+13.3059954377003+verschuivingx)*omf),((y+10.8575654976196-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+6.12073034057175+verschuivingx)*omf),((y+11.3484917203036-verschuivingy)*omf)),Array(((x+6.69330534555473+verschuivingx)*omf),((y+10.312206753403-verschuivingy)*omf)),Array(((x+5.19365492636644+verschuivingx)*omf),((y+10.7623085849374-verschuivingy)*omf)),Array(((x+5.03001285213845+verschuivingx)*omf),((y+11.1030286089616-verschuivingy)*omf)),Array(((x+6.12073034057175+verschuivingx)*omf),((y+11.3484917203036-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+6.12073034057175+verschuivingx)*omf),((y+11.3484917203036-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+6.85177977533342+verschuivingx)*omf),((y+11.4566677441091-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+7.27845495203103+verschuivingx)*omf),((y+10.6370793344493-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+6.1984172621263+verschuivingx)*omf),((y+10.0376325783299-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+5.58140051487929+verschuivingx)*omf),((y+10.5526744751106-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+4.95301494984381+verschuivingx)*omf),((y+10.89218871543-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+4.60557698803554+verschuivingx)*omf),((y+10.9548894680815-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+5.37366120801723+verschuivingx)*omf),((y+11.2229179601855-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+5.77484267209827+verschuivingx)*omf),((y+11.2546128461412-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+6.12073034057175+verschuivingx)*omf),((y+11.3484917203036-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+14.0280876220832+verschuivingx)*omf),((y+13.8162141996617-verschuivingy)*omf)),Array(((x+13.8237934115207+verschuivingx)*omf),((y+12.2209623581613-verschuivingy)*omf)),Array(((x+14.4101488017018+verschuivingx)*omf),((y+11.8120294274063-verschuivingy)*omf)),Array(((x+14.7370884405278+verschuivingx)*omf),((y+12.9299631766059-verschuivingy)*omf)),Array(((x+14.0280876220832+verschuivingx)*omf),((y+13.8162141996617-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+14.0280876220832+verschuivingx)*omf),((y+13.8162141996617-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+13.8937288664013+verschuivingx)*omf),((y+13.5283764038354-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+13.7194069936447+verschuivingx)*omf),((y+12.5621991466304-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+13.8771924041635+verschuivingx)*omf),((y+12.0466404854047-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+14.2172234089277+verschuivingx)*omf),((y+11.8170248170406-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+15.0068394807815+verschuivingx)*omf),((y+11.7966987488733-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+14.966187344447+verschuivingx)*omf),((y+12.5832142340575-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+14.6147875218943+verschuivingx)*omf),((y+13.114964847891-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+14.2558084874826+verschuivingx)*omf),((y+13.8317171330096-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+14.0280876220832+verschuivingx)*omf),((y+13.8162141996617-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+5.34351661539628+verschuivingx)*omf),((y+5.77225884987362-verschuivingy)*omf)),Array(((x+4.60729953618531+verschuivingx)*omf),((y+4.89961595720099-verschuivingy)*omf)),Array(((x+4.4846541079218+verschuivingx)*omf),((y+4.40868973451702-verschuivingy)*omf)),Array(((x+5.54126514298969+verschuivingx)*omf),((y+4.64054471547584-verschuivingy)*omf)),Array(((x+5.34351661539628+verschuivingx)*omf),((y+5.77225884987362-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+5.34351661539628+verschuivingx)*omf),((y+5.77225884987362-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+5.03655853510757+verschuivingx)*omf),((y+5.61378442009493-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+4.80711512155843+verschuivingx)*omf),((y+5.17074503597452-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+4.49619518052525+verschuivingx)*omf),((y+4.74872073928129-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+4.18768680690175+verschuivingx)*omf),((y+4.48310381458701-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+4.76784102374371+verschuivingx)*omf),((y+4.33806526037652-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+5.23361804344107+verschuivingx)*omf),((y+4.64054471547584-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+6.33846042670246+verschuivingx)*omf),((y+4.64054471547584-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+6.28850653035918+verschuivingx)*omf),((y+5.91591936556429-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+5.34351661539628+verschuivingx)*omf),((y+5.77225884987362-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+6.82973115901638+verschuivingx)*omf),((y+13.4481056600562-verschuivingy)*omf)),Array(((x+7.51134346187971+verschuivingx)*omf),((y+11.9346748556698-verschuivingy)*omf)),Array(((x+8.23395241070751+verschuivingx)*omf),((y+12.7118885808452-verschuivingy)*omf)),Array(((x+7.68859366649087+verschuivingx)*omf),((y+13.0663889900675-verschuivingy)*omf)),Array(((x+6.82973115901638+verschuivingx)*omf),((y+13.4481056600562-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+6.82973115901638+verschuivingx)*omf),((y+13.4481056600562-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+6.77719344044845+verschuivingx)*omf),((y+13.144592676067-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+7.21523743493453+verschuivingx)*omf),((y+12.036821960951-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+8.06221436017561+verschuivingx)*omf),((y+11.7448500495653-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+8.48182708945917+verschuivingx)*omf),((y+12.1892674722055-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+8.16022734989743+verschuivingx)*omf),((y+12.8672624239543-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+7.8400056488555+verschuivingx)*omf),((y+12.9924916744425-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+7.44864270922814+verschuivingx)*omf),((y+13.1831777546218-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+7.10361631482955+verschuivingx)*omf),((y+13.4625750645143-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+6.82973115901638+verschuivingx)*omf),((y+13.4481056600562-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+11.0560030444729+verschuivingx)*omf),((y+12.2891752648921-verschuivingy)*omf)),Array(((x+11.2744221498636+verschuivingx)*omf),((y+10.8303492368533-verschuivingy)*omf)),Array(((x+12.0654162602372+verschuivingx)*omf),((y+10.639490901859-verschuivingy)*omf)),Array(((x+11.7653483725475+verschuivingx)*omf),((y+11.7712050362567-verschuivingy)*omf)),Array(((x+11.0560030444729+verschuivingx)*omf),((y+12.2891752648921-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+11.0560030444729+verschuivingx)*omf),((y+12.2891752648921-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+11.0253416874071+verschuivingx)*omf),((y+11.9264066245509-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+11.100444786737+verschuivingx)*omf),((y+11.1145696815651-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+11.3905218951579+verschuivingx)*omf),((y+10.6405244307488-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+11.8321832407585+verschuivingx)*omf),((y+10.475504318001-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+12.6214548029824+verschuivingx)*omf),((y+11.0311983511163-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+12.0261421624225+verschuivingx)*omf),((y+11.5524414212362-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+11.5955051249804+verschuivingx)*omf),((y+11.9133152586126-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+11.3054280165594+verschuivingx)*omf),((y+12.3074342752796-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+11.0560030444729+verschuivingx)*omf),((y+12.2891752648921-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+9.84281238259112+verschuivingx)*omf),((y+9.16705674343701-verschuivingy)*omf)),Array(((x+9.02477426626615+verschuivingx)*omf),((y+8.82616446459786-verschuivingy)*omf)),Array(((x+8.84752406165499+verschuivingx)*omf),((y+8.45805592499237-verschuivingy)*omf)),Array(((x+10.4286510083273+verschuivingx)*omf),((y+8.43083966422603-verschuivingy)*omf)),Array(((x+9.84281238259112+verschuivingx)*omf),((y+9.16705674343701-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+9.84281238259112+verschuivingx)*omf),((y+9.16705674343701-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+9.58977005939015+verschuivingx)*omf),((y+9.0302864203454-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+9.2979704028194+verschuivingx)*omf),((y+8.93434048840331-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+8.74520470155875+verschuivingx)*omf),((y+8.71574912819771-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+8.43187319311589+verschuivingx)*omf),((y+8.62428182144501-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+9.35016361175738+verschuivingx)*omf),((y+8.25703455591441-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+10.1234154761884+verschuivingx)*omf),((y+7.88444739111952-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+10.6074515062733+verschuivingx)*omf),((y+8.75037234600805-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+10.3621606497463+verschuivingx)*omf),((y+9.26610326204869-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+9.84281238259112+verschuivingx)*omf),((y+9.16705674343701-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+9.2020244708773+verschuivingx)*omf),((y+14.9613642096277-verschuivingy)*omf)),Array(((x+10.156316145849+verschuivingx)*omf),((y+13.270855455445-verschuivingy)*omf)),Array(((x+9.96545781085462+verschuivingx)*omf),((y+14.416005465411-verschuivingy)*omf)),Array(((x+9.2020244708773+verschuivingx)*omf),((y+14.9613642096277-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+9.2020244708773+verschuivingx)*omf),((y+14.9613642096277-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+9.16378390195245+verschuivingx)*omf),((y+14.4406379039527-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+9.3262201924756+verschuivingx)*omf),((y+12.8819040832274-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+10.7590357434529+verschuivingx)*omf),((y+13.5531810971921-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+10.2283186585093+verschuivingx)*omf),((y+14.2110222355886-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+9.77477173067527+verschuivingx)*omf),((y+14.564833625551-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+9.46178473186237+verschuivingx)*omf),((y+14.9672208733369-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+9.2020244708773+verschuivingx)*omf),((y+14.9613642096277-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+10.6474146233479+verschuivingx)*omf),((y+5.07703841662713-verschuivingy)*omf)),Array(((x+9.87002864335746+verschuivingx)*omf),((y+4.23161178472084-verschuivingy)*omf)),Array(((x+10.0881032391181+verschuivingx)*omf),((y+3.90432763626486-verschuivingy)*omf)),Array(((x+11.2196451187009+verschuivingx)*omf),((y+4.19061513875635-verschuivingy)*omf)),Array(((x+10.6474146233479+verschuivingx)*omf),((y+5.07703841662713-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+10.6474146233479+verschuivingx)*omf),((y+5.07703841662713-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+10.3445906586186+verschuivingx)*omf),((y+4.91339634239914-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+10.0779402050345+verschuivingx)*omf),((y+4.4958506708953-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+9.66022227871568+verschuivingx)*omf),((y+3.96530584076666-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+9.53051440303812+verschuivingx)*omf),((y+3.83232512360454-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+10.4152151327591+verschuivingx)*omf),((y+3.94670232074916-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+11.0342989377859+verschuivingx)*omf),((y+3.9783972067049-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+11.6247884435264+verschuivingx)*omf),((y+4.65432510067398-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+11.1972519927539+verschuivingx)*omf),((y+5.15317504484689-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+10.6474146233479+verschuivingx)*omf),((y+5.07703841662713-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+10.6880667596824+verschuivingx)*omf),((y+2.17282223611775-verschuivingy)*omf)),Array(((x+10.1290998850826+verschuivingx)*omf),((y+1.5799211629675-verschuivingy)*omf)),Array(((x+10.0200625872023+verschuivingx)*omf),((y+0.72760433846214-verschuivingy)*omf)),Array(((x+10.1971405369985+verschuivingx)*omf),((y+0.53674600346781-verschuivingy)*omf)),Array(((x+10.9881346473721+verschuivingx)*omf),((y+1.23231094634425-verschuivingy)*omf)),Array(((x+10.6880667596824+verschuivingx)*omf),((y+2.17282223611775-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+10.6880667596824+verschuivingx)*omf),((y+2.17282223611775-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+10.3311547830504+verschuivingx)*omf),((y+2.08703933825929-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+10.1290998850826+verschuivingx)*omf),((y+2.01917094115842-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+10.1290998850826+verschuivingx)*omf),((y+1.30086836270503-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+10.0105885723786+verschuivingx)*omf),((y+1.02043752392275-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+10.0288475827661+verschuivingx)*omf),((y+0.45165212486925-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+9.99232956199101+verschuivingx)*omf),((y+0.44648448041995-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+10.4372637490762+verschuivingx)*omf),((y+0.64251045986358-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+10.7976208220077+verschuivingx)*omf),((y+1.04214163060983-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+11.2306694268594+verschuivingx)*omf),((y+1.47484572583163-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+11.2720105824539+verschuivingx)*omf),((y+2.28582139474255-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+10.6880667596824+verschuivingx)*omf),((y+2.17282223611775-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+4.37561681004147+verschuivingx)*omf),((y+7.98091008750655-verschuivingy)*omf)),Array(((x+3.46214952621933+verschuivingx)*omf),((y+7.29912552982825-verschuivingy)*omf)),Array(((x+3.271291191225+verschuivingx)*omf),((y+7.10137700223485-verschuivingy)*omf)),Array(((x+4.26657951216113+verschuivingx)*omf),((y+6.98562176657042-verschuivingy)*omf)),Array(((x+5.03001285213845+verschuivingx)*omf),((y+7.40833508252356-verschuivingy)*omf)),Array(((x+4.37561681004147+verschuivingx)*omf),((y+7.98091008750655-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+4.37561681004147+verschuivingx)*omf),((y+7.98091008750655-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+4.05901246011405+verschuivingx)*omf),((y+7.77937195398366-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+3.74533644204124+verschuivingx)*omf),((y+7.54200481894558-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+3.41564072617559+verschuivingx)*omf),((y+7.25950692238358-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+3.271291191225+verschuivingx)*omf),((y+7.17854715934447-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+3.271291191225+verschuivingx)*omf),((y+6.95668295765431-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+4.12946467943958+verschuivingx)*omf),((y+6.99251195916949-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+4.71995418518015+verschuivingx)*omf),((y+6.96288413099348-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+4.94974210835925+verschuivingx)*omf),((y+7.01456057548652-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+5.09943154257411+verschuivingx)*omf),((y+7.74905510654773-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+4.76336239855432+verschuivingx)*omf),((y+8.04946750386733-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+4.37561681004147+verschuivingx)*omf),((y+7.98091008750655-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+16.2236474937779+verschuivingx)*omf),((y+11.9892796320174-verschuivingy)*omf)),Array(((x+16.2918604005087+verschuivingx)*omf),((y+10.2985986230198-verschuivingy)*omf)),Array(((x+16.8640908958617+verschuivingx)*omf),((y+10.5168454735955-verschuivingy)*omf)),Array(((x+16.7414454675982+verschuivingx)*omf),((y+11.2666706831896-verschuivingy)*omf)),Array(((x+16.2236474937779+verschuivingx)*omf),((y+11.9892796320174-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+16.2236474937779+verschuivingx)*omf),((y+11.9892796320174-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+16.0899777573559+verschuivingx)*omf),((y+11.4628689174482-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+15.6831118843806+verschuivingx)*omf),((y+10.5227021373047-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+16.5399073340753+verschuivingx)*omf),((y+10.2071313162671-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+16.7448905638978+verschuivingx)*omf),((y+10.3127235178479-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+17.0235988545303+verschuivingx)*omf),((y+10.7903861197787-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+16.869258540311+verschuivingx)*omf),((y+11.0293035481515-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+16.6522174734402+verschuivingx)*omf),((y+11.4322075603823-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+16.4441336569482+verschuivingx)*omf),((y+12.0225248113079-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+16.2236474937779+verschuivingx)*omf),((y+11.9892796320174-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+7.7976309643712+verschuivingx)*omf),((y+10.2713823622535-verschuivingy)*omf)),Array(((x+6.92516032651355+verschuivingx)*omf),((y+9.97148672937881-verschuivingy)*omf)),Array(((x+7.1842315682387+verschuivingx)*omf),((y+9.58977005939015-verschuivingy)*omf)),Array(((x+8.35659783897102+verschuivingx)*omf),((y+9.90327382264799-verschuivingy)*omf)),Array(((x+7.7976309643712+verschuivingx)*omf),((y+10.2713823622535-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+7.7976309643712+verschuivingx)*omf),((y+10.2713823622535-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+7.56784304119211+verschuivingx)*omf),((y+10.1771589784611-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+7.17613559193479+verschuivingx)*omf),((y+9.97148672937881-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+6.393926477125+verschuivingx)*omf),((y+9.97148672937881-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+7.04263811032775+verschuivingx)*omf),((y+9.64437483573781-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+7.54269383820549+verschuivingx)*omf),((y+9.4511049333338-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+8.51386648504486+verschuivingx)*omf),((y+9.1567214545384-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+8.31646246708141+verschuivingx)*omf),((y+10.0943044124573-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+8.04464436904798+verschuivingx)*omf),((y+10.3151350852576-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+7.7976309643712+verschuivingx)*omf),((y+10.2713823622535-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+13.5919384305619+verschuivingx)*omf),((y+10.557669864745-verschuivingy)*omf)),Array(((x+13.7962326411244+verschuivingx)*omf),((y+9.46695237631167-verschuivingy)*omf)),Array(((x+14.5324497203354+verschuivingx)*omf),((y+9.49434089189299-verschuivingy)*omf)),Array(((x+13.8372292870889+verschuivingx)*omf),((y+10.4486325668646-verschuivingy)*omf)),Array(((x+13.5919384305619+verschuivingx)*omf),((y+10.557669864745-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+13.5919384305619+verschuivingx)*omf),((y+10.557669864745-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+13.5592100157163+verschuivingx)*omf),((y+10.3153073400726-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+13.6697976069314+verschuivingx)*omf),((y+9.67072982242926-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+13.9633198116519+verschuivingx)*omf),((y+9.19823486494782-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+14.4042921379926+verschuivingx)*omf),((y+9.19754584568791-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+14.7274421708891+verschuivingx)*omf),((y+9.94237566564773-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+14.1307514918094+verschuivingx)*omf),((y+10.2762054970728-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+13.7459342351511+verschuivingx)*omf),((y+10.5025483239524-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+13.7049375891867+verschuivingx)*omf),((y+10.5533634943705-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+13.5919384305619+verschuivingx)*omf),((y+10.557669864745-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+5.07083724328796+verschuivingx)*omf),((y+9.52155715265933-verschuivingy)*omf)),Array(((x+4.53925888426946+verschuivingx)*omf),((y+9.18066487382018-verschuivingy)*omf)),Array(((x+4.3620086796583+verschuivingx)*omf),((y+8.82616446459786-verschuivingy)*omf)),Array(((x+5.52076682000744+verschuivingx)*omf),((y+8.83977259498103-verschuivingy)*omf)),Array(((x+5.46633429847476+verschuivingx)*omf),((y+9.42612798516216-verschuivingy)*omf)),Array(((x+5.07083724328796+verschuivingx)*omf),((y+9.52155715265933-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+5.07083724328796+verschuivingx)*omf),((y+9.52155715265933-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+4.89841017349615+verschuivingx)*omf),((y+9.4035626044002-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+4.71478654073085+verschuivingx)*omf),((y+9.29952069615419-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+4.34064908260117+verschuivingx)*omf),((y+9.04630611813825-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+4.01215915044035+verschuivingx)*omf),((y+8.96224576842956-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+4.68378067403502+verschuivingx)*omf),((y+8.7009352141097-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+5.32043447018939+verschuivingx)*omf),((y+8.61429104217636-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+5.69698349572874+verschuivingx)*omf),((y+9.03803788701936-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+5.65753714309905+verschuivingx)*omf),((y+9.29521432577977-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+5.36039758726401+verschuivingx)*omf),((y+9.49864726226741-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+5.26100655902238+verschuivingx)*omf),((y+9.56324281788372-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+5.07083724328796+verschuivingx)*omf),((y+9.52155715265933-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+3.73482889832766+verschuivingx)*omf),((y+9.86244943149848-verschuivingy)*omf)),Array(((x+2.83496974488869+verschuivingx)*omf),((y+9.18066487382018-verschuivingy)*omf)),Array(((x+4.17097808984899+verschuivingx)*omf),((y+9.22166151978466-verschuivingy)*omf)),Array(((x+3.99390014005281+verschuivingx)*omf),((y+9.82145278553399-verschuivingy)*omf)),Array(((x+3.73482889832766+verschuivingx)*omf),((y+9.86244943149848-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+3.73482889832766+verschuivingx)*omf),((y+9.86244943149848-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+3.62182973970285+verschuivingx)*omf),((y+9.80663887144598-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+2.82084485006059+verschuivingx)*omf),((y+9.27885011835697-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+2.87596639085318+verschuivingx)*omf),((y+8.89678893873836-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+4.02438924230371+verschuivingx)*omf),((y+9.01461123218251-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+4.35511848705923+verschuivingx)*omf),((y+9.48124952595475-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+4.24263609287935+verschuivingx)*omf),((y+9.72499008914697-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+3.90983979034412+verschuivingx)*omf),((y+9.85400894556461-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+3.84576099917274+verschuivingx)*omf),((y+9.88053618707104-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+3.73482889832766+verschuivingx)*omf),((y+9.86244943149848-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+11.6289225590859+verschuivingx)*omf),((y+8.02190673347103-verschuivingy)*omf)),Array(((x+11.0425671689047+verschuivingx)*omf),((y+7.68101445463189-verschuivingy)*omf)),Array(((x+11.0835638148692+verschuivingx)*omf),((y+7.34012217579274-verschuivingy)*omf)),Array(((x+12.0512913654091+verschuivingx)*omf),((y+7.39455469732541-verschuivingy)*omf)),Array(((x+11.9289904467755+verschuivingx)*omf),((y+7.96730195712338-verschuivingy)*omf)),Array(((x+11.6289225590859+verschuivingx)*omf),((y+8.02190673347103-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+11.6289225590859+verschuivingx)*omf),((y+8.02190673347103-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+11.4235948196335+verschuivingx)*omf),((y+7.9225157052294-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+11.2399711868682+verschuivingx)*omf),((y+7.79642518066636-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+10.7500784930741+verschuivingx)*omf),((y+7.51030993298984-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+10.5960826884848+verschuivingx)*omf),((y+7.43176173736041-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+11.434963637422+verschuivingx)*omf),((y+7.27432083647159-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+11.8432075489171+verschuivingx)*omf),((y+7.11963601262239-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+12.2097657951878+verschuivingx)*omf),((y+7.60332753307733-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+12.1391413210473+verschuivingx)*omf),((y+7.86739416443682-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+11.8394179429876+verschuivingx)*omf),((y+8.00967664160768-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+11.7632813147678+verschuivingx)*omf),((y+8.04946750386733-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+11.6289225590859+verschuivingx)*omf),((y+8.02190673347103-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+6.22976763845208+verschuivingx)*omf),((y+11.1848496460756-verschuivingy)*omf)),Array(((x+5.62997637270275+verschuivingx)*omf),((y+11.0622042178121-verschuivingy)*omf)),Array(((x+5.3709051309776+verschuivingx)*omf),((y+10.8713458828178-verschuivingy)*omf)),Array(((x+5.99791265749327+verschuivingx)*omf),((y+10.5304536039786-verschuivingy)*omf)),Array(((x+6.50244701056041+verschuivingx)*omf),((y+11.1576333853093-verschuivingy)*omf)),Array(((x+6.22976763845208+verschuivingx)*omf),((y+11.1848496460756-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+6.22976763845208+verschuivingx)*omf),((y+11.1848496460756-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+6.04252665457227+verschuivingx)*omf),((y+11.1395466297367-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+5.81394451509801+verschuivingx)*omf),((y+11.1014783156268-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+5.39278149247966+verschuivingx)*omf),((y+11.0113890473939-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+5.25308283753345+verschuivingx)*omf),((y+11.0563475541029-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+5.45203714883169+verschuivingx)*omf),((y+10.7438773197349-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+5.85907527662194+verschuivingx)*omf),((y+10.5990110203394-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+6.53551993503596+verschuivingx)*omf),((y+10.2653534437293-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+7.0497005577418+verschuivingx)*omf),((y+10.8894326383903-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+6.42579361789572+verschuivingx)*omf),((y+11.1951849349742-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+6.3329482726232+verschuivingx)*omf),((y+11.2031086564632-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+6.22976763845208+verschuivingx)*omf),((y+11.1848496460756-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+5.32990848501311+verschuivingx)*omf),((y+13.5707510883197-verschuivingy)*omf)),Array(((x+5.58897972673827+verschuivingx)*omf),((y+12.6572838044976-verschuivingy)*omf)),Array(((x+6.28437241479974+verschuivingx)*omf),((y+12.773211294977-verschuivingy)*omf)),Array(((x+5.32990848501311+verschuivingx)*omf),((y+13.5707510883197-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+5.32990848501311+verschuivingx)*omf),((y+13.5707510883197-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+5.31561133537004+verschuivingx)*omf),((y+13.3654233488673-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+5.46616204365979+verschuivingx)*omf),((y+12.8331559705889-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+5.74952121429668+verschuivingx)*omf),((y+12.4276681361334-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+6.28437241479974+verschuivingx)*omf),((y+12.3444690604996-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+6.28437241479974+verschuivingx)*omf),((y+13.1409753249525-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+5.68027477867599+verschuivingx)*omf),((y+13.553697861637-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+5.32990848501311+verschuivingx)*omf),((y+13.5707510883197-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+4.1575422142808+verschuivingx)*omf),((y+12.2209623581613-verschuivingy)*omf)),Array(((x+4.78454974079647+verschuivingx)*omf),((y+11.4575290181839-verschuivingy)*omf)),Array(((x+5.34351661539628+verschuivingx)*omf),((y+11.8461358807717-verschuivingy)*omf)),Array(((x+4.1575422142808+verschuivingx)*omf),((y+12.2209623581613-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+4.1575422142808+verschuivingx)*omf),((y+12.2209623581613-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+4.14531212241745+verschuivingx)*omf),((y+12.0864313476643-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+4.62676433027769+verschuivingx)*omf),((y+11.5324598626989-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+5.1337102507545+verschuivingx)*omf),((y+11.2919921409912-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+5.34351661539628+verschuivingx)*omf),((y+11.531254078994-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+5.34351661539628+verschuivingx)*omf),((y+12.2678156678349-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+4.51342066202293+verschuivingx)*omf),((y+12.2433554841082-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+4.1575422142808+verschuivingx)*omf),((y+12.2209623581613-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+11.887993800811+verschuivingx)*omf),((y+14.7296814834838-verschuivingy)*omf)),Array(((x+12.6100859851939+verschuivingx)*omf),((y+13.7207850321645-verschuivingy)*omf)),Array(((x+12.3920113894332+verschuivingx)*omf),((y+13.0663889900675-verschuivingy)*omf)),Array(((x+12.0922880113736+verschuivingx)*omf),((y+13.8706467211944-verschuivingy)*omf)),Array(((x+11.887993800811+verschuivingx)*omf),((y+14.7296814834838-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+11.887993800811+verschuivingx)*omf),((y+14.7296814834838-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+12.089187424704+verschuivingx)*omf),((y+14.668875533797-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+12.5315377895645+verschuivingx)*omf),((y+13.9555683449779-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+12.6638294874667+verschuivingx)*omf),((y+13.561104818681-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+12.6111195140838+verschuivingx)*omf),((y+13.0949832893537-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+12.1880616885007+verschuivingx)*omf),((y+13.0396894937461-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+12.1432754366067+verschuivingx)*omf),((y+13.6523998706187-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+12.0275202009423+verschuivingx)*omf),((y+14.1503885407167-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+11.9589627845815+verschuivingx)*omf),((y+14.4447720195121-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+11.887993800811+verschuivingx)*omf),((y+14.7296814834838-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+4.02111640081915+verschuivingx)*omf),((y+11.1166367393448-verschuivingy)*omf)),Array(((x+3.28489932160817+verschuivingx)*omf),((y+10.8167411064701-verschuivingy)*omf)),Array(((x+3.96651162447149+verschuivingx)*omf),((y+10.5032373432123-verschuivingy)*omf)),Array(((x+4.02111640081915+verschuivingx)*omf),((y+11.1166367393448-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+4.02111640081915+verschuivingx)*omf),((y+11.1166367393448-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+3.88141774587294+verschuivingx)*omf),((y+11.0642712755918-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+3.26319521492109+verschuivingx)*omf),((y+10.9604016221608-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+3.29385657198697+verschuivingx)*omf),((y+10.757829959748-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+3.89123627032662+verschuivingx)*omf),((y+10.5223576276747-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+4.65587539400877+verschuivingx)*omf),((y+10.326848412676-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+4.57870523689915+verschuivingx)*omf),((y+11.264086860965-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+4.02111640081915+verschuivingx)*omf),((y+11.1166367393448-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+7.26588035053772+verschuivingx)*omf),((y+3.42718179877904-verschuivingy)*omf)),Array(((x+7.68859366649087+verschuivingx)*omf),((y+3.16811055705388-verschuivingy)*omf)),Array(((x+7.34770138765172+verschuivingx)*omf),((y+2.82739053302971-verschuivingy)*omf)),Array(((x+6.62526469363889+verschuivingx)*omf),((y+2.17282223611775-verschuivingy)*omf)),Array(((x+6.61148430844074+verschuivingx)*omf),((y+2.1866026213159-verschuivingy)*omf)),Array(((x+7.26588035053772+verschuivingx)*omf),((y+3.42718179877904-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+7.26588035053772+verschuivingx)*omf),((y+3.42718179877904-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+7.69100523390054+verschuivingx)*omf),((y+3.48678196476102-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+7.88616993926929+verschuivingx)*omf),((y+3.41202337506107-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+7.59161420565891+verschuivingx)*omf),((y+3.04856571545996-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+7.45897799812675+verschuivingx)*omf),((y+2.9345330279453-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+7.12066954151225+verschuivingx)*omf),((y+2.60828240837918-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+6.88657524795874+verschuivingx)*omf),((y+2.3516227340637-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+6.62974331882828+verschuivingx)*omf),((y+2.1866026213159-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+6.62526469363889+verschuivingx)*omf),((y+2.19108124650529-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+6.7017458314886+verschuivingx)*omf),((y+2.52835617422993-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+6.9909616658347+verschuivingx)*omf),((y+3.24769228157318-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+7.26588035053772+verschuivingx)*omf),((y+3.42718179877904-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+7.90684051706651+verschuivingx)*omf),((y+6.41304676158743-verschuivingy)*omf)),Array(((x+8.46580739166633+verschuivingx)*omf),((y+6.18119178062861-verschuivingy)*omf)),Array(((x+7.98866155418051+verschuivingx)*omf),((y+5.92212053890346-verschuivingy)*omf)),Array(((x+7.02058949401071+verschuivingx)*omf),((y+5.44497470141764-verschuivingy)*omf)),Array(((x+7.00680910881257+verschuivingx)*omf),((y+5.45875508661578-verschuivingy)*omf)),Array(((x+7.90684051706651+verschuivingx)*omf),((y+6.41304676158743-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+7.90684051706651+verschuivingx)*omf),((y+6.41304676158743-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+8.03689290237402+verschuivingx)*omf),((y+6.43785145494409-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+8.48527218575871+verschuivingx)*omf),((y+6.33105346965846-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+8.45650563165758+verschuivingx)*omf),((y+6.11022279685816-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+8.05963053795096+verschuivingx)*omf),((y+5.95622699226887-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+7.67171269462314+verschuivingx)*omf),((y+5.77156983061371-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+7.36957774915377+verschuivingx)*omf),((y+5.54109288817471-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+7.02506811920011+verschuivingx)*omf),((y+5.45875508661578-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+7.02058949401071+verschuivingx)*omf),((y+5.46323371180518-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+7.20886400678039+verschuivingx)*omf),((y+5.76812473431417-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+7.58196793602021+verschuivingx)*omf),((y+6.23355724438157-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+7.90684051706651+verschuivingx)*omf),((y+6.41304676158743-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+6.17516286210443+verschuivingx)*omf),((y+8.00829860308786-verschuivingy)*omf)),Array(((x+6.74791012190239+verschuivingx)*omf),((y+7.80365988289539-verschuivingy)*omf)),Array(((x+6.28437241479974+verschuivingx)*omf),((y+7.53098051078706-verschuivingy)*omf)),Array(((x+5.31630035462994+verschuivingx)*omf),((y+7.0400542881031-verschuivingy)*omf)),Array(((x+5.30269222424678+verschuivingx)*omf),((y+7.05383467330124-verschuivingy)*omf)),Array(((x+6.17516286210443+verschuivingx)*omf),((y+8.00829860308786-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+6.17516286210443+verschuivingx)*omf),((y+8.00829860308786-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+6.31313896890087+verschuivingx)*omf),((y+8.03069172903485-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+6.74222571300815+verschuivingx)*omf),((y+7.93095619116327-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+6.75273325672174+verschuivingx)*omf),((y+7.69479483983003-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+6.37049982228815+verschuivingx)*omf),((y+7.57542225305109-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+5.9679403196873+verschuivingx)*omf),((y+7.36837196544894-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+5.66046547495365+verschuivingx)*omf),((y+7.16614481266614-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+5.32077897981934+verschuivingx)*omf),((y+7.05383467330124-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+5.31630035462994+verschuivingx)*omf),((y+7.05831329849064-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+5.48338752515747+verschuivingx)*omf),((y+7.39489920695537-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+5.87767879663944+verschuivingx)*omf),((y+7.7716204873097-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+6.17516286210443+verschuivingx)*omf),((y+8.00829860308786-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+9.06559865741566+verschuivingx)*omf),((y+12.9845679529535-verschuivingy)*omf)),Array(((x+9.93824155008828+verschuivingx)*omf),((y+12.3709963020061-verschuivingy)*omf)),Array(((x+9.97906594123779+verschuivingx)*omf),((y+11.6619954835614-verschuivingy)*omf)),Array(((x+9.58374114086596+verschuivingx)*omf),((y+12.1255331906641-verschuivingy)*omf)),Array(((x+9.06559865741566+verschuivingx)*omf),((y+12.9845679529535-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+9.06559865741566+verschuivingx)*omf),((y+12.9845679529535-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+9.1403572471156+verschuivingx)*omf),((y+13.0427900804157-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+9.81042847737547+verschuivingx)*omf),((y+12.5062163317629-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+10.0500349250082+verschuivingx)*omf),((y+12.252657244117-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+10.2358978703682+verschuivingx)*omf),((y+11.8032444318424-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+9.84091757962637+verschuivingx)*omf),((y+11.5860311101567-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+9.64833669648227+verschuivingx)*omf),((y+12.0168404024137-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+9.41234759996402+verschuivingx)*omf),((y+12.4137154961203-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+9.22355632274941+verschuivingx)*omf),((y+12.6858781037837-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+9.06559865741566+verschuivingx)*omf),((y+12.9845679529535-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+5.38451326136077+verschuivingx)*omf),((y+5.64961342161011-verschuivingy)*omf)),Array(((x+5.80722657731391+verschuivingx)*omf),((y+5.4177584406513-verschuivingy)*omf)),Array(((x+5.42533765251028+verschuivingx)*omf),((y+5.17246758412429-verschuivingy)*omf)),Array(((x+4.67551244291613+verschuivingx)*omf),((y+4.69532174663847-verschuivingy)*omf)),Array(((x+4.66190431253296+verschuivingx)*omf),((y+4.70875762220666-verschuivingy)*omf)),Array(((x+5.38451326136077+verschuivingx)*omf),((y+5.64961342161011-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+5.38451326136077+verschuivingx)*omf),((y+5.64961342161011-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+5.69457192831907+verschuivingx)*omf),((y+5.70852456833219-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+5.91092397592997+verschuivingx)*omf),((y+5.59208031340785-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+5.74314778614253+verschuivingx)*omf),((y+5.3099269264758-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+5.53161887335098+verschuivingx)*omf),((y+5.24240303900488-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+5.1924491426616+verschuivingx)*omf),((y+5.018471779535-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+4.96024965207283+verschuivingx)*omf),((y+4.78317170227665-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+4.68016332292051+verschuivingx)*omf),((y+4.70875762220666-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+4.67551244291613+verschuivingx)*omf),((y+4.71323624739606-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+4.84690598381808+verschuivingx)*omf),((y+5.00021276914746-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+5.09753673960937+verschuivingx)*omf),((y+5.46116665402546-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+5.38451326136077+verschuivingx)*omf),((y+5.64961342161011-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+14.177949311113+verschuivingx)*omf),((y+13.4071090140917-verschuivingy)*omf)),Array(((x+14.7780850864923+verschuivingx)*omf),((y+12.2347427433594-verschuivingy)*omf)),Array(((x+14.4101488017018+verschuivingx)*omf),((y+12.3846044323892-verschuivingy)*omf)),Array(((x+14.177949311113+verschuivingx)*omf),((y+13.4071090140917-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+14.177949311113+verschuivingx)*omf),((y+13.4071090140917-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+14.4104933113318+verschuivingx)*omf),((y+13.3464753192199-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+14.8962518895664+verschuivingx)*omf),((y+12.5246475969654-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+14.6333910419118+verschuivingx)*omf),((y+11.8781752763574-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+14.4842183721418+verschuivingx)*omf),((y+12.0747180202459-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+14.3264329616231+verschuivingx)*omf),((y+12.7342817067922-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+14.2585645645222+verschuivingx)*omf),((y+13.0634606582129-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+14.177949311113+verschuivingx)*omf),((y+13.4071090140917-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+7.12962679189105+verschuivingx)*omf),((y+13.1618181575647-verschuivingy)*omf)),Array(((x+8.08409072167767+verschuivingx)*omf),((y+12.1801379670117-verschuivingy)*omf)),Array(((x+7.37508990323303+verschuivingx)*omf),((y+12.8617502698751-verschuivingy)*omf)),Array(((x+7.12962679189105+verschuivingx)*omf),((y+13.1618181575647-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+7.12962679189105+verschuivingx)*omf),((y+13.1618181575647-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+7.263813292758+verschuivingx)*omf),((y+13.1676748212739-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+8.63099975922911+verschuivingx)*omf),((y+12.5594430695907-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+7.98469969343604+verschuivingx)*omf),((y+12.111236041021-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+7.48516073000323+verschuivingx)*omf),((y+12.7397938608715-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+7.29051278907941+verschuivingx)*omf),((y+12.9554568892225-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+7.19611715047211+verschuivingx)*omf),((y+13.0520918404245-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+7.12962679189105+verschuivingx)*omf),((y+13.1618181575647-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+9.88363677374063+verschuivingx)*omf),((y+9.04441131517351-verschuivingy)*omf)),Array(((x+10.3199582200769+verschuivingx)*omf),((y+8.82616446459786-verschuivingy)*omf)),Array(((x+10.1427080154658+verschuivingx)*omf),((y+8.66252239036987-verschuivingy)*omf)),Array(((x+9.01116613588298+verschuivingx)*omf),((y+8.63530612960353-verschuivingy)*omf)),Array(((x+9.88363677374063+verschuivingx)*omf),((y+9.04441131517351-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+9.88363677374063+verschuivingx)*omf),((y+9.04441131517351-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+10.0632985457615+verschuivingx)*omf),((y+9.09109237003223-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+10.2918806852357+verschuivingx)*omf),((y+8.9686191965837-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+10.3523421252926+verschuivingx)*omf),((y+8.66166111629498-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+10.4358857105563+verschuivingx)*omf),((y+8.73280235488042-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+9.81594063145473+verschuivingx)*omf),((y+8.58431870437039-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+9.31140627838759+verschuivingx)*omf),((y+8.6132575132865-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+9.20460829310196+verschuivingx)*omf),((y+8.84924660980476-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+9.62887190238989+verschuivingx)*omf),((y+8.89506639058859-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+9.88363677374063+verschuivingx)*omf),((y+9.04441131517351-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+10.7152830204488+verschuivingx)*omf),((y+4.96782886393181-verschuivingy)*omf)),Array(((x+11.1245604608337+verschuivingx)*omf),((y+4.76319014373934-verschuivingy)*omf)),Array(((x+10.7559351567833+verschuivingx)*omf),((y+4.54511554797867-verschuivingy)*omf)),Array(((x+9.97906594123779+verschuivingx)*omf),((y+4.10896635645733-verschuivingy)*omf)),Array(((x+10.7152830204488+verschuivingx)*omf),((y+4.96782886393181-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+10.7152830204488+verschuivingx)*omf),((y+4.96782886393181-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+10.8947725376546+verschuivingx)*omf),((y+4.97919768172029-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+11.1648680875383+verschuivingx)*omf),((y+4.89754889942127-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+11.0997557674771+verschuivingx)*omf),((y+4.68223038070023-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+10.832760804263+verschuivingx)*omf),((y+4.58680121320306-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+10.4989309728379+verschuivingx)*omf),((y+4.40627816710735-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+10.2706933429936+verschuivingx)*omf),((y+4.20749611062408-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+10.1156640095144+verschuivingx)*omf),((y+4.37354975226175-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+10.445876489825+verschuivingx)*omf),((y+4.83725971417938-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+10.7152830204488+verschuivingx)*omf),((y+4.96782886393181-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+11.3150742861981+verschuivingx)*omf),((y+11.9346748556698-verschuivingy)*omf)),Array(((x+12.1198487817699+verschuivingx)*omf),((y+11.2530625528064-verschuivingy)*omf)),Array(((x+12.0102947194446+verschuivingx)*omf),((y+10.7759167153206-verschuivingy)*omf)),Array(((x+11.8060005088821+verschuivingx)*omf),((y+11.048423832614-verschuivingy)*omf)),Array(((x+11.4649359752279+verschuivingx)*omf),((y+11.6483873531783-verschuivingy)*omf)),Array(((x+11.3150742861981+verschuivingx)*omf),((y+11.9346748556698-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+11.3150742861981+verschuivingx)*omf),((y+11.9346748556698-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+11.4087809055455+verschuivingx)*omf),((y+11.9525893564273-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+12.0643827313473+verschuivingx)*omf),((y+11.4306572670475-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+12.1439644558666+verschuivingx)*omf),((y+11.1739975927321-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+12.1102025121311+verschuivingx)*omf),((y+10.7936589612632-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+11.8966065415599+verschuivingx)*omf),((y+10.7554183923384-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+11.8452746066968+verschuivingx)*omf),((y+10.981244454773-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+11.6909342924775+verschuivingx)*omf),((y+11.2453110861325-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+11.5796576820025+verschuivingx)*omf),((y+11.4466769648404-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+11.4118814922151+verschuivingx)*omf),((y+11.7422662273406-verschuivingy)*omf));			line.pathPoints[5].leftDirection = Array(((x+11.3588270092022+verschuivingx)*omf),((y+11.8244317740846-verschuivingy)*omf));			line.pathPoints[5].rightDirection = Array(((x+11.3150742861981+verschuivingx)*omf),((y+11.9346748556698-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+10.6060734677535+verschuivingx)*omf),((y+2.05017680785425-verschuivingy)*omf)),Array(((x+10.565076821789+verschuivingx)*omf),((y+1.51859844883574-verschuivingy)*omf)),Array(((x+10.2245290525798+verschuivingx)*omf),((y+0.85059427635559-verschuivingy)*omf)),Array(((x+10.1699242762321+verschuivingx)*omf),((y+0.85059427635559-verschuivingy)*omf)),Array(((x+10.6060734677535+verschuivingx)*omf),((y+2.05017680785425-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+10.6060734677535+verschuivingx)*omf),((y+2.05017680785425-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+11.0308538414863+verschuivingx)*omf),((y+2.15421871610025-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+10.6263995359207+verschuivingx)*omf),((y+1.6371097615398-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+10.4503551150144+verschuivingx)*omf),((y+1.29432267973591-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+10.3161686141475+verschuivingx)*omf),((y+1.08658337287385-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+10.2062700421922+verschuivingx)*omf),((y+0.85059427635559-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+10.1881832866197+verschuivingx)*omf),((y+0.85059427635559-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+10.2147105281261+verschuivingx)*omf),((y+1.23506702338388-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+10.1611392806683+verschuivingx)*omf),((y+1.99333271891189-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+10.6060734677535+verschuivingx)*omf),((y+2.05017680785425-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+9.46109571260246+verschuivingx)*omf),((y+14.6068638004053-verschuivingy)*omf)),Array(((x+10.2927419593106+verschuivingx)*omf),((y+13.9116433671589-verschuivingy)*omf)),Array(((x+9.95184968047145+verschuivingx)*omf),((y+13.7343931625477-verschuivingy)*omf)),Array(((x+9.6109574016323+verschuivingx)*omf),((y+14.3205762979138-verschuivingy)*omf)),Array(((x+9.46109571260246+verschuivingx)*omf),((y+14.6068638004053-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+9.46109571260246+verschuivingx)*omf),((y+14.6068638004053-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+9.56289830825377+verschuivingx)*omf),((y+14.6251228107929-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+10.2505395296413+verschuivingx)*omf),((y+14.1016404280783-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+10.3912717134773+verschuivingx)*omf),((y+13.4672259445186-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+10.1216929280386+verschuivingx)*omf),((y+13.4362200778228-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+9.83798924777177+verschuivingx)*omf),((y+13.9342087479208-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+9.71913342543775+verschuivingx)*omf),((y+14.1248948281002-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+9.55635262528465+verschuivingx)*omf),((y+14.4196228165255-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+9.509154805981+verschuivingx)*omf),((y+14.5017883632695-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+9.46109571260246+verschuivingx)*omf),((y+14.6068638004053-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+4.40283307080781+verschuivingx)*omf),((y+7.85826465924304-verschuivingy)*omf)),Array(((x+4.62090766656848+verschuivingx)*omf),((y+7.51754463521887-verschuivingy)*omf)),Array(((x+3.65300786121366+verschuivingx)*omf),((y+7.21747674752923-verschuivingy)*omf)),Array(((x+3.63939973083049+verschuivingx)*omf),((y+7.23091262309742-verschuivingy)*omf)),Array(((x+4.40283307080781+verschuivingx)*omf),((y+7.85826465924304-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+4.40283307080781+verschuivingx)*omf),((y+7.85826465924304-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+4.76853004300362+verschuivingx)*omf),((y+7.94404755710151-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+5.00951452915621+verschuivingx)*omf),((y+7.66981789165839-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+4.30378655219613+verschuivingx)*omf),((y+7.39283214917565-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+3.9761578941102+verschuivingx)*omf),((y+7.31945159799552-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+3.65748648640306+verschuivingx)*omf),((y+7.23091262309742-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+3.65300786121366+verschuivingx)*omf),((y+7.23539124828682-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+3.80459209839327+verschuivingx)*omf),((y+7.48860582630276-verschuivingy)*omf));			line.pathPoints[4].leftDirection = Array(((x+4.16581044539969+verschuivingx)*omf),((y+7.66740632424872-verschuivingy)*omf));			line.pathPoints[4].rightDirection = Array(((x+4.40283307080781+verschuivingx)*omf),((y+7.85826465924304-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+16.3593842879796+verschuivingx)*omf),((y+11.6211710924119-verschuivingy)*omf)),Array(((x+16.8093138646991+verschuivingx)*omf),((y+10.639490901859-verschuivingy)*omf)),Array(((x+16.5230263622076+verschuivingx)*omf),((y+10.4486325668646-verschuivingy)*omf)),Array(((x+16.3593842879796+verschuivingx)*omf),((y+11.6211710924119-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+16.3593842879796+verschuivingx)*omf),((y+11.6211710924119-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+16.4999442170007+verschuivingx)*omf),((y+11.5302205501042-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+16.8747706943903+verschuivingx)*omf),((y+10.8983898887691-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+16.7810640750429+verschuivingx)*omf),((y+10.5252859595293-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+16.5919282881983+verschuivingx)*omf),((y+10.3838647564333-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+16.3735091828077+verschuivingx)*omf),((y+10.5897092603307-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+16.3735091828077+verschuivingx)*omf),((y+11.3886270921932-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+16.3593842879796+verschuivingx)*omf),((y+11.6211710924119-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+7.78402283398803+verschuivingx)*omf),((y+10.14873693399-verschuivingy)*omf)),Array(((x+8.23395241070751+verschuivingx)*omf),((y+9.83506091591716-verschuivingy)*omf)),Array(((x+7.04780575477705+verschuivingx)*omf),((y+9.86244943149848-verschuivingy)*omf)),Array(((x+7.78402283398803+verschuivingx)*omf),((y+10.14873693399-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+7.78402283398803+verschuivingx)*omf),((y+10.14873693399-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+8.05463514831663+verschuivingx)*omf),((y+10.2172943503507-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+8.17986439880479+verschuivingx)*omf),((y+10.022474154612-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+7.88634219408427+verschuivingx)*omf),((y+9.79802613069714-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+7.39868881288486+verschuivingx)*omf),((y+9.82041925664413-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+7.23194615198729+verschuivingx)*omf),((y+10.0038706345945-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+7.55716324266354+verschuivingx)*omf),((y+10.0605424687218-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+7.78402283398803+verschuivingx)*omf),((y+10.14873693399-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+5.12544201963562+verschuivingx)*omf),((y+9.42612798516216-verschuivingy)*omf)),Array(((x+5.3709051309776+verschuivingx)*omf),((y+9.16705674343701-verschuivingy)*omf)),Array(((x+4.4846541079218+verschuivingx)*omf),((y+8.97619840844268-verschuivingy)*omf)),Array(((x+5.12544201963562+verschuivingx)*omf),((y+9.42612798516216-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+5.12544201963562+verschuivingx)*omf),((y+9.42612798516216-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+5.37796757839165+verschuivingx)*omf),((y+9.46144022223241-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+5.56813689412607+verschuivingx)*omf),((y+9.29228599392516-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+5.17487915153397+verschuivingx)*omf),((y+9.04251651220876-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+4.72753339703914+verschuivingx)*omf),((y+9.00530947217376-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+4.64398981177537+verschuivingx)*omf),((y+9.17222438788631-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+4.921836828333+verschuivingx)*omf),((y+9.27471600279753-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+5.12544201963562+verschuivingx)*omf),((y+9.42612798516216-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+3.77565328947717+verschuivingx)*omf),((y+9.76702026400131-verschuivingy)*omf)),Array(((x+3.93929536370516+verschuivingx)*omf),((y+9.50794902227616-verschuivingy)*omf)),Array(((x+3.12125724738018+verschuivingx)*omf),((y+9.248877780551-verschuivingy)*omf)),Array(((x+3.77565328947717+verschuivingx)*omf),((y+9.76702026400131-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+3.77565328947717+verschuivingx)*omf),((y+9.76702026400131-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+4.06779745567787+verschuivingx)*omf),((y+9.7701208506709-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+4.1761457342983+verschuivingx)*omf),((y+9.64747542240739-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+3.724838119059+verschuivingx)*omf),((y+9.38151398808316-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+3.38549613355464+verschuivingx)*omf),((y+9.29521432577977-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+3.27955942234389+verschuivingx)*omf),((y+9.45144944296376-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+3.55223879445222+verschuivingx)*omf),((y+9.63197248905948-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+3.77565328947717+verschuivingx)*omf),((y+9.76702026400131-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+13.8237934115207+verschuivingx)*omf),((y+10.2713823622535-verschuivingy)*omf)),Array(((x+14.4370205528382+verschuivingx)*omf),((y+9.52155715265933-verschuivingy)*omf)),Array(((x+13.8237934115207+verschuivingx)*omf),((y+10.2713823622535-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+13.8237934115207+verschuivingx)*omf),((y+10.2713823622535-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+13.9354145316257+verschuivingx)*omf),((y+10.2848182378217-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+14.684033957515+verschuivingx)*omf),((y+9.8340273870273-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+14.3291890386627+verschuivingx)*omf),((y+9.38444231993777-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+13.9157774827183+verschuivingx)*omf),((y+10.0870697102283-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+13.8237934115207+verschuivingx)*omf),((y+10.2713823622535-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+11.6557943102223+verschuivingx)*omf),((y+7.92630531115889-verschuivingy)*omf)),Array(((x+11.9558621979119+verschuivingx)*omf),((y+7.69462258501505-verschuivingy)*omf)),Array(((x+11.0291312933366+verschuivingx)*omf),((y+7.51754463521887-verschuivingy)*omf)),Array(((x+11.6557943102223+verschuivingx)*omf),((y+7.92630531115889-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+11.6557943102223+verschuivingx)*omf),((y+7.92630531115889-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+11.8432075489171+verschuivingx)*omf),((y+7.95489961044505-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+12.0568035194883+verschuivingx)*omf),((y+7.79900900289101-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+11.8352838274281+verschuivingx)*omf),((y+7.56991009897183-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+11.22687982093+verschuivingx)*omf),((y+7.52787992411748-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+11.204142185353+verschuivingx)*omf),((y+7.68669886352612-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+11.4566677441091+verschuivingx)*omf),((y+7.78212803102328-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+11.6557943102223+verschuivingx)*omf),((y+7.92630531115889-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+6.17516286210443+verschuivingx)*omf),((y+11.0758123481953-verschuivingy)*omf)),Array(((x+6.61148430844074+verschuivingx)*omf),((y+10.7759167153206-verschuivingy)*omf)),Array(((x+5.61619598750461+verschuivingx)*omf),((y+10.9531669199318-verschuivingy)*omf)),Array(((x+6.17516286210443+verschuivingx)*omf),((y+11.0758123481953-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+6.17516286210443+verschuivingx)*omf),((y+11.0758123481953-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+6.46592898978532+verschuivingx)*omf),((y+11.1579778949392-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+6.58013393211496+verschuivingx)*omf),((y+10.9914074888566-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+6.30263142518728+verschuivingx)*omf),((y+10.8089896397962-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+5.85631919958231+verschuivingx)*omf),((y+10.8210474768445-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+5.78259413877223+verschuivingx)*omf),((y+11.0119058118389-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+5.99705138341838+verschuivingx)*omf),((y+11.033609918526-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+6.17516286210443+verschuivingx)*omf),((y+11.0758123481953-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+4.43004933157415+verschuivingx)*omf),((y+12.0983169298977-verschuivingy)*omf)),Array(((x+5.20726305674961+verschuivingx)*omf),((y+11.9892796320174-verschuivingy)*omf)),Array(((x+5.12544201963562+verschuivingx)*omf),((y+11.7302083902923-verschuivingy)*omf)),Array(((x+4.43004933157415+verschuivingx)*omf),((y+12.0983169298977-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+4.43004933157415+verschuivingx)*omf),((y+12.0983169298977-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+4.60574924285052+verschuivingx)*omf),((y+12.1102025121311-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+5.09409164330983+verschuivingx)*omf),((y+12.111580550651-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+5.36315366430364+verschuivingx)*omf),((y+11.8204699133401-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+5.25652793383298+verschuivingx)*omf),((y+11.731758683627-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+4.98126473950001+verschuivingx)*omf),((y+11.7284858421425-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+4.53564153315495+verschuivingx)*omf),((y+12.0032322720305-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+4.43004933157415+verschuivingx)*omf),((y+12.0983169298977-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+5.5753715963551+verschuivingx)*omf),((y+13.3116798465945-verschuivingy)*omf)),Array(((x+6.09351407980541+verschuivingx)*omf),((y+12.6572838044976-verschuivingy)*omf)),Array(((x+5.5753715963551+verschuivingx)*omf),((y+13.3116798465945-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+5.5753715963551+verschuivingx)*omf),((y+13.3116798465945-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+5.7708808113538+verschuivingx)*omf),((y+13.4513785015408-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+6.44129655124363+verschuivingx)*omf),((y+12.7034480949114-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+6.02599019233449+verschuivingx)*omf),((y+12.6483265541188-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+5.63583303641197+verschuivingx)*omf),((y+13.2310645931854-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+5.5753715963551+verschuivingx)*omf),((y+13.3116798465945-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = newCompoundPath.pathItems.add();			line.setEntirePath(Array(Array(((x+4.04833266158549+verschuivingx)*omf),((y+11.0348157022308-verschuivingy)*omf)),Array(((x+4.34840054927513+verschuivingx)*omf),((y+10.9121702739673-verschuivingy)*omf)),Array(((x+3.5575786937165+verschuivingx)*omf),((y+10.8439573672365-verschuivingy)*omf)),Array(((x+4.04833266158549+verschuivingx)*omf),((y+11.0348157022308-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+4.04833266158549+verschuivingx)*omf),((y+11.0348157022308-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+4.1947492543158+verschuivingx)*omf),((y+11.070127939301-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+4.31308831220488+verschuivingx)*omf),((y+11.0200017881428-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+4.4207475715654+verschuivingx)*omf),((y+10.6904783270921-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+3.78426603022601+verschuivingx)*omf),((y+10.8448186413113-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+3.6750564775307+verschuivingx)*omf),((y+10.9464489821477-verschuivingy)*omf));			line.pathPoints[3].leftDirection = Array(((x+3.89244205403146+verschuivingx)*omf),((y+10.9728039688391-verschuivingy)*omf));			line.pathPoints[3].rightDirection = Array(((x+4.04833266158549+verschuivingx)*omf),((y+11.0348157022308-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['bottomColor'].color;			}else{				line.fillColor = doc.swatches['Wave' + colorname].color;			}			line.fillColor.tint = lefttint;			var line = doc.pathItems.add();			line.setEntirePath(Array(Array(((x+12.9649309040462+verschuivingx)*omf),((y+6.03133009159877-verschuivingy)*omf)),Array(((x+13.7149283684553+verschuivingx)*omf),((y+4.31326056701986-verschuivingy)*omf)),Array(((x+12.9649309040462+verschuivingx)*omf),((y+6.03133009159877-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+12.9649309040462+verschuivingx)*omf),((y+6.03133009159877-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+11.6061849235089+verschuivingx)*omf),((y+5.62308618010368-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+12.5684003199695+verschuivingx)*omf),((y+3.34139890092057-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+14.3794874446359+verschuivingx)*omf),((y+4.877222831254-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+13.9605637346123+verschuivingx)*omf),((y+6.15397551986227-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+12.9649309040462+verschuivingx)*omf),((y+6.03133009159877-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['eyes'].color;			}else{				line.fillColor = doc.swatches['eyes'].color;			}			line.fillColor.tint = 100;			var line = doc.pathItems.add();			line.setEntirePath(Array(Array(((x+13.3059954377003+verschuivingx)*omf),((y+4.8861800816328-verschuivingy)*omf)),Array(((x+13.523725523831+verschuivingx)*omf),((y+4.44968638048151-verschuivingy)*omf)),Array(((x+13.3059954377003+verschuivingx)*omf),((y+4.8861800816328-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+13.3059954377003+verschuivingx)*omf),((y+4.8861800816328-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+13.6033072483503+verschuivingx)*omf),((y+4.94578024761478-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+13.7514463892304+verschuivingx)*omf),((y+4.57991102060399-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+13.2198680302119+verschuivingx)*omf),((y+4.27605352698486-verschuivingy)*omf));			line.pathPoints[2].leftDirection = Array(((x+13.0768965337811+verschuivingx)*omf),((y+4.76112308595962-verschuivingy)*omf));			line.pathPoints[2].rightDirection = Array(((x+13.3059954377003+verschuivingx)*omf),((y+4.8861800816328-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['outline'].color;			}else{				line.fillColor = doc.swatches['outline'].color;			}			line.fillColor.tint = 100;			var line = doc.pathItems.add();			line.setEntirePath(Array(Array(((x+13.2649987917358+verschuivingx)*omf),((y+4.735973882973-verschuivingy)*omf)),Array(((x+13.2649987917358+verschuivingx)*omf),((y+4.735973882973-verschuivingy)*omf))));			line.pathPoints[0].leftDirection = Array(((x+13.2649987917358+verschuivingx)*omf),((y+4.735973882973-verschuivingy)*omf));			line.pathPoints[0].rightDirection = Array(((x+13.1881731442562+verschuivingx)*omf),((y+4.41006777303684-verschuivingy)*omf));			line.pathPoints[1].leftDirection = Array(((x+13.5840147090729+verschuivingx)*omf),((y+4.73218427704351-verschuivingy)*omf));			line.pathPoints[1].rightDirection = Array(((x+13.2649987917358+verschuivingx)*omf),((y+4.735973882973-verschuivingy)*omf));			line.closed = true;			line.filled= true;			line.stroked = false;			line.fillOverprint = false;			if (win.allGroups6.allGroups.setallcolor.value==false && win.allGroups6.allGroups.randomcolor.value==false){				line.fillColor = doc.swatches['eyes'].color;			}else{				line.fillColor = doc.swatches['eyes'].color;			}			line.fillColor.tint = 100;						l = l + correction;			verschuivingx = verschuivingx + 15+spreadxcorr;			verschuivingy = verschuivingy + 15+spreadycorr;			if (win.allGroups6.allGroups3.curvegroup.ddl.selection==0){				var size = (Math.sin(l)*win.allGroups6.allGroups3.sizegroup.et.text);			}			if (win.allGroups6.allGroups3.curvegroup.ddl.selection==1){				var size = (Math.cos(l)*win.allGroups6.allGroups3.sizegroup.et.text);			}			if (win.allGroups6.allGroups3.curvegroup.ddl.selection==2){				var size = (Math.tan(l)*win.allGroups6.allGroups3.sizegroup.et.text);			}					colorname = colorname + 1;						if (win.allGroups6.allGroups.setallcolor.value==true || win.allGroups6.allGroups.randomcolor.value==true){				var newSpot = doc.spots.add();				var newColor = new CMYKColor();				if (win.allGroups6.allGroups.randomcolor.value==true){					newColor.cyan = Math.random()*100;					newColor.magenta = Math.random()*100;					newColor.yellow = Math.random()*100;					newColor.black = Math.random()*100;				} else {					if (win.allGroups6.allGroups.setallcolor.value==true && win.allGroups6.allGroups.colorgroup.ddl.selection == 0){						newColor.cyan = win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.et.text;						newColor.magenta = win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.et.text;						newColor.yellow = win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.et.text;						newColor.black = win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.et.text;					}					if (win.allGroups6.allGroups.setallcolor.value==true && win.allGroups6.allGroups.colorgroup.ddl.selection == 1){						newColor.cyan = win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.et.text;						newColor.magenta = win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.et.text;						newColor.yellow = win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.et.text;						newColor.black = win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.et.text;					}					if (win.allGroups6.allGroups.setallcolor.value==true && win.allGroups6.allGroups.colorgroup.ddl.selection == 2){						newColor.cyan = win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.et.text;						newColor.magenta = win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.et.text;						newColor.yellow = win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.et.text;						newColor.black = win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.et.text;					}					}				newSpot.name = 'Wave' + colorname;				newSpot.colorType = ColorModel.PROCESS;				newSpot.color = newColor;				var newSpotColor = new SpotColor();				newSpotColor.spot = newSpot;			};		};		verschuivingx = 0;		verschuivingy = 0;		x = x - 15 - spreadxcorr;		y  = y - 15 - spreadycorr;		l = l + correction;	};	var illustratorversion = app.version;	var illustratorversionarray = illustratorversion.split('.');	if(illustratorversionarray[0]>13){		app.activeDocument.artboards[0].artboardRect = app.activeDocument.visibleBounds;	}	zet_nulpunt();	zoomcenterpage()};function menu(){	res =	"dialog { \		text:'BlowfishIT:', \		properties:{ closeOnKey:'OSCmnd+W', resizeable:false}, \			ddl: DropDownList { alignment:'left', preferredSize: [260, 20] }, \			allGroups6: Panel { orientation:'stack', alignChildren:'top', preferredSize: [200, 20],\			text: 'Color', \			allGroups: Group { alignment:'left', orientation:'column', preferredSize: [200, 20], alignChildren:'top', \			colorgroup: Group { alignment:'left',\				st: StaticText { text:'Color    :' }, \				ddl: DropDownList { alignment:'left', preferredSize: [165, 20] }, \				} \			colorflip:Group { orientation:'stack', alignChildren:'top', preferredSize: [200, 20],\				setcolorgroup1: Group { alignment:'left', orientation:'column', preferredSize: [200, 20], alignChildren:'top', \					cyangroup: Group { alignment:'left',\						st: StaticText { text:'Cyan     :' }, \						sl: Slider { minvalue:0, maxvalue:100, value:0 }, \						et: EditText { characters:4, justify:'right' } \						} \					magentagroup: Group { alignment:'left',\						st: StaticText { text:'Magenta:' }, \						sl: Slider { minvalue:0, maxvalue:100, value:0 }, \						et: EditText { characters:4, justify:'right' } \						} \					yellowgroup: Group { alignment:'left',\						st: StaticText { text:'Yellow   :' }, \						sl: Slider { minvalue:0, maxvalue:100, value:0 }, \						et: EditText { characters:4, justify:'right' } \						} \					blackgroup: Group { alignment:'left',\						st: StaticText { text:'Black     :' }, \						sl: Slider { minvalue:0, maxvalue:100, value:100 }, \						et: EditText { characters:4, justify:'right' } \						} \				} \				setcolorgroup2: Group { alignment:'left', orientation:'column', preferredSize: [200, 20], alignChildren:'top', \					cyangroup: Group { alignment:'left',\						st: StaticText { text:'Cyan     :' }, \						sl: Slider { minvalue:0, maxvalue:100, value:0 }, \						et: EditText { characters:4, justify:'right' } \						} \					magentagroup: Group { alignment:'left',\						st: StaticText { text:'Magenta:' }, \						sl: Slider { minvalue:0, maxvalue:100, value:0 }, \						et: EditText { characters:4, justify:'right' } \						} \					yellowgroup: Group { alignment:'left',\						st: StaticText { text:'Yellow   :' }, \						sl: Slider { minvalue:0, maxvalue:100, value:50 }, \						et: EditText { characters:4, justify:'right' } \						} \					blackgroup: Group { alignment:'left',\						st: StaticText { text:'Black     :' }, \						sl: Slider { minvalue:0, maxvalue:100, value:0 }, \						et: EditText { characters:4, justify:'right' } \						} \				} \				setcolorgroup3: Group { alignment:'left', orientation:'column', preferredSize: [200, 20], alignChildren:'top', \					cyangroup: Group { alignment:'left',\						st: StaticText { text:'Cyan     :' }, \						sl: Slider { minvalue:0, maxvalue:100, value:0 }, \						et: EditText { characters:4, justify:'right' } \						} \					magentagroup: Group { alignment:'left',\						st: StaticText { text:'Magenta:' }, \						sl: Slider { minvalue:0, maxvalue:100, value:0 }, \						et: EditText { characters:4, justify:'right' } \						} \					yellowgroup: Group { alignment:'left',\						st: StaticText { text:'Yellow   :' }, \						sl: Slider { minvalue:0, maxvalue:100, value:0 }, \						et: EditText { characters:4, justify:'right' } \						} \					blackgroup: Group { alignment:'left',\						st: StaticText { text:'Black     :' }, \						sl: Slider { minvalue:0, maxvalue:100, value:0 }, \						et: EditText { characters:4, justify:'right' } \						} \				} \			} \			setallcolor: Checkbox { \			alignment:'left', text:'Set all colors to current value', value:false \				} \			randomcolor: Checkbox { \			alignment:'left', text:'Set color to random', value:false \			}, \			}, \			allGroups2: Group { orientation:'column', preferredSize: [200, 20], alignChildren:'top', \			percentageleftgroup: Group { alignment:'left',\				st: StaticText { text:'Body     :' }, \				sl: Slider { minvalue:0, maxvalue:100, value:100 }, \					et: EditText { characters:4, justify:'right' } \				} \			randomcolor: Checkbox { \			alignment:'left', text:'Set percentage to random', value:false \			}, \			}, \			allGroups3: Group { orientation:'column', preferredSize: [200, 20], alignChildren:'top', \			curvegroup: Group { alignment:'left',\				st: StaticText { text:'Curve  :' }, \				ddl: DropDownList { alignment:'left', preferredSize: [165, 20] }, \				} \			sizegroup: Group { alignment:'left',\				st: StaticText { text:'Size     :' }, \				sl: Slider { minvalue:1, maxvalue:100, value:100 }, \					et: EditText { characters:4, justify:'right' } \				} \			heightgroup: Group { alignment:'left',\				st: StaticText { text:'Height :' }, \				sl: Slider { minvalue:1, maxvalue:100, value:10 }, \				et: EditText { characters:4, justify:'right' } \				} \			randomcolor: Checkbox { \			alignment:'left', text:'Set size and height to random', value:false \			}, \			}, \			allGroups4: Group { orientation:'column', preferredSize: [200, 20], alignChildren:'top', \			radio1: RadioButton { alignment:'left', text:'Positive', value:true }, \			radio2: RadioButton { alignment:'left', text:'Negative' }, \			radio3: RadioButton { alignment:'left', text:'Positive and Negative' } \			}, \			allGroups5: Group { orientation:'column', preferredSize: [200, 20] \			rowsgroup: Group { alignment:'left',\				st: StaticText { text:'Rows     :' }, \				sl: Slider { minvalue:1, maxvalue:100, value:5 }, \					et: EditText { characters:4, justify:'right' } \				} \			columngroup: Group { alignment:'left',\				st: StaticText { text:'Columns:' }, \				sl: Slider { minvalue:1, maxvalue:100, value:5 }, \				et: EditText { characters:4, justify:'right' } \				} \			randomcolor: Checkbox { \			alignment:'left', text:'Set rows and columns to random', value:false \			}, \			}, \			allGroups7: Group { orientation:'column', preferredSize: [200, 20], alignChildren:'top', \			spreadxgroup: Group { alignment:'left',\				st: StaticText { text:'Spread x:' }, \				sl: Slider { minvalue:0, maxvalue:20, value:0 }, \				et: EditText { characters:4, justify:'right' } \				} \			spreadygroup: Group { alignment:'left',\				st: StaticText { text:'Spread y:' }, \				sl: Slider { minvalue:0, maxvalue:20, value:0 }, \				et: EditText { characters:4, justify:'right' } \				} \			randomcolor: Checkbox { \			alignment:'left', text:'Set spread x an y to random', value:false \				} \			standard: Checkbox { \			alignment:'left', text:'Standard', value:true \			}, \			}, \			} \			buttons: Group { orientation: 'row', alignment: 'center', \			cancelBtn: Button { text:'Cancel', properties:{name:'cancel'} }, \			applyBtn: Button { text:'Apply', properties:{name:'apply'} }, \		} \	}";	win = new Window (res);	win.frameLocation = [100, 100];	// Global menu startup settings	win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.sl.value);	win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.sl.value);	win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.sl.value);	win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.sl.value);	win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.sl.value);	win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.sl.value);	win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.sl.value);	win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.sl.value);	win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.sl.value);	win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.sl.value);	win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.sl.value);	win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.sl.value);	win.allGroups6.allGroups2.percentageleftgroup.et.text = Math.round(win.allGroups6.allGroups2.percentageleftgroup.sl.value);	win.allGroups6.allGroups3.sizegroup.et.text = Math.round(win.allGroups6.allGroups3.sizegroup.sl.value);	win.allGroups6.allGroups3.heightgroup.et.text = Math.round(win.allGroups6.allGroups3.heightgroup.sl.value);	win.allGroups6.allGroups5.rowsgroup.et.text = Math.round(win.allGroups6.allGroups5.rowsgroup.sl.value);	win.allGroups6.allGroups5.columngroup.et.text = Math.round(win.allGroups6.allGroups5.columngroup.sl.value);	win.allGroups6.allGroups2.percentageleftgroup.enabled = true;	win.allGroups6.allGroups3.sizegroup.enabled = true;	win.allGroups6.allGroups3.heightgroup.enabled = true;	win.allGroups6.allGroups5.rowsgroup.enabled = true;	win.allGroups6.allGroups5.columngroup.enabled = true;	win.allGroups6.allGroups.colorgroup.enabled = true;	win.allGroups6.allGroups.setallcolor.enabled = true;	win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.enabled = false;	win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.enabled = false;	win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.enabled = false;	win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.enabled = false;	win.allGroups6.allGroups7.randomcolor.enabled = false;	win.allGroups6.allGroups7.spreadxgroup.enabled = false;	win.allGroups6.allGroups7.spreadygroup.enabled = false;	win.allGroups6.allGroups7.spreadxgroup.et.text = Math.round(win.allGroups6.allGroups7.spreadxgroup.sl.value);	win.allGroups6.allGroups7.spreadygroup.et.text = Math.round(win.allGroups6.allGroups7.spreadygroup.sl.value);	win.ddl.onChange = function () {		if (this.selection != null) {			for (var g = 0; g < this.items.length; g++)				this.items[g].group.visible = false; //hide all other groups				this.selection.group.visible = true;//show this group			}		if (win.ddl.selection == 0){win.allGroups6.text = 'Color Top';}		if (win.ddl.selection == 1){win.allGroups6.text = 'Percentage';}		if (win.ddl.selection == 3){win.allGroups6.text = 'Pos or Negative';}		if (win.ddl.selection == 2){win.allGroups6.text = 'Size';}		if (win.ddl.selection == 4){win.allGroups6.text = 'Rows and Columns';}		if (win.ddl.selection == 5){win.allGroups6.text = 'Spread';}		}	var item = win.ddl.add ('item', 'Color');	item.group = win.allGroups6.allGroups;	item = win.ddl.add ('item', 'Percentage Blowfish');	item.group = win.allGroups6.allGroups2;	item = win.ddl.add ('item', 'Size');	item.group = win.allGroups6.allGroups3;	item = win.ddl.add ('item', 'Pos or Negative');	item.group = win.allGroups6.allGroups4;	item = win.ddl.add ('item', 'Rows and Columns');	item.group = win.allGroups6.allGroups5;	item = win.ddl.add ('item', 'Spread');	item.group = win.allGroups6.allGroups7;	win.ddl.selection = win.ddl.items[0];	// Color dropdownlist	win.allGroups6.allGroups.colorgroup.ddl.onChange = function () {		if (this.selection != null) {			for (var g = 0; g < this.items.length; g++)				this.items[g].group.visible = false; //hide all other groups				this.selection.group.visible = true;//show this group			}		if (win.allGroups6.allGroups.colorgroup.ddl.selection == 0){win.allGroups6.text = 'Outline';}		if (win.allGroups6.allGroups.colorgroup.ddl.selection == 1){win.allGroups6.text = 'Bodycolor';}		if (win.allGroups6.allGroups.colorgroup.ddl.selection == 2){win.allGroups6.text = 'Eyes';}		}		var item = win.allGroups6.allGroups.colorgroup.ddl.add ('item', 'Outline');	item.group = win.allGroups6.allGroups.colorflip.setcolorgroup1;	item  = win.allGroups6.allGroups.colorgroup.ddl.add ('item', 'Bodycolor');	item.group = win.allGroups6.allGroups.colorflip.setcolorgroup2;	item  = win.allGroups6.allGroups.colorgroup.ddl.add ('item', 'Eyes');	item.group = win.allGroups6.allGroups.colorflip.setcolorgroup3;	win.allGroups6.allGroups.colorgroup.ddl.selection = win.allGroups6.allGroups.colorgroup.ddl.items[0];	var dropdownlistsize = win.allGroups6.allGroups3.curvegroup.ddl.add ('item', 'Sin');	dropdownlistsize = win.allGroups6.allGroups3.curvegroup.ddl.add ('item', 'Cos');	dropdownlistsize = win.allGroups6.allGroups3.curvegroup.ddl.add ('item', 'Tan');	win.allGroups6.allGroups3.curvegroup.ddl.selection = win.allGroups6.allGroups3.curvegroup.ddl.items[0];	// random color 	win.allGroups6.allGroups.randomcolor.onClick = function () { 		if (win.allGroups6.allGroups.randomcolor.value==true){			if (win.allGroups6.allGroups.setallcolor.value==true){				win.allGroups6.allGroups.colorgroup.enabled = false;			};			if (win.allGroups6.allGroups.setallcolor.value==false){				win.allGroups6.allGroups.colorgroup.enabled = false;			};			win.allGroups6.allGroups.setallcolor.enabled = false;			win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.enabled = false;			win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.enabled = false;			win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.enabled = false;			win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.enabled = false;			win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.enabled = false;			win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.enabled = false;			win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.enabled = false;			win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.enabled = false;			win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.enabled = false;			win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.enabled = false;			win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.enabled = false;			win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.enabled = false;		};		if (win.allGroups6.allGroups.randomcolor.value==false){			if (win.allGroups6.allGroups.setallcolor.value==true){				win.allGroups6.allGroups.colorgroup.enabled = false;			};			if (win.allGroups6.allGroups.setallcolor.value==false){				win.allGroups6.allGroups.colorgroup.enabled = true;			};			win.allGroups6.allGroups.setallcolor.enabled = true;			win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.enabled = true;			win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.enabled = true;			win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.enabled = true;			win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.enabled = true;			win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.enabled = true;			win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.enabled = true;			win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.enabled = true;			win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.enabled = true;			win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.enabled = true;			win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.enabled = true;			win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.enabled = true;			win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.enabled = true;		};	}	// random color	win.allGroups6.allGroups.setallcolor.onClick = function () { 		if (win.allGroups6.allGroups.setallcolor.value==true){			win.allGroups6.allGroups.colorgroup.enabled = false;		};		if (win.allGroups6.allGroups.setallcolor.value==false){			win.allGroups6.allGroups.colorgroup.enabled = true;		};	}	// random percentage	win.allGroups6.allGroups2.randomcolor.onClick = function () { 		if (win.allGroups6.allGroups2.randomcolor.value==true){			win.allGroups6.allGroups2.percentageleftgroup.enabled = false;		};		if (win.allGroups6.allGroups2.randomcolor.value==false){			win.allGroups6.allGroups2.percentageleftgroup.enabled = true;		};	}	// random percentage	win.allGroups6.allGroups3.randomcolor.onClick = function () { 		if (win.allGroups6.allGroups3.randomcolor.value==true){			win.allGroups6.allGroups3.sizegroup.enabled = false;			win.allGroups6.allGroups3.heightgroup.enabled = false;		};		if (win.allGroups6.allGroups3.randomcolor.value==false){			win.allGroups6.allGroups3.sizegroup.enabled = true;			win.allGroups6.allGroups3.heightgroup.enabled = true;		};	}	// random rows and columns	win.allGroups6.allGroups5.randomcolor.onClick = function () { 		if (win.allGroups6.allGroups5.randomcolor.value==true){			win.allGroups6.allGroups5.rowsgroup.enabled = false;			win.allGroups6.allGroups5.columngroup.enabled = false;		};		if (win.allGroups6.allGroups5.randomcolor.value==false){			win.allGroups6.allGroups5.rowsgroup.enabled = true;			win.allGroups6.allGroups5.columngroup.enabled = true;		};	}	// spread standard	win.allGroups6.allGroups7.standard.onClick = function () { 		if (win.allGroups6.allGroups7.standard.value==true){			win.allGroups6.allGroups7.spreadxgroup.enabled = false;			win.allGroups6.allGroups7.spreadygroup.enabled = false;			win.allGroups6.allGroups7.randomcolor.enabled = false;		};		if (win.allGroups6.allGroups7.standard.value==false){			win.allGroups6.allGroups7.spreadxgroup.enabled = true;			win.allGroups6.allGroups7.spreadygroup.enabled = true;			win.allGroups6.allGroups7.randomcolor.enabled = true;		};	}	// spread standard random	win.allGroups6.allGroups7.randomcolor.onClick = function () { 		if (win.allGroups6.allGroups7.randomcolor.value==true){			win.allGroups6.allGroups7.spreadxgroup.enabled = false;			win.allGroups6.allGroups7.spreadygroup.enabled = false;		};		if (win.allGroups6.allGroups7.randomcolor.value==false){			win.allGroups6.allGroups7.spreadxgroup.enabled = true;			win.allGroups6.allGroups7.spreadygroup.enabled = true;		};	}	// sliders spread	win.allGroups6.allGroups7.spreadxgroup.sl.onChange = function () { 		win.allGroups6.allGroups7.spreadxgroup.et.text = Math.round(win.allGroups6.allGroups7.spreadxgroup.sl.value);	}	win.allGroups6.allGroups7.spreadygroup.sl.onChange = function () { 		win.allGroups6.allGroups7.spreadygroup.et.text = Math.round(win.allGroups6.allGroups7.spreadygroup.sl.value);	}	win.allGroups6.allGroups7.spreadxgroup.et.onChange = function () { 		if (win.allGroups6.allGroups7.spreadxgroup.et.text > 20){win.allGroups6.allGroups7.spreadxgroup.et.text = 20}		if (win.allGroups6.allGroups7.spreadxgroup.et.text < 0){win.allGroups6.allGroups7.spreadxgroup.et.text = 0}		win.allGroups6.allGroups7.spreadxgroup.sl.value= win.allGroups6.allGroups7.spreadxgroup.et.text	}	win.allGroups6.allGroups7.spreadygroup.et.onChange = function () { 		if (win.allGroups6.allGroups7.spreadygroup.et.text > 20){win.allGroups6.allGroups7.spreadygroup.et.text = 20}		if (win.allGroups6.allGroups7.spreadygroup.et.text < 0){win.allGroups6.allGroups7.spreadygroup.et.text = 0}		win.allGroups6.allGroups7.spreadygroup.sl.value= win.allGroups6.allGroups7.spreadygroup.et.text	}	// sliders color 1	win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.sl.onChange = function () { 		win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.sl.value);	}	win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.sl.onChange = function () { 		win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.sl.value);	}	win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.sl.onChange = function () { 		win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.sl.value);	}	win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.sl.onChange = function () { 		win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.sl.value);	}	win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.et.onChange = function () { 		if (win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.et.text > 100){win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.et.text = 100}		if (win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.et.text < 0){win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.et.text = 0}		win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.sl.value= win.allGroups6.allGroups.colorflip.setcolorgroup1.cyangroup.et.text	}	win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.et.onChange = function () { 		if (win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.et.text > 100){win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.et.text = 100}		if (win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.et.text < 0){win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.et.text = 0}		win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.sl.value= win.allGroups6.allGroups.colorflip.setcolorgroup1.magentagroup.et.text	}	win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.et.onChange = function () { 		if (win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.et.text > 100){win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.et.text = 100}		if (win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.et.text < 0){win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.et.text = 0}		win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.sl.value= win.allGroups6.allGroups.colorflip.setcolorgroup1.yellowgroup.et.text	}	win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.et.onChange = function () { 		if (win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.et.text > 100){win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.et.text = 100}		if (win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.et.text < 0){win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.et.text = 0}		win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.sl.value= win.allGroups6.allGroups.colorflip.setcolorgroup1.blackgroup.et.text	}	// sliders color 2	win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.sl.onChange = function () { 		win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.sl.value);	}	win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.sl.onChange = function () { 		win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.sl.value);	}	win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.sl.onChange = function () { 		win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.sl.value);	}	win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.sl.onChange = function () { 		win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.sl.value);	}	win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.et.onChange = function () { 		if (win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.et.text > 100){win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.et.text = 100}		if (win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.et.text < 0){win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.et.text = 0}		win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.sl.value= win.allGroups6.allGroups.colorflip.setcolorgroup2.cyangroup.et.text	}	win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.et.onChange = function () { 		if (win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.et.text > 100){win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.et.text = 100}		if (win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.et.text < 0){win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.et.text = 0}		win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.sl.value= win.allGroups6.allGroups.colorflip.setcolorgroup2.magentagroup.et.text	}	win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.et.onChange = function () { 		if (win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.et.text > 100){win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.et.text = 100}		if (win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.et.text < 0){win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.et.text = 0}		win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.sl.value= win.allGroups6.allGroups.colorflip.setcolorgroup2.yellowgroup.et.text	}	win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.et.onChange = function () { 		if (win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.et.text > 100){win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.et.text = 100}		if (win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.et.text < 0){win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.et.text = 0}		win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.sl.value= win.allGroups6.allGroups.colorflip.setcolorgroup2.blackgroup.et.text	}	// sliders color 3	win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.sl.onChange = function () { 		win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.sl.value);	}	win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.sl.onChange = function () { 		win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.sl.value);	}	win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.sl.onChange = function () { 		win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.sl.value);	}	win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.sl.onChange = function () { 		win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.et.text = Math.round(win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.sl.value);	}	win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.et.onChange = function () { 		if (win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.et.text > 100){win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.et.text = 100}		if (win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.et.text < 0){win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.et.text = 0}		win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.sl.value= win.allGroups6.allGroups.colorflip.setcolorgroup3.cyangroup.et.text	}	win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.et.onChange = function () { 		if (win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.et.text > 100){win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.et.text = 100}		if (win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.et.text < 0){win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.et.text = 0}		win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.sl.value= win.allGroups6.allGroups.colorflip.setcolorgroup3.magentagroup.et.text	}	win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.et.onChange = function () { 		if (win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.et.text > 100){win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.et.text = 100}		if (win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.et.text < 0){win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.et.text = 0}		win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.sl.value= win.allGroups6.allGroups.colorflip.setcolorgroup3.yellowgroup.et.text	}	win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.et.onChange = function () { 		if (win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.et.text > 100){win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.et.text = 100}		if (win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.et.text < 0){win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.et.text = 0}		win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.sl.value= win.allGroups6.allGroups.colorflip.setcolorgroup3.blackgroup.et.text	}	// sliders percentage blocks	win.allGroups6.allGroups2.percentageleftgroup.sl.onChange = function () { 		win.allGroups6.allGroups2.percentageleftgroup.et.text = Math.round(win.allGroups6.allGroups2.percentageleftgroup.sl.value);	}	win.allGroups6.allGroups2.percentageleftgroup.et.onChange = function () { 		if (win.allGroups6.allGroups2.percentageleftgroup.et.text > 100){win.allGroups6.allGroups2.percentageleftgroup.et.text = 100}		if (win.allGroups6.allGroups2.percentageleftgroup.et.text < 0){win.allGroups6.allGroups2.percentageleftgroup.et.text = 0}		win.allGroups6.allGroups2.percentageleftgroup.sl.value= win.allGroups6.allGroups2.percentageleftgroup.et.text	}	// sliders size	win.allGroups6.allGroups3.sizegroup.sl.onChange = function () { 		win.allGroups6.allGroups3.sizegroup.et.text = Math.round(win.allGroups6.allGroups3.sizegroup.sl.value);	}	win.allGroups6.allGroups3.heightgroup.sl.onChange = function () { 		win.allGroups6.allGroups3.heightgroup.et.text = Math.round(win.allGroups6.allGroups3.heightgroup.sl.value);	}	win.allGroups6.allGroups3.sizegroup.et.onChange = function () { 		if (win.allGroups6.allGroups3.sizegroup.et.text > 100){win.allGroups6.allGroups3.sizegroup.et.text = 100}		if (win.allGroups6.allGroups3.sizegroup.et.text < 1){win.allGroups6.allGroups3.sizegroup.et.text = 1}		win.allGroups6.allGroups3.sizegroup.sl.value= win.allGroups6.allGroups3.sizegroup.et.text	}	win.allGroups6.allGroups3.heightgroup.et.onChange = function () { 		if (win.allGroups6.allGroups3.heightgroup.et.text > 100){win.allGroups6.allGroups3.heightgroup.et.text = 100}		if (win.allGroups6.allGroups3.heightgroup.et.text < 1){win.allGroups6.allGroups3.heightgroup.et.text = 1}		win.allGroups6.allGroups3.heightgroup.sl.value= win.allGroups6.allGroups3.heightgroup.et.text	}	// sliders rows and columns	win.allGroups6.allGroups5.rowsgroup.sl.onChange = function () { 		win.allGroups6.allGroups5.rowsgroup.et.text = Math.round(win.allGroups6.allGroups5.rowsgroup.sl.value);	}	win.allGroups6.allGroups5.columngroup.sl.onChange = function () { 		win.allGroups6.allGroups5.columngroup.et.text = Math.round(win.allGroups6.allGroups5.columngroup.sl.value);	}	win.allGroups6.allGroups5.rowsgroup.et.onChange = function () { 		if (win.allGroups6.allGroups5.rowsgroup.et.text > 10){win.allGroups6.allGroups5.rowsgroup.et.text = 10}		if (win.allGroups6.allGroups5.rowsgroup.et.text < 1){win.allGroups6.allGroups5.rowsgroup.et.text = 1}		win.allGroups6.allGroups5.rowsgroup.sl.value= win.allGroups6.allGroups5.rowsgroup.et.text	}	win.allGroups6.allGroups5.columngroup.et.onChange = function () { 		if (win.allGroups6.allGroups5.columngroup.et.text > 10){win.allGroups6.allGroups5.columngroup.et.text = 10}		if (win.allGroups6.allGroups5.columngroup.et.text < 1){win.allGroups6.allGroups5.columngroup.et.text = 1}		win.allGroups6.allGroups5.columngroup.sl.value= win.allGroups6.allGroups5.columngroup.et.text	}	// apply button	win.buttons.applyBtn.onClick = function () {			archs();	}	win.center();	win.show();};function zoomcenterpage(){		var myView=app.activeDocument.views[0];		myView.centerPoint = [(app.activeDocument.width/2),(app.activeDocument.height/2)];		myView.zoom = 1		myView.screenMode.FULLSCREEN;}	function zet_nulpunt(){	// zet nulpunt linksonder	app.activeDocument.pageOrigin = Array(0,0);	app.activeDocument.rulerOrigin = Array(0,0);}